{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"SDL2 is a cross platform library for interfacing with multimedia and HID hardware and software devices. The library is free, open-source and, currently has permissive licensing. SDL2 is suitable for professional products and, has found use in both large and small projects. Setup Guide In general, setting up an environment to work with Chez-SDL is about the same across all supported platforms. Install Chez Scheme Install the SDL2 development library Install Chez-SDL It is always recommended to build Chez Scheme from it's source code. Windows Installing Chez Scheme For an installation on Windows, a development environment should have the following installed: Windows Subsystem for Linux Visual Studio Community WiX Toolset SDL2 The documentation for building Chez provides instructions for building on Windows. Install libSDL2 Navigate to SDL2's website and, download the runtime library. This guide will be using the the 64-bit version. Unzip the library and place the dll file in a directory for libraries. This can be any directory of your choosing. I recommend placing the file in Chez's installation directory. A highly recommended alternative would be to use a package manager for Windows like MSYS2 . This will handle downloading, installing, and maintaining the library for you. All that's required for installing the library is a single command. pacman -S mingw-w64-x86_64-SDL2 Install Chez-SDL To install Chez-SDL, simply clone the repository into a directory for your Chez libraries. This can be any directory of your choosing. git clone https://github.com/steven741/chez-sdl.git Add the path of the library to CHEZSCHEMELIBDIRS and, verify that sdl can be imported in Chez. macOS & Linux Building on macOS and Linux is about the same. For macOS, common development tools should be installed. Xcode with CLI tooling and brew . The most common Linux distributions should have the required tools and libraries avaliable in their package manager. The documentation for building Chez goes into enough detail for building on a *nix type system and, I will only go over a brief overview here. Install libuuid, libncurses and, libX. Install the typical GNU build tools like gcc and make. Run ./configure and make . If project builds correctly run make install . To install the SDL2 bindings clone the Chez-SDL repo somewhere and, export CHEZSCHEMELIBDIRS with the path to the library's source. Navigating Documentation The documentation is seperated into 2 main parts. There is a section containing tutorials and, there is an API reference guide. The tutorials move at a very fast pace and, try to cover as much useful information as possible. They are provided to give a realistic overview of using SDL2 with Chez. The API reference guide contains all the SDL2 procedures avaliable in the library. The entries also provide details about any inconsistencies in the interface. The conventional C function names are provided where applicable to help improve searchability of procedures.","title":"Getting Started"},{"location":"#setup-guide","text":"In general, setting up an environment to work with Chez-SDL is about the same across all supported platforms. Install Chez Scheme Install the SDL2 development library Install Chez-SDL It is always recommended to build Chez Scheme from it's source code.","title":"Setup Guide"},{"location":"#windows","text":"","title":"Windows"},{"location":"#installing-chez-scheme","text":"For an installation on Windows, a development environment should have the following installed: Windows Subsystem for Linux Visual Studio Community WiX Toolset SDL2 The documentation for building Chez provides instructions for building on Windows.","title":"Installing Chez Scheme"},{"location":"#install-libsdl2","text":"Navigate to SDL2's website and, download the runtime library. This guide will be using the the 64-bit version. Unzip the library and place the dll file in a directory for libraries. This can be any directory of your choosing. I recommend placing the file in Chez's installation directory. A highly recommended alternative would be to use a package manager for Windows like MSYS2 . This will handle downloading, installing, and maintaining the library for you. All that's required for installing the library is a single command. pacman -S mingw-w64-x86_64-SDL2","title":"Install libSDL2"},{"location":"#install-chez-sdl","text":"To install Chez-SDL, simply clone the repository into a directory for your Chez libraries. This can be any directory of your choosing. git clone https://github.com/steven741/chez-sdl.git Add the path of the library to CHEZSCHEMELIBDIRS and, verify that sdl can be imported in Chez.","title":"Install Chez-SDL"},{"location":"#macos-linux","text":"Building on macOS and Linux is about the same. For macOS, common development tools should be installed. Xcode with CLI tooling and brew . The most common Linux distributions should have the required tools and libraries avaliable in their package manager. The documentation for building Chez goes into enough detail for building on a *nix type system and, I will only go over a brief overview here. Install libuuid, libncurses and, libX. Install the typical GNU build tools like gcc and make. Run ./configure and make . If project builds correctly run make install . To install the SDL2 bindings clone the Chez-SDL repo somewhere and, export CHEZSCHEMELIBDIRS with the path to the library's source.","title":"macOS &amp; Linux"},{"location":"#navigating-documentation","text":"The documentation is seperated into 2 main parts. There is a section containing tutorials and, there is an API reference guide. The tutorials move at a very fast pace and, try to cover as much useful information as possible. They are provided to give a realistic overview of using SDL2 with Chez. The API reference guide contains all the SDL2 procedures avaliable in the library. The entries also provide details about any inconsistencies in the interface. The conventional C function names are provided where applicable to help improve searchability of procedures.","title":"Navigating Documentation"},{"location":"sdl/","text":"TODO","title":"Overview of SDL 2"},{"location":"sdl/#todo","text":"","title":"TODO"},{"location":"ref/audio/","text":"Audio Device Management, Playing and Recording todo","title":"Audio"},{"location":"ref/audio/#audio-device-management-playing-and-recording","text":"todo","title":"Audio Device Management, Playing and Recording"},{"location":"ref/basics/","text":"Initialization and Shutdown Procedure: ( sdl-init flags... ) \u2192 number Parameters: flags : One or more flags . Returns: 0 on proper startup or a negative number on error. C Function Name: SDL_Init Other Docs: SDL Wiki Examples: (sdl-init SDL-INIT-EVERYTHING) (sdl-init SDL-INIT-VIDEO SDL-INIT-AUDIO SDL-INIT-JOYSTICK) Procedure: ( sdl-init-sub-system flags... ) \u2192 number Parameters: flags : One or more flags . Returns: 0 on proper startup or a negative number on error. C Function Name: SDL_InitSubSystem Other Docs: SDL Wiki Examples: (sdl-init-sub-system SDL-INIT-EVERYTHING) (sdl-init-sub-system SDL-INIT-VIDEO SDL-INIT-AUDIO SDL-INIT-JOYSTICK) Procedure: ( sdl-quit ) \u2192 void C Function Name: SDL_Quit Other Docs: SDL Wiki Procedure: ( sdl-quit-sub-system flags... ) \u2192 void Parameters: flags : One or more flags . C Function Name: SDL_QuitSubSystem Other Docs: SDL Wiki Examples: (sdl-quit-sub-system SDL-INIT-EVERYTHING) (sdl-quit-sub-system SDL-INIT-VIDEO SDL-INIT-AUDIO SDL-INIT-JOYSTICK) Procedure: ( sdl-set-main-ready! ) \u2192 void C Function Name: SDL_SetMainReady Other Docs: SDL Wiki Procedure: ( sdl-init? flags... ) \u2192 boolean Parameters: flags : One or more flags . Returns: #t if systems were initialized and #f otherwise. C Function Name: SDL_WasInit Other Docs: SDL Wiki Examples: (if (sdl-init? SDL-INIT-EVERYTHING) <everything-was-initialized> <noting-was-initialized>) (if (sdl-init? SDL-INIT-VIDEO SDL-INIT-AUDIO SDL-INIT-JOYSTICK) <systems-were-initialized> <systems-were-not-initialized>) Configuration Variables Procedure: ( sdl-clear-hints! ) \u2192 void C Function Name: SDL_ClearHints Other Docs: SDL Wiki Procedure: ( sdl-get-hint name ) \u2192 string Parameters: name : A string. Name of the hint. Returns: Returns the string value of a hint. C Function Name: SDL_GetHint Other Docs: SDL Wiki Procedure: ( sdl-get-hint-boolean name default ) \u2192 boolean Parameters: name : A string. Name of the hint. default : A boolean. Return value if hint not found. Returns: The setting of the hint or, default if the hint isn't applicable to the system. C Function Name: SDL_GetHintBoolean Other Docs: SDL Wiki Procedure: ( sdl-set-hint! name value ) \u2192 boolean Parameters: name : A string. Name of the hint. value : A string. Value to set hint. Returns: #t if hint was set or #f otherwise. C Function Name: SDL_SetHint Other Docs: SDL Wiki Procedure: ( sdl-set-hint-w/-priority! name value priority ) \u2192 boolean Parameters: name : A string. Name of the hint. value : A string. Value to set hint. priority SDL-HINT-DEFAULT SDL-HINT-NORMAL SDL-HINT-OVERRIDE Returns: #t if hint was set or #f otherwise. C Function Name: SDL_SetHintWithPriority Other Docs: SDL Wiki Procedure: ( sdl-make-hint-callback procedure ) \u2192 hint-callback Parameters: procedure : A procedure of 3 arguments. Returns: A callback that can be used with sdl-add-hint-callback! and sdl-del-hint-callback! . Examples: (define my-hint-callback (sdl-make-hint-callback (lambda (name old-val new-val) (printf \"~s~n~d~n~d~n\" name old-val new-val)))) Procedure: ( sdl-add-hint-callback! name callback ) \u2192 void Parameters: name : A string. Name of the hint. callback : A callback made with sdl-make-hint-callback . C Function Name: SDL_AddHintCallback Other Docs: SDL Wiki Procedure: ( sdl-del-hint-callback! name callback ) \u2192 void Parameters: name : A string. Name of the hint. callback : A callback made with sdl-make-hint-callback . C Function Name: SDL_DelHintCallback Other Docs: SDL Wiki Error Handling Procedure: ( sdl-clear-error! ) \u2192 void C Function Name: SDL_ClearError Other Docs: SDL Wiki Procedure: ( sdl-get-error ) \u2192 string Returns: A message describing an error that has occured. C Function Name: SDL_GetError Other Docs: SDL Wiki Procedure: ( sdl-set-error! msg ) \u2192 number Parameters: msg : A string. Returns: Always returns -1 . C Function Name: SDL_SetError Other Docs: SDL Wiki Querying SDL Version Procedure: ( sdl-get-version ) \u2192 list Returns: A list of 3 numbers. (major minor patch) C Function Name: SDL_GetVersion Other Docs: SDL Wiki Procedure: ( sdl-get-revision ) \u2192 string Returns: A string identifying the version of SDL being used. C Function Name: SDL_GetRevision Other Docs: SDL Wiki Procedure: ( sdl-get-revision-num ) \u2192 number Returns: A number identifying the version of SDL being used. C Function Name: SDL_GetRevisionNumber Other Docs: SDL Wiki","title":"Basics"},{"location":"ref/basics/#initialization-and-shutdown","text":"Procedure: ( sdl-init flags... ) \u2192 number Parameters: flags : One or more flags . Returns: 0 on proper startup or a negative number on error. C Function Name: SDL_Init Other Docs: SDL Wiki Examples: (sdl-init SDL-INIT-EVERYTHING) (sdl-init SDL-INIT-VIDEO SDL-INIT-AUDIO SDL-INIT-JOYSTICK) Procedure: ( sdl-init-sub-system flags... ) \u2192 number Parameters: flags : One or more flags . Returns: 0 on proper startup or a negative number on error. C Function Name: SDL_InitSubSystem Other Docs: SDL Wiki Examples: (sdl-init-sub-system SDL-INIT-EVERYTHING) (sdl-init-sub-system SDL-INIT-VIDEO SDL-INIT-AUDIO SDL-INIT-JOYSTICK) Procedure: ( sdl-quit ) \u2192 void C Function Name: SDL_Quit Other Docs: SDL Wiki Procedure: ( sdl-quit-sub-system flags... ) \u2192 void Parameters: flags : One or more flags . C Function Name: SDL_QuitSubSystem Other Docs: SDL Wiki Examples: (sdl-quit-sub-system SDL-INIT-EVERYTHING) (sdl-quit-sub-system SDL-INIT-VIDEO SDL-INIT-AUDIO SDL-INIT-JOYSTICK) Procedure: ( sdl-set-main-ready! ) \u2192 void C Function Name: SDL_SetMainReady Other Docs: SDL Wiki Procedure: ( sdl-init? flags... ) \u2192 boolean Parameters: flags : One or more flags . Returns: #t if systems were initialized and #f otherwise. C Function Name: SDL_WasInit Other Docs: SDL Wiki Examples: (if (sdl-init? SDL-INIT-EVERYTHING) <everything-was-initialized> <noting-was-initialized>) (if (sdl-init? SDL-INIT-VIDEO SDL-INIT-AUDIO SDL-INIT-JOYSTICK) <systems-were-initialized> <systems-were-not-initialized>)","title":"Initialization and Shutdown"},{"location":"ref/basics/#configuration-variables","text":"Procedure: ( sdl-clear-hints! ) \u2192 void C Function Name: SDL_ClearHints Other Docs: SDL Wiki Procedure: ( sdl-get-hint name ) \u2192 string Parameters: name : A string. Name of the hint. Returns: Returns the string value of a hint. C Function Name: SDL_GetHint Other Docs: SDL Wiki Procedure: ( sdl-get-hint-boolean name default ) \u2192 boolean Parameters: name : A string. Name of the hint. default : A boolean. Return value if hint not found. Returns: The setting of the hint or, default if the hint isn't applicable to the system. C Function Name: SDL_GetHintBoolean Other Docs: SDL Wiki Procedure: ( sdl-set-hint! name value ) \u2192 boolean Parameters: name : A string. Name of the hint. value : A string. Value to set hint. Returns: #t if hint was set or #f otherwise. C Function Name: SDL_SetHint Other Docs: SDL Wiki Procedure: ( sdl-set-hint-w/-priority! name value priority ) \u2192 boolean Parameters: name : A string. Name of the hint. value : A string. Value to set hint. priority SDL-HINT-DEFAULT SDL-HINT-NORMAL SDL-HINT-OVERRIDE Returns: #t if hint was set or #f otherwise. C Function Name: SDL_SetHintWithPriority Other Docs: SDL Wiki Procedure: ( sdl-make-hint-callback procedure ) \u2192 hint-callback Parameters: procedure : A procedure of 3 arguments. Returns: A callback that can be used with sdl-add-hint-callback! and sdl-del-hint-callback! . Examples: (define my-hint-callback (sdl-make-hint-callback (lambda (name old-val new-val) (printf \"~s~n~d~n~d~n\" name old-val new-val)))) Procedure: ( sdl-add-hint-callback! name callback ) \u2192 void Parameters: name : A string. Name of the hint. callback : A callback made with sdl-make-hint-callback . C Function Name: SDL_AddHintCallback Other Docs: SDL Wiki Procedure: ( sdl-del-hint-callback! name callback ) \u2192 void Parameters: name : A string. Name of the hint. callback : A callback made with sdl-make-hint-callback . C Function Name: SDL_DelHintCallback Other Docs: SDL Wiki","title":"Configuration Variables"},{"location":"ref/basics/#error-handling","text":"Procedure: ( sdl-clear-error! ) \u2192 void C Function Name: SDL_ClearError Other Docs: SDL Wiki Procedure: ( sdl-get-error ) \u2192 string Returns: A message describing an error that has occured. C Function Name: SDL_GetError Other Docs: SDL Wiki Procedure: ( sdl-set-error! msg ) \u2192 number Parameters: msg : A string. Returns: Always returns -1 . C Function Name: SDL_SetError Other Docs: SDL Wiki","title":"Error Handling"},{"location":"ref/basics/#querying-sdl-version","text":"Procedure: ( sdl-get-version ) \u2192 list Returns: A list of 3 numbers. (major minor patch) C Function Name: SDL_GetVersion Other Docs: SDL Wiki Procedure: ( sdl-get-revision ) \u2192 string Returns: A string identifying the version of SDL being used. C Function Name: SDL_GetRevision Other Docs: SDL Wiki Procedure: ( sdl-get-revision-num ) \u2192 number Returns: A number identifying the version of SDL being used. C Function Name: SDL_GetRevisionNumber Other Docs: SDL Wiki","title":"Querying SDL Version"},{"location":"ref/data/","text":"","title":"Data Objects"},{"location":"ref/events/","text":"Application Events Procedure: ( SDL-POLL-EVENT ) \u2192 '() C Function Name: SDL_PollEvent Notes: Puts a new event into the library. Procedure: ( SDL-EVENT-NONE? ) \u2192 boolean Returns: #t if there are no events otherwise #f . Procedure: ( SDL-EVENT-TIMESTAMP ) \u2192 number Returns: Get the timestamp of an event. All events have a timestamp. Procedure: ( SDL-EVENT-QUIT? ) \u2192 boolean Returns: #t if event is of type SDL_QUIT otherwise #f . Procedure: ( SDL-EVENT-CLIPBOARD? ) \u2192 boolean Returns: #t if event is of type SDL_CLIPBOARDUPDATE otherwise #f . Procedure: ( SDL-EVENT-TERMINATING? ) \u2192 boolean Returns: #t if event is of type SDL_APP_TERMINATING otherwise #f . Procedure: ( SDL-EVENT-LOW-MEMORY? ) \u2192 boolean Returns: #t if event is of type SDL_APP_LOWMEMORY otherwise #f . Procedure: ( SDL-EVENT-WILL-ENTER-BACKGROUND? ) \u2192 boolean Returns: #t if event is of type SDL_APP_WILLENTERBACKGROUND otherwise #f . Procedure: ( SDL-EVENT-DID-ENTER-BACKGROUND? ) \u2192 boolean Returns: #t if event is of type SDL_APP_DIDENTERBACKGROUND otherwise #f . Procedure: ( SDL-EVENT-WILL-ENTER-FOREGROUND? ) \u2192 boolean Returns: #t if event is of type SDL_APP_WILLENTERFOREGROUND otherwise #f . Procedure: ( SDL-EVENT-DID-ENTER-FOREGROUND? ) \u2192 boolean Returns: #t if event is of type SDL_APP_DIDENTERFOREGROUND otherwise #f . Procedure: ( SDL-EVENT-RENDER-TARGET-RESET? ) \u2192 boolean Returns: #t if event is of type SDL_RENDER_TARGETS_RESET otherwise #f . Procedure: ( SDL-EVENT-RENDER-DEVICE-RESET? ) \u2192 boolean Returns: #t if event is of type SDL_RENDER_DEVICE_RESET otherwise #f . Windowing Events Procedure: ( SDL-EVENT-WINDOW? ) \u2192 boolean Returns: #t if event is of type SDL_WINDOWEVENT otherwise #f . Procedure: ( SDL-EVENT-SYSWM? ) \u2192 boolean Returns: #t if event is of type SDL_SYSWMEVENT otherwise #f . Procedure: ( SDL-EVENT-WIN-SHOWN? ) \u2192 boolean Returns: #t if window is shown otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_SHOWN Procedure: ( SDL-EVENT-WIN-HIDDEN? ) \u2192 boolean Returns: #t if window is hidden otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_HIDDEN Procedure: ( SDL-EVENT-WIN-EXPOSED? ) \u2192 boolean Returns: #t if window is exposed otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_EXPOSED Procedure: ( SDL-EVENT-WIN-MOVED? ) \u2192 boolean Returns: #t if window is moved otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_MOVED Procedure: ( SDL-EVENT-WIN-RESIZED? ) \u2192 boolean Returns: #t if window is resized otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_RESIZED Procedure: ( SDL-EVENT-WIN-SIZE-CHANGED? ) \u2192 boolean Returns: #t if window's size changed otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_SIZE_CHANGED Procedure: ( SDL-EVENT-WIN-MINIMIZED? ) \u2192 boolean Returns: #t if window is minimized otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_MINIMIZED Procedure: ( SDL-EVENT-WIN-MAXIMIZED? ) \u2192 boolean Returns: #t if window is maximized otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_MAXIMIZED Procedure: ( SDL-EVENT-WIN-RESTORED? ) \u2192 boolean Returns: #t if window is restored otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_RESTORED Procedure: ( SDL-EVENT-WIN-ENTER? ) \u2192 boolean Returns: #t if mouse entered window otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_ENTER Procedure: ( SDL-EVENT-WIN-LEAVE? ) \u2192 boolean Returns: #t if mouse left window otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_LEAVE Procedure: ( SDL-EVENT-WIN-FOCUS-GAINED? ) \u2192 boolean Returns: #t if keyboard has gained window's focus otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_FOCUS_GAINED Procedure: ( SDL-EVENT-WIN-FOCUS-LOST? ) \u2192 boolean Returns: #t if keyboard has lost window's focus otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_FOCUS_LOST Procedure: ( SDL-EVENT-WIN-CLOSE? ) \u2192 boolean Returns: #t if window is closed otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_CLOSE Procedure: ( SDL-EVENT-WIN-TAKE-FOCUS? ) \u2192 boolean Returns: #t if window is offered focus otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_TAKE_FOCUS Procedure: ( SDL-EVENT-WIN-HIT-TEST? ) \u2192 boolean Returns: #t if window has a special hit test otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_HIT_TEST Procedure: ( SDL-EVENT-WIN-ID ) \u2192 number Returns: The window's id. Procedure: ( SDL-EVENT-WIN-X ) \u2192 number Returns: The window event's x value. Procedure: ( SDL-EVENT-WIN-Y ) \u2192 number Returns: The window event's y value. Procedure: ( SDL-EVENT-WIN-W ) \u2192 number Returns: The window event's width value. Procedure: ( SDL-EVENT-WIN-H ) \u2192 number Returns: The window event's height value. Keyboard Events Procedure: ( SDL-EVENT-KEYUP? ) \u2192 boolean Returns: #t if event is of type SDL_KEYUP otherwise #f . Procedure: ( SDL-EVENT-KEYDOWN? ) \u2192 boolean Returns: #t if event is of type SDL_KEYDOWN otherwise #f . Procedure: ( SDL-EVENT-KEYMAP-CHANGED? ) \u2192 boolean Returns: #t if event is of type SDL_KEYMAPCHANGED otherwise #f . Procedure: ( SDL-EVENT-KEY-REPEAT? ) \u2192 boolean Returns: #t if key press was repeated otherwise #f . Procedure: ( SDL-EVENT-KEY-UP? key ) \u2192 boolean Parameters: key : A SDL key code. Returns: #t if key was released otherwise #f . Procedure: ( SDL-EVENT-KEY-DOWN? key ) \u2192 boolean Parameters: key : A SDL key code. Returns: #t if key was pressed otherwise #f . Procedure: ( SDL-EVENT-MOD-UP? key ) \u2192 boolean Parameters: key : A SDL modifier code. Returns: #t if key was released otherwise #f . Procedure: ( SDL-EVENT-MOD-DOWN? key ) \u2192 boolean Parameters: key : A SDL modifier code. Returns: #t if key was pressed otherwise #f . Procedure: ( SDL-EVENT-CODE-UP? key ) \u2192 boolean Parameters: key : A SDL scancode. Returns: #t if key was released otherwise #f . Procedure: ( SDL-EVENT-CODE-DOWN? key ) \u2192 boolean Parameters: key : A SDL scancode. Returns: #t if key was pressed otherwise #f . Text Events Procedure: ( SDL-EVENT-TEXT-EDITING? ) \u2192 boolean Returns: #t if event is of type SDL_TEXTEDITING otherwise #f . Procedure: ( SDL-EVENT-TEXT-INPUT? ) \u2192 boolean Returns: #t if event is of type SDL_TEXTINPUT otherwise #f . Procedure: ( SDL-EVENT-TEXT-EDITING-TEXT ) \u2192 string Returns: The text being edited. Procedure: ( SDL-EVENT-TEXT-INPUT-TEXT ) \u2192 string Returns: The text being input. Mouse Events Procedure: ( SDL-EVENT-MOUSE-MOTION? ) \u2192 boolean Returns: #t if event is of type SDL_MOUSEMOTION otherwise #f . Procedure: ( SDL-EVENT-MOUSE-BUTTON-DOWN? ) \u2192 boolean Returns: #t if event is of type SDL_MOUSEBUTTONDOWN otherwise #f . Procedure: ( SDL-EVENT-MOUSE-BUTTON-UP? ) \u2192 boolean Returns: #t if event is of type SDL_MOUSEBUTTONUP otherwise #f . Procedure: ( SDL-EVENT-MOUSE-BUTTON-WHEEL? ) \u2192 boolean Returns: #t if event is of type SDL_MOUSEWHEEL otherwise #f . Procedure: ( SDL-EVENT-MOUSE-MOTION-WHICH ) \u2192 number Returns: The id of the mouse for the motion event. Procedure: ( SDL-EVENT-MOUSE-MOTION-X ) \u2192 number Returns: The x value of the mouse motion event. Procedure: ( SDL-EVENT-MOUSE-MOTION-Y ) \u2192 number Returns: The y value of the mouse motion event. Procedure: ( SDL-EVENT-MOUSE-MOTION-X-REL ) \u2192 number Returns: The relative x value of the mouse motion event. Procedure: ( SDL-EVENT-MOUSE-MOTION-Y-REL ) \u2192 number Returns: The relative y value of the mouse motion event. Procedure: ( SDL-EVENT-MOUSE-MOTION-B-LEFT? ) \u2192 boolean Returns: #t if the left mouse button is down otherwise #f . Procedure: ( SDL-EVENT-MOUSE-MOTION-B-MIDDLE? ) \u2192 boolean Returns: #t if the middle mouse button is down otherwise #f . Procedure: ( SDL-EVENT-MOUSE-MOTION-B-RIGHT? ) \u2192 boolean Returns: #t if the right mouse button is down otherwise #f . Procedure: ( SDL-EVENT-MOUSE-MOTION-B-X1? ) \u2192 boolean Returns: #t if the x1 mouse button is down otherwise #f . Procedure: ( SDL-EVENT-MOUSE-MOTION-B-X2? ) \u2192 boolean Returns: #t if the x2 mouse button is down otherwise #f . Procedure: ( SDL-EVENT-MOUSE-BUTTON-WHICH ) \u2192 number Returns: The id of the mouse for the button event. Procedure: ( SDL-EVENT-MOUSE-BUTTON-STATE ) \u2192 symbol Returns: 'SDL-RELEASED or 'SDL-PRESSED . Procedure: ( SDL-EVENT-MOUSE-BUTTON-BUTTON ) \u2192 symbol Returns: SDL-BUTTON-LEFT SDL-BUTTON-MIDDLE SDL-BUTTON-RIGHT SDL-BUTTON-X1 SDL-BUTTON-X2 Procedure: ( SDL-EVENT-MOUSE-BUTTON-CLICKS ) \u2192 number Returns: The number of time there the mouse button has been clicked. Procedure: ( SDL-EVENT-MOUSE-BUTTON-X ) \u2192 number Returns: The x value of the mouse. Procedure: ( SDL-EVENT-MOUSE-BUTTON-Y ) \u2192 number Returns: The y value of the mouse. Procedure: ( SDL-EVENT-MOUSE-WHEEL-WHICH ) \u2192 number Returns: The id of the mouse for the wheel event. Procedure: ( SDL-EVENT-MOUSE-WHEEL-WHICH ) \u2192 symbol Returns: 'SDL-MOUSE-WHEEL-NORMAL , 'SDL-MOUSE-WHEEL-FLIPPED . Procedure: ( SDL-EVENT-WHEEL-BUTTON-X ) \u2192 number Returns: The x value of the mouse. Procedure: ( SDL-EVENT-WHEEL-BUTTON-Y ) \u2192 number Returns: The y value of the mouse. Joystick Events Procedure: ( SDL-EVENT-JOY-DEV-ADDED? ) \u2192 boolean Returns: #t if event is of type SDL_JOYDEVICEADDED otherwise #f . Procedure: ( SDL-EVENT-JOY-DEV-REMOVED? ) \u2192 boolean Returns: #t if event is of type SDL_JOYDEVICEREMOVED otherwise #f . Procedure: ( SDL-EVENT-JOY-DEVICE ) \u2192 number Returns: The id of the joystick device. Procedure: ( SDL-EVENT-JOY-BUTTON-UP? ) \u2192 boolean Returns: #t if event is of type SDL_JOYBUTTONUP otherwise #f . Procedure: ( SDL-EVENT-JOY-BUTTON-DOWN? ) \u2192 boolean Returns: #t if event is of type SDL_JOYBUTTONDOWN otherwise #f . Procedure: ( SDL-EVENT-JOY-BUTTON? ) \u2192 boolean Returns: #t if event is of type SDL_JOYBUTTONUP or SDL_JOYBUTTONDOWN otherwise #f . Procedure: ( SDL-EVENT-JOY-BUTTON-PRESSED? ) \u2192 boolean Returns: #t if button was pressed down otherwise #f . Procedure: ( SDL-EVENT-JOY-BUTTON-DEVICE ) \u2192 number Returns: The id of the joystick device. Procedure: ( SDL-EVENT-JOY-BUTTON ) \u2192 number Returns: The id of the button. Procedure: ( SDL-EVENT-JOY-HAT? ) \u2192 boolean Returns: #t if event is of type SDL_JOYHATMOTION otherwise #f . Procedure: ( SDL-EVENT-JOY-HAT ) \u2192 number Returns: The id of the hat. Procedure: ( SDL-EVENT-JOY-HAT-POS ) \u2192 symbol Returns: SDL-HAT-CENTERED SDL-HAT-UP SDL-HAT-RIGHT SDL-HAT-DOWN SDL-HAT-LEFT SDL-HAT-RIGHT-UP SDL-HAT-RIGHT-DOWN SDL-HAT-LEFT-UP SDL-HAT-LEFT-DOWN Procedure: ( SDL-EVENT-JOY-HAT-DEVICE ) \u2192 number Returns: The id of the joystick device. Procedure: ( SDL-EVENT-JOY-BALL? ) \u2192 boolean Returns: #t if event is of type SDL_JOYBALLMOTION otherwise #f . Procedure: ( SDL-EVENT-JOY-BALL ) \u2192 number Returns: The id of the ball. Procedure: ( SDL-EVENT-JOY-BALL-X-REL ) \u2192 number Returns: The motion in the relative x-direction. Procedure: ( SDL-EVENT-JOY-BALL-Y-REL ) \u2192 number Returns: The motion in the relative y-direction. Procedure: ( SDL-EVENT-JOY-BALL-DEVICE ) \u2192 number Returns: The id of the joystick device. Procedure: ( SDL-EVENT-JOY-AXIS? ) \u2192 boolean Returns: #t if event is of type SDL_JOYAXISMOTION otherwise #f . Procedure: ( SDL-EVENT-JOY-AXIS ) \u2192 number Returns: The id of the axis. Procedure: ( SDL-EVENT-JOY-AXIS-MOTION ) \u2192 number Returns: The current position of the axis. Procedure: ( SDL-EVENT-JOY-AXIS-DEVICE ) \u2192 number Returns: The id of the joystick device. Controller Events Procedure: ( SDL-EVENT-CON-DEV-ADDED? ) \u2192 boolean Returns: #t if event is of type SDL_CONTROLLERDEVICEADDED otherwise #f . Procedure: ( SDL-EVENT-CON-DEV-REMOVED? ) \u2192 boolean Returns: #t if event is of type SDL_CONTROLLERDEVICEREMOVED otherwise #f . Procedure: ( SDL-EVENT-CON-DEV-REMAPPED? ) \u2192 boolean Returns: #t if event is of type SDL_CONTROLLERDEVICEREMAPPED otherwise #f . Procedure: ( SDL-EVENT-CON-DEVICE ) \u2192 number Returns: The id of the game controller. Procedure: ( SDL-EVENT-CON-AXIS? ) \u2192 boolean Returns: #t if event is of type SDL_CONTROLLERAXISMOTION otherwise #f . Procedure: ( SDL-EVENT-CON-AXIS-DEVICE ) \u2192 number Returns: The id of the game controller. Procedure: ( SDL-EVENT-CON-AXIS ) \u2192 symbol Returns: SDL-CONTROLLER-AXIS-LEFT-X SDL-CONTROLLER-AXIS-LEFT-Y SDL-CONTROLLER-AXIS-RIGHT-X SDL-CONTROLLER-AXIS-RIGHT-Y SDL-CONTROLLER-AXIS-TRIGGER-LEFT SDL-CONTROLLER-AXIS-TRIGGER-RIGHT Procedure: ( SDL-EVENT-CON-MOTION ) \u2192 number Returns: The current position of the axis. Procedure: ( SDL-EVENT-CON-BUTTON-UP? ) \u2192 boolean Returns: #t if event is of type SDL_CONTROLLERBUTTONUP otherwise #f . Procedure: ( SDL-EVENT-CON-BUTTON-DOWN? ) \u2192 boolean Returns: #t if event is of type SDL_CONTROLLERBUTTONDOWN otherwise #f . Procedure: ( SDL-EVENT-CON-BUTTON? ) \u2192 boolean Returns: #t if event is of type SDL_CONTROLLERBUTTONUP or SDL_CONTROLLERBUTTONDOWN otherwise #f . Procedure: ( SDL-EVENT-CON-BUTTON-PRESSED? ) \u2192 boolean Returns: #t if the button is pressed down otherwise #f . Procedure: ( SDL-EVENT-CON-BUTTON ) \u2192 symbol Returns: SDL-CONTROLLER-BUTTON-A SDL-CONTROLLER-BUTTON-B SDL-CONTROLLER-BUTTON-X SDL-CONTROLLER-BUTTON-Y SDL-CONTROLLER-BUTTON-BACK SDL-CONTROLLER-BUTTON-GUIDE SDL-CONTROLLER-BUTTON-START SDL-CONTROLLER-BUTTON-LEFT-STICK SDL-CONTROLLER-BUTTON-RIGHT-STICK SDL-CONTROLLER-BUTTON-LEFT-SHOULDER SDL-CONTROLLER-BUTTON-RIGHT-SHOULDER SDL-CONTROLLER-BUTTON-UP SDL-CONTROLLER-BUTTON-DOWN SDL-CONTROLLER-BUTTON-LEFT SDL-CONTROLLER-BUTTON-RIGHT Procedure: ( SDL-EVENT-CON-BUTTON-DEVICE ) \u2192 number Returns: The id of the game controller. Audio Events Procedure: ( SDL-EVENT-AUDIO-DEVICE-ADDED? ) \u2192 boolean Returns: #t if event is of type SDL_AUDIODEVICEADDED otherwise #f . Procedure: ( SDL-EVENT-AUDIO-DEVICE-REMOVED? ) \u2192 boolean Returns: #t if event is of type SDL_AUDIODEVICEREMOVED otherwise #f . Procedure: ( SDL-EVENT-AUDIO-DEVICE-WHICH ) \u2192 number Returns: The id of the audio device. Procedure: ( SDL-EVENT-AUDIO-DEVICE-ISCAPTURE? ) \u2192 boolean Returns: #t if the device is a capture device otherwise #f . Touch Events Procedure: ( SDL-EVENT-FINGER-DOWN? ) \u2192 boolean Returns: #t if event is of type SDL_FINGERDOWN otherwise #f . Procedure: ( SDL-EVENT-FINGER-UP? ) \u2192 boolean Returns: #t if event is of type SDL_FINGERUP otherwise #f . Procedure: ( SDL-EVENT-FINGER-MOTION? ) \u2192 boolean Returns: #t if event is of type SDL_FINGERMOTION otherwise #f . Procedure: ( SDL-EVENT-DOLLAR-GESTURE? ) \u2192 boolean Returns: #t if event is of type SDL_DOLLARGESTURE otherwise #f . Procedure: ( SDL-EVENT-DOLLAR-RECORD? ) \u2192 boolean Returns: #t if event is of type SDL_DOLLARRECORD otherwise #f . Procedure: ( SDL-EVENT-MULTI-GESTURE? ) \u2192 boolean Returns: #t if event is of type SDL_MULTIGESTURE otherwise #f . Procedure: ( SDL-EVENT-TOUCH-ID ) \u2192 number Returns: The id of the touch device. Procedure: ( SDL-EVENT-TOUCH-X ) \u2192 number Returns: The x-axis location of the touch event, normalized (0...1) Procedure: ( SDL-EVENT-TOUCH-Y ) \u2192 number Returns: The y-axis location of the touch event, normalized (0...1) Procedure: ( SDL-EVENT-TOUCH-DX ) \u2192 number Returns: The distance moved in the x-axis, normalized (0...1) Procedure: ( SDL-EVENT-TOUCH-DY ) \u2192 number Returns: The distance moved in the y-axis, normalized (0...1) Procedure: ( SDL-EVENT-TOUCH-PRESSURE ) \u2192 number Returns: The quantity of pressure applied, normalized (0...1) Procedure: ( SDL-EVENT-FINGER-ID ) \u2192 number Returns: The id of the finger. Procedure: ( SDL-EVENT-GESTURE-ID ) \u2192 number Returns: The id of the gesture. Procedure: ( SDL-EVENT-GESTURE-NUM-FINGERS ) \u2192 number Returns: The number of fingers used to draw the stroke. Procedure: ( SDL-EVENT-GESTURE-ERROR ) \u2192 number Returns: The difference between the gesture template and the actual performed gesture. Procedure: ( SDL-EVENT-MULTI-GESTURE-DTHETA ) \u2192 number Returns: The amount that the fingers rotated during this motion. Procedure: ( SDL-EVENT-MULTI-GESTURE-DDIST ) \u2192 number Returns: The amount that the fingers pinched during this motion. Drag & Drop Events Procedure: ( SDL-EVENT-DROP-FILE? ) \u2192 boolean Returns: #t if event is of type SDL_DROPFILE otherwise #f . Procedure: ( SDL-EVENT-DROP-TEXT? ) \u2192 boolean Returns: #t if event is of type SDL_DROPTEXT otherwise #f . Procedure: ( SDL-EVENT-DROP-BEGIN? ) \u2192 boolean Returns: #t if event is of type SDL_DROPBEGIN otherwise #f . Procedure: ( SDL-EVENT-DROP-COMPLETE? ) \u2192 boolean Returns: #t if event is of type SDL_DROPCOMPLETE otherwise #f . Procedure: ( SDL-EVENT-DROP-FILE ) \u2192 string Returns: The file name.","title":"Events"},{"location":"ref/events/#application-events","text":"Procedure: ( SDL-POLL-EVENT ) \u2192 '() C Function Name: SDL_PollEvent Notes: Puts a new event into the library. Procedure: ( SDL-EVENT-NONE? ) \u2192 boolean Returns: #t if there are no events otherwise #f . Procedure: ( SDL-EVENT-TIMESTAMP ) \u2192 number Returns: Get the timestamp of an event. All events have a timestamp. Procedure: ( SDL-EVENT-QUIT? ) \u2192 boolean Returns: #t if event is of type SDL_QUIT otherwise #f . Procedure: ( SDL-EVENT-CLIPBOARD? ) \u2192 boolean Returns: #t if event is of type SDL_CLIPBOARDUPDATE otherwise #f . Procedure: ( SDL-EVENT-TERMINATING? ) \u2192 boolean Returns: #t if event is of type SDL_APP_TERMINATING otherwise #f . Procedure: ( SDL-EVENT-LOW-MEMORY? ) \u2192 boolean Returns: #t if event is of type SDL_APP_LOWMEMORY otherwise #f . Procedure: ( SDL-EVENT-WILL-ENTER-BACKGROUND? ) \u2192 boolean Returns: #t if event is of type SDL_APP_WILLENTERBACKGROUND otherwise #f . Procedure: ( SDL-EVENT-DID-ENTER-BACKGROUND? ) \u2192 boolean Returns: #t if event is of type SDL_APP_DIDENTERBACKGROUND otherwise #f . Procedure: ( SDL-EVENT-WILL-ENTER-FOREGROUND? ) \u2192 boolean Returns: #t if event is of type SDL_APP_WILLENTERFOREGROUND otherwise #f . Procedure: ( SDL-EVENT-DID-ENTER-FOREGROUND? ) \u2192 boolean Returns: #t if event is of type SDL_APP_DIDENTERFOREGROUND otherwise #f . Procedure: ( SDL-EVENT-RENDER-TARGET-RESET? ) \u2192 boolean Returns: #t if event is of type SDL_RENDER_TARGETS_RESET otherwise #f . Procedure: ( SDL-EVENT-RENDER-DEVICE-RESET? ) \u2192 boolean Returns: #t if event is of type SDL_RENDER_DEVICE_RESET otherwise #f .","title":"Application Events"},{"location":"ref/events/#windowing-events","text":"Procedure: ( SDL-EVENT-WINDOW? ) \u2192 boolean Returns: #t if event is of type SDL_WINDOWEVENT otherwise #f . Procedure: ( SDL-EVENT-SYSWM? ) \u2192 boolean Returns: #t if event is of type SDL_SYSWMEVENT otherwise #f . Procedure: ( SDL-EVENT-WIN-SHOWN? ) \u2192 boolean Returns: #t if window is shown otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_SHOWN Procedure: ( SDL-EVENT-WIN-HIDDEN? ) \u2192 boolean Returns: #t if window is hidden otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_HIDDEN Procedure: ( SDL-EVENT-WIN-EXPOSED? ) \u2192 boolean Returns: #t if window is exposed otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_EXPOSED Procedure: ( SDL-EVENT-WIN-MOVED? ) \u2192 boolean Returns: #t if window is moved otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_MOVED Procedure: ( SDL-EVENT-WIN-RESIZED? ) \u2192 boolean Returns: #t if window is resized otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_RESIZED Procedure: ( SDL-EVENT-WIN-SIZE-CHANGED? ) \u2192 boolean Returns: #t if window's size changed otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_SIZE_CHANGED Procedure: ( SDL-EVENT-WIN-MINIMIZED? ) \u2192 boolean Returns: #t if window is minimized otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_MINIMIZED Procedure: ( SDL-EVENT-WIN-MAXIMIZED? ) \u2192 boolean Returns: #t if window is maximized otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_MAXIMIZED Procedure: ( SDL-EVENT-WIN-RESTORED? ) \u2192 boolean Returns: #t if window is restored otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_RESTORED Procedure: ( SDL-EVENT-WIN-ENTER? ) \u2192 boolean Returns: #t if mouse entered window otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_ENTER Procedure: ( SDL-EVENT-WIN-LEAVE? ) \u2192 boolean Returns: #t if mouse left window otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_LEAVE Procedure: ( SDL-EVENT-WIN-FOCUS-GAINED? ) \u2192 boolean Returns: #t if keyboard has gained window's focus otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_FOCUS_GAINED Procedure: ( SDL-EVENT-WIN-FOCUS-LOST? ) \u2192 boolean Returns: #t if keyboard has lost window's focus otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_FOCUS_LOST Procedure: ( SDL-EVENT-WIN-CLOSE? ) \u2192 boolean Returns: #t if window is closed otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_CLOSE Procedure: ( SDL-EVENT-WIN-TAKE-FOCUS? ) \u2192 boolean Returns: #t if window is offered focus otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_TAKE_FOCUS Procedure: ( SDL-EVENT-WIN-HIT-TEST? ) \u2192 boolean Returns: #t if window has a special hit test otherwise #f . Notes: Window Event Type: SDL_WINDOWEVENT_HIT_TEST Procedure: ( SDL-EVENT-WIN-ID ) \u2192 number Returns: The window's id. Procedure: ( SDL-EVENT-WIN-X ) \u2192 number Returns: The window event's x value. Procedure: ( SDL-EVENT-WIN-Y ) \u2192 number Returns: The window event's y value. Procedure: ( SDL-EVENT-WIN-W ) \u2192 number Returns: The window event's width value. Procedure: ( SDL-EVENT-WIN-H ) \u2192 number Returns: The window event's height value.","title":"Windowing Events"},{"location":"ref/events/#keyboard-events","text":"Procedure: ( SDL-EVENT-KEYUP? ) \u2192 boolean Returns: #t if event is of type SDL_KEYUP otherwise #f . Procedure: ( SDL-EVENT-KEYDOWN? ) \u2192 boolean Returns: #t if event is of type SDL_KEYDOWN otherwise #f . Procedure: ( SDL-EVENT-KEYMAP-CHANGED? ) \u2192 boolean Returns: #t if event is of type SDL_KEYMAPCHANGED otherwise #f . Procedure: ( SDL-EVENT-KEY-REPEAT? ) \u2192 boolean Returns: #t if key press was repeated otherwise #f . Procedure: ( SDL-EVENT-KEY-UP? key ) \u2192 boolean Parameters: key : A SDL key code. Returns: #t if key was released otherwise #f . Procedure: ( SDL-EVENT-KEY-DOWN? key ) \u2192 boolean Parameters: key : A SDL key code. Returns: #t if key was pressed otherwise #f . Procedure: ( SDL-EVENT-MOD-UP? key ) \u2192 boolean Parameters: key : A SDL modifier code. Returns: #t if key was released otherwise #f . Procedure: ( SDL-EVENT-MOD-DOWN? key ) \u2192 boolean Parameters: key : A SDL modifier code. Returns: #t if key was pressed otherwise #f . Procedure: ( SDL-EVENT-CODE-UP? key ) \u2192 boolean Parameters: key : A SDL scancode. Returns: #t if key was released otherwise #f . Procedure: ( SDL-EVENT-CODE-DOWN? key ) \u2192 boolean Parameters: key : A SDL scancode. Returns: #t if key was pressed otherwise #f .","title":"Keyboard Events"},{"location":"ref/events/#text-events","text":"Procedure: ( SDL-EVENT-TEXT-EDITING? ) \u2192 boolean Returns: #t if event is of type SDL_TEXTEDITING otherwise #f . Procedure: ( SDL-EVENT-TEXT-INPUT? ) \u2192 boolean Returns: #t if event is of type SDL_TEXTINPUT otherwise #f . Procedure: ( SDL-EVENT-TEXT-EDITING-TEXT ) \u2192 string Returns: The text being edited. Procedure: ( SDL-EVENT-TEXT-INPUT-TEXT ) \u2192 string Returns: The text being input.","title":"Text Events"},{"location":"ref/events/#mouse-events","text":"Procedure: ( SDL-EVENT-MOUSE-MOTION? ) \u2192 boolean Returns: #t if event is of type SDL_MOUSEMOTION otherwise #f . Procedure: ( SDL-EVENT-MOUSE-BUTTON-DOWN? ) \u2192 boolean Returns: #t if event is of type SDL_MOUSEBUTTONDOWN otherwise #f . Procedure: ( SDL-EVENT-MOUSE-BUTTON-UP? ) \u2192 boolean Returns: #t if event is of type SDL_MOUSEBUTTONUP otherwise #f . Procedure: ( SDL-EVENT-MOUSE-BUTTON-WHEEL? ) \u2192 boolean Returns: #t if event is of type SDL_MOUSEWHEEL otherwise #f . Procedure: ( SDL-EVENT-MOUSE-MOTION-WHICH ) \u2192 number Returns: The id of the mouse for the motion event. Procedure: ( SDL-EVENT-MOUSE-MOTION-X ) \u2192 number Returns: The x value of the mouse motion event. Procedure: ( SDL-EVENT-MOUSE-MOTION-Y ) \u2192 number Returns: The y value of the mouse motion event. Procedure: ( SDL-EVENT-MOUSE-MOTION-X-REL ) \u2192 number Returns: The relative x value of the mouse motion event. Procedure: ( SDL-EVENT-MOUSE-MOTION-Y-REL ) \u2192 number Returns: The relative y value of the mouse motion event. Procedure: ( SDL-EVENT-MOUSE-MOTION-B-LEFT? ) \u2192 boolean Returns: #t if the left mouse button is down otherwise #f . Procedure: ( SDL-EVENT-MOUSE-MOTION-B-MIDDLE? ) \u2192 boolean Returns: #t if the middle mouse button is down otherwise #f . Procedure: ( SDL-EVENT-MOUSE-MOTION-B-RIGHT? ) \u2192 boolean Returns: #t if the right mouse button is down otherwise #f . Procedure: ( SDL-EVENT-MOUSE-MOTION-B-X1? ) \u2192 boolean Returns: #t if the x1 mouse button is down otherwise #f . Procedure: ( SDL-EVENT-MOUSE-MOTION-B-X2? ) \u2192 boolean Returns: #t if the x2 mouse button is down otherwise #f . Procedure: ( SDL-EVENT-MOUSE-BUTTON-WHICH ) \u2192 number Returns: The id of the mouse for the button event. Procedure: ( SDL-EVENT-MOUSE-BUTTON-STATE ) \u2192 symbol Returns: 'SDL-RELEASED or 'SDL-PRESSED . Procedure: ( SDL-EVENT-MOUSE-BUTTON-BUTTON ) \u2192 symbol Returns: SDL-BUTTON-LEFT SDL-BUTTON-MIDDLE SDL-BUTTON-RIGHT SDL-BUTTON-X1 SDL-BUTTON-X2 Procedure: ( SDL-EVENT-MOUSE-BUTTON-CLICKS ) \u2192 number Returns: The number of time there the mouse button has been clicked. Procedure: ( SDL-EVENT-MOUSE-BUTTON-X ) \u2192 number Returns: The x value of the mouse. Procedure: ( SDL-EVENT-MOUSE-BUTTON-Y ) \u2192 number Returns: The y value of the mouse. Procedure: ( SDL-EVENT-MOUSE-WHEEL-WHICH ) \u2192 number Returns: The id of the mouse for the wheel event. Procedure: ( SDL-EVENT-MOUSE-WHEEL-WHICH ) \u2192 symbol Returns: 'SDL-MOUSE-WHEEL-NORMAL , 'SDL-MOUSE-WHEEL-FLIPPED . Procedure: ( SDL-EVENT-WHEEL-BUTTON-X ) \u2192 number Returns: The x value of the mouse. Procedure: ( SDL-EVENT-WHEEL-BUTTON-Y ) \u2192 number Returns: The y value of the mouse.","title":"Mouse Events"},{"location":"ref/events/#joystick-events","text":"Procedure: ( SDL-EVENT-JOY-DEV-ADDED? ) \u2192 boolean Returns: #t if event is of type SDL_JOYDEVICEADDED otherwise #f . Procedure: ( SDL-EVENT-JOY-DEV-REMOVED? ) \u2192 boolean Returns: #t if event is of type SDL_JOYDEVICEREMOVED otherwise #f . Procedure: ( SDL-EVENT-JOY-DEVICE ) \u2192 number Returns: The id of the joystick device. Procedure: ( SDL-EVENT-JOY-BUTTON-UP? ) \u2192 boolean Returns: #t if event is of type SDL_JOYBUTTONUP otherwise #f . Procedure: ( SDL-EVENT-JOY-BUTTON-DOWN? ) \u2192 boolean Returns: #t if event is of type SDL_JOYBUTTONDOWN otherwise #f . Procedure: ( SDL-EVENT-JOY-BUTTON? ) \u2192 boolean Returns: #t if event is of type SDL_JOYBUTTONUP or SDL_JOYBUTTONDOWN otherwise #f . Procedure: ( SDL-EVENT-JOY-BUTTON-PRESSED? ) \u2192 boolean Returns: #t if button was pressed down otherwise #f . Procedure: ( SDL-EVENT-JOY-BUTTON-DEVICE ) \u2192 number Returns: The id of the joystick device. Procedure: ( SDL-EVENT-JOY-BUTTON ) \u2192 number Returns: The id of the button. Procedure: ( SDL-EVENT-JOY-HAT? ) \u2192 boolean Returns: #t if event is of type SDL_JOYHATMOTION otherwise #f . Procedure: ( SDL-EVENT-JOY-HAT ) \u2192 number Returns: The id of the hat. Procedure: ( SDL-EVENT-JOY-HAT-POS ) \u2192 symbol Returns: SDL-HAT-CENTERED SDL-HAT-UP SDL-HAT-RIGHT SDL-HAT-DOWN SDL-HAT-LEFT SDL-HAT-RIGHT-UP SDL-HAT-RIGHT-DOWN SDL-HAT-LEFT-UP SDL-HAT-LEFT-DOWN Procedure: ( SDL-EVENT-JOY-HAT-DEVICE ) \u2192 number Returns: The id of the joystick device. Procedure: ( SDL-EVENT-JOY-BALL? ) \u2192 boolean Returns: #t if event is of type SDL_JOYBALLMOTION otherwise #f . Procedure: ( SDL-EVENT-JOY-BALL ) \u2192 number Returns: The id of the ball. Procedure: ( SDL-EVENT-JOY-BALL-X-REL ) \u2192 number Returns: The motion in the relative x-direction. Procedure: ( SDL-EVENT-JOY-BALL-Y-REL ) \u2192 number Returns: The motion in the relative y-direction. Procedure: ( SDL-EVENT-JOY-BALL-DEVICE ) \u2192 number Returns: The id of the joystick device. Procedure: ( SDL-EVENT-JOY-AXIS? ) \u2192 boolean Returns: #t if event is of type SDL_JOYAXISMOTION otherwise #f . Procedure: ( SDL-EVENT-JOY-AXIS ) \u2192 number Returns: The id of the axis. Procedure: ( SDL-EVENT-JOY-AXIS-MOTION ) \u2192 number Returns: The current position of the axis. Procedure: ( SDL-EVENT-JOY-AXIS-DEVICE ) \u2192 number Returns: The id of the joystick device.","title":"Joystick Events"},{"location":"ref/events/#controller-events","text":"Procedure: ( SDL-EVENT-CON-DEV-ADDED? ) \u2192 boolean Returns: #t if event is of type SDL_CONTROLLERDEVICEADDED otherwise #f . Procedure: ( SDL-EVENT-CON-DEV-REMOVED? ) \u2192 boolean Returns: #t if event is of type SDL_CONTROLLERDEVICEREMOVED otherwise #f . Procedure: ( SDL-EVENT-CON-DEV-REMAPPED? ) \u2192 boolean Returns: #t if event is of type SDL_CONTROLLERDEVICEREMAPPED otherwise #f . Procedure: ( SDL-EVENT-CON-DEVICE ) \u2192 number Returns: The id of the game controller. Procedure: ( SDL-EVENT-CON-AXIS? ) \u2192 boolean Returns: #t if event is of type SDL_CONTROLLERAXISMOTION otherwise #f . Procedure: ( SDL-EVENT-CON-AXIS-DEVICE ) \u2192 number Returns: The id of the game controller. Procedure: ( SDL-EVENT-CON-AXIS ) \u2192 symbol Returns: SDL-CONTROLLER-AXIS-LEFT-X SDL-CONTROLLER-AXIS-LEFT-Y SDL-CONTROLLER-AXIS-RIGHT-X SDL-CONTROLLER-AXIS-RIGHT-Y SDL-CONTROLLER-AXIS-TRIGGER-LEFT SDL-CONTROLLER-AXIS-TRIGGER-RIGHT Procedure: ( SDL-EVENT-CON-MOTION ) \u2192 number Returns: The current position of the axis. Procedure: ( SDL-EVENT-CON-BUTTON-UP? ) \u2192 boolean Returns: #t if event is of type SDL_CONTROLLERBUTTONUP otherwise #f . Procedure: ( SDL-EVENT-CON-BUTTON-DOWN? ) \u2192 boolean Returns: #t if event is of type SDL_CONTROLLERBUTTONDOWN otherwise #f . Procedure: ( SDL-EVENT-CON-BUTTON? ) \u2192 boolean Returns: #t if event is of type SDL_CONTROLLERBUTTONUP or SDL_CONTROLLERBUTTONDOWN otherwise #f . Procedure: ( SDL-EVENT-CON-BUTTON-PRESSED? ) \u2192 boolean Returns: #t if the button is pressed down otherwise #f . Procedure: ( SDL-EVENT-CON-BUTTON ) \u2192 symbol Returns: SDL-CONTROLLER-BUTTON-A SDL-CONTROLLER-BUTTON-B SDL-CONTROLLER-BUTTON-X SDL-CONTROLLER-BUTTON-Y SDL-CONTROLLER-BUTTON-BACK SDL-CONTROLLER-BUTTON-GUIDE SDL-CONTROLLER-BUTTON-START SDL-CONTROLLER-BUTTON-LEFT-STICK SDL-CONTROLLER-BUTTON-RIGHT-STICK SDL-CONTROLLER-BUTTON-LEFT-SHOULDER SDL-CONTROLLER-BUTTON-RIGHT-SHOULDER SDL-CONTROLLER-BUTTON-UP SDL-CONTROLLER-BUTTON-DOWN SDL-CONTROLLER-BUTTON-LEFT SDL-CONTROLLER-BUTTON-RIGHT Procedure: ( SDL-EVENT-CON-BUTTON-DEVICE ) \u2192 number Returns: The id of the game controller.","title":"Controller Events"},{"location":"ref/events/#audio-events","text":"Procedure: ( SDL-EVENT-AUDIO-DEVICE-ADDED? ) \u2192 boolean Returns: #t if event is of type SDL_AUDIODEVICEADDED otherwise #f . Procedure: ( SDL-EVENT-AUDIO-DEVICE-REMOVED? ) \u2192 boolean Returns: #t if event is of type SDL_AUDIODEVICEREMOVED otherwise #f . Procedure: ( SDL-EVENT-AUDIO-DEVICE-WHICH ) \u2192 number Returns: The id of the audio device. Procedure: ( SDL-EVENT-AUDIO-DEVICE-ISCAPTURE? ) \u2192 boolean Returns: #t if the device is a capture device otherwise #f .","title":"Audio Events"},{"location":"ref/events/#touch-events","text":"Procedure: ( SDL-EVENT-FINGER-DOWN? ) \u2192 boolean Returns: #t if event is of type SDL_FINGERDOWN otherwise #f . Procedure: ( SDL-EVENT-FINGER-UP? ) \u2192 boolean Returns: #t if event is of type SDL_FINGERUP otherwise #f . Procedure: ( SDL-EVENT-FINGER-MOTION? ) \u2192 boolean Returns: #t if event is of type SDL_FINGERMOTION otherwise #f . Procedure: ( SDL-EVENT-DOLLAR-GESTURE? ) \u2192 boolean Returns: #t if event is of type SDL_DOLLARGESTURE otherwise #f . Procedure: ( SDL-EVENT-DOLLAR-RECORD? ) \u2192 boolean Returns: #t if event is of type SDL_DOLLARRECORD otherwise #f . Procedure: ( SDL-EVENT-MULTI-GESTURE? ) \u2192 boolean Returns: #t if event is of type SDL_MULTIGESTURE otherwise #f . Procedure: ( SDL-EVENT-TOUCH-ID ) \u2192 number Returns: The id of the touch device. Procedure: ( SDL-EVENT-TOUCH-X ) \u2192 number Returns: The x-axis location of the touch event, normalized (0...1) Procedure: ( SDL-EVENT-TOUCH-Y ) \u2192 number Returns: The y-axis location of the touch event, normalized (0...1) Procedure: ( SDL-EVENT-TOUCH-DX ) \u2192 number Returns: The distance moved in the x-axis, normalized (0...1) Procedure: ( SDL-EVENT-TOUCH-DY ) \u2192 number Returns: The distance moved in the y-axis, normalized (0...1) Procedure: ( SDL-EVENT-TOUCH-PRESSURE ) \u2192 number Returns: The quantity of pressure applied, normalized (0...1) Procedure: ( SDL-EVENT-FINGER-ID ) \u2192 number Returns: The id of the finger. Procedure: ( SDL-EVENT-GESTURE-ID ) \u2192 number Returns: The id of the gesture. Procedure: ( SDL-EVENT-GESTURE-NUM-FINGERS ) \u2192 number Returns: The number of fingers used to draw the stroke. Procedure: ( SDL-EVENT-GESTURE-ERROR ) \u2192 number Returns: The difference between the gesture template and the actual performed gesture. Procedure: ( SDL-EVENT-MULTI-GESTURE-DTHETA ) \u2192 number Returns: The amount that the fingers rotated during this motion. Procedure: ( SDL-EVENT-MULTI-GESTURE-DDIST ) \u2192 number Returns: The amount that the fingers pinched during this motion.","title":"Touch Events"},{"location":"ref/events/#drag-drop-events","text":"Procedure: ( SDL-EVENT-DROP-FILE? ) \u2192 boolean Returns: #t if event is of type SDL_DROPFILE otherwise #f . Procedure: ( SDL-EVENT-DROP-TEXT? ) \u2192 boolean Returns: #t if event is of type SDL_DROPTEXT otherwise #f . Procedure: ( SDL-EVENT-DROP-BEGIN? ) \u2192 boolean Returns: #t if event is of type SDL_DROPBEGIN otherwise #f . Procedure: ( SDL-EVENT-DROP-COMPLETE? ) \u2192 boolean Returns: #t if event is of type SDL_DROPCOMPLETE otherwise #f . Procedure: ( SDL-EVENT-DROP-FILE ) \u2192 string Returns: The file name.","title":"Drag &amp; Drop Events"},{"location":"ref/force/","text":"Force Feedback Support todo","title":"Force Feedback"},{"location":"ref/force/#force-feedback-support","text":"todo","title":"Force Feedback Support"},{"location":"ref/inputs/","text":"Data Record: ( SDL-FINGER ) Fields: id : ID of a finger. x : X-pos of a finger input. y : Y-pos of a finger input. p : Pressure of a finger input. Keyboard Support Procedure: ( SDL-GET-KEY-FROM-NAME name ) \u2192 number Parameters: name : A string. Name of the keycode. Returns: A number corresponding to it's keycode. C Function Name: SDL_GetKeyFromName Procedure: ( SDL-GET-KEY-FROM-SCANCODE scancode ) \u2192 number Parameters: scancode : Value of a scancode. Returns: A number corresponding to it's keycode. C Function Name: SDL_GetKeyFromScancode Procedure: ( SDL-GET-KEY-NAME key ) \u2192 string Parameters: key : Value of a keycode. Returns: A string containing the name of a keycode. C Function Name: SDL_GetKeyName Procedure: ( SDL-GET-KEYBOARD-FOCUS ) \u2192 SDL-WINDOW Returns: A window object that has the keyboard focus. C Function Name: SDL_GetKeyboardFocus Procedure: ( SDL-GET-KEYBOARD-STATE ) \u2192 (LAMBDA SCANCODE) \u2192 boolean Returns: A procedure that when passed a scancode returns #t if the key is pressed otherwise #f . C Function Name: SDL_GetKeyboardState Examples: (define key-state (sdl-get-keyboard-state)) (if (key-state SDL-SCANCODE-RETURN) (printf \"<RETURN> key pressed.~n\")) (if (and (key-state SDL-SCANCODE-RIGHT) (key-state SDL-SCANCODE-UP)) (printf \"Right and Up Keys Pressed.~n\")) Procedure: ( SDL-GET-MOD-STATE ) \u2192 int Returns: A number that's bits have been set with key modifer values. C Function Name: SDL_GetModState Procedure: ( SDL-GET-SCANCODE-FROM-KEY key ) \u2192 int Parameters: key : Value of a keycode. Returns: Scancode equivalent of keycode. C Function Name: SDL_GetScancodeFromKey Procedure: ( SDL-GET-SCANCODE-FROM-NAME name ) \u2192 int Parameters: name : The name of a scancode as a string. Returns: Scancode value of the string. C Function Name: SDL_GetScancodeFromName Procedure: ( SDL-GET-SCANCODE-NAME code ) \u2192 string Parameters: code : Value of a scancode. Returns: String value of a scancode. C Function Name: SDL_GetScancodeName Procedure: ( SDL-HAS-SCREEN-KEYBOARD-SUPPORT? ) \u2192 boolean Returns: #t if screen has keyboard support or #f otherwise. C Function Name: SDL_HasScreenKeyboardSupport Procedure: ( SDL-IS-SCREEN-KEYBOARD-SHOWN? window ) \u2192 boolean Parameters: window : A SDL-WINDOW object. Returns: #t if screen's keyboard is shown or #f otherwise. C Function Name: SDL_IsScreenKeyboardShown Procedure: ( SDL-IS-TEXT-INPUT-ACTIVE? ) \u2192 boolean Returns: #t if the text input is active or #f otherwise. C Function Name: SDL_IsTextInputActive Procedure: ( SDL-SET-MOD-STATE! mods ) \u2192 '() Parameters: mods : A series of key modifer values. C Function Name: SDL_SetModState Examples: (sdl-set-mod-state! KMOD-LSHIFT KMOD-CAPS KMOD-RCTRL) Procedure: ( SDL-SET-TEXT-INPUT-RECT! rect ) \u2192 '() Parameters: rect : A SDL-RECT record. (Optional) C Function Name: SDL_SetTextInputRect Notes: Not implemented. Procedure: ( SDL-START-TEXT-INPUT ) \u2192 '() C Function Name: SDL_StartTextInput Procedure: ( SDL-STOP-TEXT-INPUT ) \u2192 '() C Function Name: SDL_StopTextInput Mouse Support Procedure: ( SDL-CAPTURE-MOUSE enable ) \u2192 boolean Parameters: enable : Sets whether mouse should be captured or ignored. Returns: #t if set succeeded #f otherwise. C Function Name: SDL_CaptureMouse Procedure: ( SDL-CREATE-COLOR-CURSOR image hot-x hot-y ) \u2192 SDL-CURSOR Parameters: image : A SDL-SURFACT object. hot-x : The x-position of the cursor hot spot. hot-y : The y-position of the cursor hot spot. Returns: A SDL-CURSOR object or '() on failure. C Function Name: SDL_CreateColorCursor Notes: Not up to specifications. Procedure: ( SDL-CREATE-SYSTEM-CURSOR id ) \u2192 SDL-CURSOR Parameters: id : symbol SDL-SYSTEM-CURSOR-ARROW SDL-SYSTEM-CURSOR-IBEAM SDL-SYSTEM-CURSOR-WAIT SDL-SYSTEM-CURSOR-CROSSHAIR SDL-SYSTEM-CURSOR-WAIT-ARROW SDL-SYSTEM-CURSOR-SIZE-NWSE SDL-SYSTEM-CURSOR-SIZE-NESW SDL-SYSTEM-CURSOR-SIZE-WE SDL-SYSTEM-CURSOR-SIZE-NS SDL-SYSTEM-CURSOR-SIZE-ALL SDL-SYSTEM-CURSOR-NO SDL-SYSTEM-CURSOR-HAND Returns: A SDL-CURSOR object or '() on failure. C Function Name: SDL_CreateSystemCursor Notes: Not up to specifications. Procedure: ( SDL-FREE-CURSOR cursor ) \u2192 '() Parameters: cursor : A SDL-CURSOR object. C Function Name: SDL_FreeCursor Notes: Not up to specifications. Procedure: ( SDL-GET-CURSOR ) \u2192 SDL-CURSOR Returns: The current cursor as a SDL-CURSOR object. C Function Name: SDL_GetCursor Procedure: ( SDL-FREE-CURSOR toggle ) \u2192 number Parameters: toggle : A device query value. Returns: The value of SDL-ENABLE if cursor is shown, SDL-DISABLE if cursor is hidden, or a negative value indicating error. C Function Name: SDL_ShowCursor Procedure: ( SDL-GET-MOUSE-FOCUS ) \u2192 SDL-WINDOW Returns: The SDL-WINDOW object that has the mouse focus. C Function Name: SDL_GetMouseFocus Procedure: ( SDL-GET-DEFAULT-CURSOR ) \u2192 SDL-CURSOR Returns: A SDL-CURSOR object that is the system's default cursor. C Function Name: SDL_GetDefaultCursor Procedure: ( SDL-WARP-MOUSE-IN-WINDOW window x y ) \u2192 '() Parameters: window : A SDL-WINDOW object. x : The x-coordinate within the window. y : The y-coordinate within the window. C Function Name: SDL_WarpMouseInWindow Procedure: ( SDL-WARP-MOUSE-GLOBAL x y ) \u2192 number Returns: 0 on success or a negative number on failure. Parameters: x : The x-coordinate. y : The y-coordinate. C Function Name: SDL_WarpMouseInWindow Procedure: ( SDL-SET-CURSOR! cursor ) \u2192 '() Parameters: cursor : A SDL-CURSOR object. C Function Name: SDL_SetCursor Procedure: ( SDL-SET-RELATIVE-MOUSE-MODE! enable ) \u2192 number Parameters: enable : A boolean. Value to set mouse relative mode. Returns: 0 on success or a negative number on failure. C Function Name: SDL_SetRelativeMouseMode Procedure: ( SDL-GET-RELATIVE-MOUSE-MODE! ) \u2192 boolean Returns: #t if mouse is in relative mode or #f otherwise. C Function Name: SDL_GetRelativeMouseMode Procedure: ( SDL-CREATE-CURSOR ) \u2192 SDL-CURSOR C Function Name: SDL_CreateCursor Notes: Unimplemented Procedure: ( SDL-GET-RELATIVE-MOUSE-STATE ) \u2192 number C Function Name: SDL_GetRelativeMouseState Notes: Unimplemented Procedure: ( SDL-GET-GLOBAL-MOUSE-STATE ) \u2192 number C Function Name: SDL_GetGlobalMouseState Notes: Unimplemented Procedure: ( SDL-GET-MOUSE-STATE ) \u2192 number C Function Name: SDL_GetMouseState Notes: Unimplemented Joystick Support Procedure: ( SDL-JOYSTICK-OPEN index ) \u2192 SDL-JOYSTICK Parameters: index : The index of the joystick. Returns: The SDL-JOYSTICK object or '() . C Function Name: SDL_JoystickOpen Notes: Not up to specifications. Procedure: ( SDL-JOYSTICK-CLOSE joystick ) \u2192 '() Parameters: joystick : A SDL-JOYSTICK object. C Function Name: SDL_JoystickClose Notes: Not up to specifications. Procedure: ( SDL-JOYSTICK-NUM ) \u2192 number Returns: The amount of joysticks that can be accessed. C Function Name: SDL_NumJoystick Procedure: ( SDL-JOYSTICK-CURRENT-POWER-LEVEL joystick ) \u2192 symbol Parameters: joystick : A SDL-JOYSTICK object. Returns: levels : sybmol SDL-JOYSTICK-POWER-UNKNOWN SDL-JOYSTICK-POWER-EMPTY SDL-JOYSTICK-POWER-LOW SDL-JOYSTICK-POWER-MEDIUM SDL-JOYSTICK-POWER-FULL SDL-JOYSTICK-POWER-WIRED SDL-JOYSTICK-POWER-MAX C Function Name: SDL_JoystickCurrentPowerLevel Procedure: ( SDL-JOYSTICK-EVENT-STATE state ) \u2192 number Parameters: state : Can be SDL-QUERY , SDL-IGNORE , or SDL-ENABLE . Returns: 1 if enabled, 0 if disabled, or a negative error code. C Function Name: SDL_JoystickEventState Procedure: ( SDL-JOYSTICK-FROM-INSTANCE-ID instance-id ) \u2192 SDL-JOYSTICK Parameters: instance-id : Instance ID from the event system. Returns: The SDL-JOYSTICK object or '() . C Function Name: SDL_JoystickFromInstanceID Procedure: ( SDL-JOYSTICK-IS-ATTACHED? joystick ) \u2192 boolean Parameters: joystick : A SDL-JOYSTICK object. Returns: #t if joystick is attached or #f otherwise. C Function Name: SDL_JoystickGetAttached Procedure: ( SDL-JOYSTICK-GET-AXIS joystick axis ) \u2192 number Parameters: joystick : A SDL-JOYSTICK object. axis : A number. The index of the axis. Returns: The value of the axis or 0 on failure. C Function Name: SDL_JoystickGetAxis Procedure: ( SDL-JOYSTICK-GET-BALL joystick ball ) \u2192 list Parameters: joystick : A SDL-JOYSTICK object. ball : A number. The index of the ball. Returns: A list (dx dy) or '() . C Function Name: SDL_JoystickGetBall Procedure: ( SDL-JOYSTICK-IS-BUTTON-PRESSED? joystick button ) \u2192 boolean Parameters: joystick : A SDL-JOYSTICK object. button : A number. The index of the button. Returns: #t if button was pressed or #f otherwise. C Function Name: SDL_JoystickGetButton Procedure: ( SDL-JOYSTICK-GET-HAT joystick hat ) \u2192 symbol Parameters: joystick : A SDL-JOYSTICK object. hat : A number. The index of the hat. Returns: positions : symbol SDL-HAT-CENTERED SDL-HAT-UP SDL-HAT-RIGHT SDL-HAT-DOWN SDL-HAT-LEFT SDL-HAT-RIGHT-UP SDL-HAT-RIGHT-DOWN SDL-HAT-LEFT-UP SDL-HAT-LEFT-DOWN C Function Name: SDL_JoystickGetHat Procedure: ( SDL-JOYSTICK-INSTANCE-ID joystick ) \u2192 number Parameters: joystick : A SDL-JOYSTICK object. Returns: Instance ID of the SDL-JOYSTICK object. C Function Name: SDL_JoystickInstanceID Procedure: ( SDL-JOYSTICK-INSTANCE-ID joystick ) \u2192 string Parameters: joystick : A SDL-JOYSTICK object. Returns: Name of the SDL-JOYSTICK object. C Function Name: SDL_JoystickName Procedure: ( SDL-JOYSTICK-NAME-FOR-INDEX index ) \u2192 string Parameters: index : A number. Index of the joystick. Returns: Name of the joystick at index. C Function Name: SDL_JoystickNameForIndex Procedure: ( SDL-JOYSTICK-NUM-AXES joystick ) \u2192 number Parameters: joystick : A SDL-JOYSTICK object. Returns: Number of axes the joystick has. C Function Name: SDL_JoystickNumAxes Procedure: ( SDL-JOYSTICK-NUM-BALLS joystick ) \u2192 number Parameters: joystick : A SDL-JOYSTICK object. Returns: Number of balls the joystick has. C Function Name: SDL_JoystickNumBalls Procedure: ( SDL-JOYSTICK-NUM-BALLS joystick ) \u2192 number Parameters: joystick : A SDL-JOYSTICK object. Returns: Number of buttons the joystick has. C Function Name: SDL_JoystickNumButtons Procedure: ( SDL-JOYSTICK-NUM-HATS joystick ) \u2192 number Parameters: joystick : A SDL-JOYSTICK object. Returns: Number of hats the joystick has. C Function Name: SDL_JoystickNumHats Procedure: ( SDL-JOYSTICK-GET-DEVICE-GUID ) \u2192 SDL-JOYSTICK-GUID C Function Name: SDL_JoystickGetDeviceGUID Notes: Unimplemented Procedure: ( SDL-JOYSTICK-GET-GUID ) \u2192 SDL-JOYSTICK-GUID C Function Name: SDL_JoystickGetGUID Notes: Unimplemented Procedure: ( SDL-JOYSTICK-GUID-FROM-STRING ) \u2192 SDL-JOYSTICK-GUID C Function Name: SDL_JoystickGetGUIDFromString Notes: Unimplemented Procedure: ( SDL-JOYSTICK-GET-GUID-STRING ) \u2192 SDL-JOYSTICK-GUID C Function Name: SDL_JoystickGetGUIDString Notes: Unimplemented Game Controller Support Procedure: ( SDL-GAME-CONTROLLER? index ) \u2192 boolean Parameters: index : A number. Index of the game controller/joystick. Returns: #t if joystick is a game controller or #f otherwise. C Function Name: SDL_IsGameController Procedure: ( SDL-GAME-CONTROLLER-ATTACHED? controller ) \u2192 boolean Parameters: controller : A SDL-GAME-CONTROLLER object. Returns: #t if game controller is attached or #f otherwise. C Function Name: SDL_GameControllerGetAttached Procedure: ( SDL-GAME-CONTROLLER-BUTTON-PRESSED? controller button ) \u2192 boolean Parameters: controller : A SDL-GAME-CONTROLLER object. button : symbol SDL-CONTROLLER-BUTTON-A SDL-CONTROLLER-BUTTON-B SDL-CONTROLLER-BUTTON-X SDL-CONTROLLER-BUTTON-Y SDL-CONTROLLER-BUTTON-BACK SDL-CONTROLLER-BUTTON-GUIDE SDL-CONTROLLER-BUTTON-START SDL-CONTROLLER-BUTTON-LEFT-STICK SDL-CONTROLLER-BUTTON-RIGHT-STICK SDL-CONTROLLER-BUTTON-LEFT-SHOULDER SDL-CONTROLLER-BUTTON-RIGHT-SHOULDER SDL-CONTROLLER-BUTTON-UP SDL-CONTROLLER-BUTTON-DOWN SDL-CONTROLLER-BUTTON-LEFT SDL-CONTROLLER-BUTTON-RIGHT Returns: #t if button is pressed or #f otherwise. C Function Name: SDL_GameControllerGetButton Procedure: ( SDL-GAME-CONTROLLER-AXIS controller axis ) \u2192 number Parameters: controller : A SDL-GAME-CONTROLLER object. axis : symbol SDL-CONTROLLER-AXIS-LEFT-X SDL-CONTROLLER-AXIS-LEFT-Y SDL-CONTROLLER-AXIS-RIGHT-X SDL-CONTROLLER-AXIS-RIGHT-Y SDL-CONTROLLER-AXIS-TRIGGER-LEFT SDL-CONTROLLER-AXIS-TRIGGER-RIGHT Returns: The value of the axis. C Function Name: SDL_GameControllerGetAxis Procedure: ( SDL-GAME-CONTROLLER-OPEN index ) \u2192 SDL-GAME-CONTROLLER Parameters: index : The joystick to open as a game controller. Returns: A SDL-GAME-CONTROLLER object or '() . C Function Name: SDL_GameControllerOpen Procedure: ( SDL-GAME-CONTROLLER-CLOSE controller ) \u2192 '() Parameters: controller : A SDL-GAME-CONTROLLER object. C Function Name: SDL_GameControllerClose Procedure: ( SDL-GAME-CONTROLLER-UPDATE ) \u2192 '() C Function Name: SDL_GameControllerUpdate Procedure: ( SDL-GAME-CONTROLLER-NAME controller ) \u2192 string Parameters: controller : A SDL-GAME-CONTROLLER object. Returns: A string containing the name of the device. C Function Name: SDL_GameControllerName Procedure: ( SDL-GAME-CONTROLLER-FOR-INDEX index ) \u2192 string Parameters: index : A number. The index of the game controller. Returns: A string containing the name of the device. C Function Name: SDL_GameControllerNameForIndex Procedure: ( SDL-GAME-CONTROLLER-MAPPING controller ) \u2192 string Parameters: controller : A SDL-GAME-CONTROLLER object. Returns: A string containing the button mapping of the device. C Function Name: SDL_GameControllerMapping Procedure: ( SDL-BUTTON->STRING button ) \u2192 string Parameters: button : symbol SDL-CONTROLLER-BUTTON-A SDL-CONTROLLER-BUTTON-B SDL-CONTROLLER-BUTTON-X SDL-CONTROLLER-BUTTON-Y SDL-CONTROLLER-BUTTON-BACK SDL-CONTROLLER-BUTTON-GUIDE SDL-CONTROLLER-BUTTON-START SDL-CONTROLLER-BUTTON-LEFT-STICK SDL-CONTROLLER-BUTTON-RIGHT-STICK SDL-CONTROLLER-BUTTON-LEFT-SHOULDER SDL-CONTROLLER-BUTTON-RIGHT-SHOULDER SDL-CONTROLLER-BUTTON-UP SDL-CONTROLLER-BUTTON-DOWN SDL-CONTROLLER-BUTTON-LEFT SDL-CONTROLLER-BUTTON-RIGHT Returns: A string containing name of a button. C Function Name: SDL_GameControllerGetStringForButton Procedure: ( SDL-AXIS->STRING axis ) \u2192 string Parameters: axis : symbol SDL-CONTROLLER-AXIS-LEFT-X SDL-CONTROLLER-AXIS-LEFT-Y SDL-CONTROLLER-AXIS-RIGHT-X SDL-CONTROLLER-AXIS-RIGHT-Y SDL-CONTROLLER-AXIS-TRIGGER-LEFT SDL-CONTROLLER-AXIS-TRIGGER-RIGHT Returns: A string containing the name of the axis. C Function Name: SDL_GameControllerGetStringForAxis Procedure: ( SDL-GAME-CONTROLLER-MAPPING name ) \u2192 symbol Parameters: name : A string. Name of the button. Returns: SDL-CONTROLLER-BUTTON-A SDL-CONTROLLER-BUTTON-B SDL-CONTROLLER-BUTTON-X SDL-CONTROLLER-BUTTON-Y SDL-CONTROLLER-BUTTON-BACK SDL-CONTROLLER-BUTTON-GUIDE SDL-CONTROLLER-BUTTON-START SDL-CONTROLLER-BUTTON-LEFT-STICK SDL-CONTROLLER-BUTTON-RIGHT-STICK SDL-CONTROLLER-BUTTON-LEFT-SHOULDER SDL-CONTROLLER-BUTTON-RIGHT-SHOULDER SDL-CONTROLLER-BUTTON-UP SDL-CONTROLLER-BUTTON-DOWN SDL-CONTROLLER-BUTTON-LEFT SDL-CONTROLLER-BUTTON-RIGHT SDL-CONTROLLER-BUTTON-INVALID C Function Name: SDL_GameControllerGetButtonFromString Procedure: ( STRING->SDL-AXIS name ) \u2192 symbol Parameters: name : A string. Name of the axis. Returns: SDL-CONTROLLER-AXIS-LEFT-X SDL-CONTROLLER-AXIS-LEFT-Y SDL-CONTROLLER-AXIS-RIGHT-X SDL-CONTROLLER-AXIS-RIGHT-Y SDL-CONTROLLER-AXIS-TRIGGER-LEFT SDL-CONTROLLER-AXIS-TRIGGER-RIGHT SDL-CONTROLLER-AXIS-INVALID C Function Name: SDL_GameControllerGetAxisFromString Procedure: ( SDL-CONTROLLER->SDL-JOYSTICK controller ) \u2192 SDL-JOYSTICK Parameters: controller : A SDL-GAME-CONTROLLER object. Returns: The SDL-JOYSTICK object corresponding to the SDL-GAME-CONTROLLER object. C Function Name: SDL_GameControllerGetJoystick Procedure: ( SDL-JOYSTICK-ID->SDL-CONTROLLER id ) \u2192 SDL-GAME-CONTROLLER Parameters: id : Joystick's instance ID. Returns: The SDL-GAME-CONTROLLER object or '() . C Function Name: SDL_GameControllerFromInstanceID Notes: Not up to specifications. Procedure: ( SDL-GAME-CONTROLLER-EVENT-STATE ) \u2192 number C Function Name: SDL_GameControllerEventState Notes: Unimplemented Procedure: ( SDL-GAME-CONTROLLER-GET-BIND-FOR-BUTTON ) \u2192 ??? C Function Name: SDL_GameControllerGetBindForButton Notes: Unimplemented Procedure: ( SDL-GAME-CONTROLLER-GET-BIND-FOR-AXIS ) \u2192 ??? C Function Name: SDL_GameControllerGetBindForAxis Notes: Unimplemented Procedure: ( SDL-GAME-CONTROLLER-MAPPING-FOR-GUID ) \u2192 string C Function Name: SDL_GameControllerMappingForGUID Notes: Unimplemented Procedure: ( SDL-GAME-CONTROLLER-ADD-MAPPING-FROM-RW ) \u2192 number C Function Name: SDL_GameControllerAddMappingsFromRW Notes: Unimplemented Procedure: ( SDL-GAME-CONTROLLER-ADD-MAPPING-FROM-FILE ) \u2192 number C Function Name: SDL_GameControllerAddMappingsFromFile Notes: Unimplemented Procedure: ( SDL-GAME-CONTROLLER-ADD-MAPPING ) \u2192 number C Function Name: SDL_GameControllerAddMapping Notes: Unimplemented Touch Procedure: ( SDL-GET-NUM-TOUCH-DEVICES ) \u2192 number Returns: Number of touch devices available. C Function Name: SDL_GetNumTouchDevices Procedure: ( SDL-GET-TOUCH-DEVICE index ) \u2192 number Parameters: index : A number. Index of the touch device. Returns: The ID of the touch device. C Function Name: SDL_GetTouchDevice Procedure: ( SDL-GET-NUM-TOUCH-FINGERS touch-id ) \u2192 number Parameters: touch-id : The ID of the touch device. Returns: The number of active fingers. C Function Name: SDL_GetNumTouchFingers Procedure: ( SDL-GET-TOUCH-FINGER touch-id index ) \u2192 SDL-FINGER Parameters: touch-id : The ID of the touch device. index : The index of a finger. Returns: A SDL-FINGER record or '() . C Function Name: SDL_GetTouchFinger Notes: Not up to specifications.","title":"Inputs"},{"location":"ref/inputs/#data","text":"Record: ( SDL-FINGER ) Fields: id : ID of a finger. x : X-pos of a finger input. y : Y-pos of a finger input. p : Pressure of a finger input.","title":"Data"},{"location":"ref/inputs/#keyboard-support","text":"Procedure: ( SDL-GET-KEY-FROM-NAME name ) \u2192 number Parameters: name : A string. Name of the keycode. Returns: A number corresponding to it's keycode. C Function Name: SDL_GetKeyFromName Procedure: ( SDL-GET-KEY-FROM-SCANCODE scancode ) \u2192 number Parameters: scancode : Value of a scancode. Returns: A number corresponding to it's keycode. C Function Name: SDL_GetKeyFromScancode Procedure: ( SDL-GET-KEY-NAME key ) \u2192 string Parameters: key : Value of a keycode. Returns: A string containing the name of a keycode. C Function Name: SDL_GetKeyName Procedure: ( SDL-GET-KEYBOARD-FOCUS ) \u2192 SDL-WINDOW Returns: A window object that has the keyboard focus. C Function Name: SDL_GetKeyboardFocus Procedure: ( SDL-GET-KEYBOARD-STATE ) \u2192 (LAMBDA SCANCODE) \u2192 boolean Returns: A procedure that when passed a scancode returns #t if the key is pressed otherwise #f . C Function Name: SDL_GetKeyboardState Examples: (define key-state (sdl-get-keyboard-state)) (if (key-state SDL-SCANCODE-RETURN) (printf \"<RETURN> key pressed.~n\")) (if (and (key-state SDL-SCANCODE-RIGHT) (key-state SDL-SCANCODE-UP)) (printf \"Right and Up Keys Pressed.~n\")) Procedure: ( SDL-GET-MOD-STATE ) \u2192 int Returns: A number that's bits have been set with key modifer values. C Function Name: SDL_GetModState Procedure: ( SDL-GET-SCANCODE-FROM-KEY key ) \u2192 int Parameters: key : Value of a keycode. Returns: Scancode equivalent of keycode. C Function Name: SDL_GetScancodeFromKey Procedure: ( SDL-GET-SCANCODE-FROM-NAME name ) \u2192 int Parameters: name : The name of a scancode as a string. Returns: Scancode value of the string. C Function Name: SDL_GetScancodeFromName Procedure: ( SDL-GET-SCANCODE-NAME code ) \u2192 string Parameters: code : Value of a scancode. Returns: String value of a scancode. C Function Name: SDL_GetScancodeName Procedure: ( SDL-HAS-SCREEN-KEYBOARD-SUPPORT? ) \u2192 boolean Returns: #t if screen has keyboard support or #f otherwise. C Function Name: SDL_HasScreenKeyboardSupport Procedure: ( SDL-IS-SCREEN-KEYBOARD-SHOWN? window ) \u2192 boolean Parameters: window : A SDL-WINDOW object. Returns: #t if screen's keyboard is shown or #f otherwise. C Function Name: SDL_IsScreenKeyboardShown Procedure: ( SDL-IS-TEXT-INPUT-ACTIVE? ) \u2192 boolean Returns: #t if the text input is active or #f otherwise. C Function Name: SDL_IsTextInputActive Procedure: ( SDL-SET-MOD-STATE! mods ) \u2192 '() Parameters: mods : A series of key modifer values. C Function Name: SDL_SetModState Examples: (sdl-set-mod-state! KMOD-LSHIFT KMOD-CAPS KMOD-RCTRL) Procedure: ( SDL-SET-TEXT-INPUT-RECT! rect ) \u2192 '() Parameters: rect : A SDL-RECT record. (Optional) C Function Name: SDL_SetTextInputRect Notes: Not implemented. Procedure: ( SDL-START-TEXT-INPUT ) \u2192 '() C Function Name: SDL_StartTextInput Procedure: ( SDL-STOP-TEXT-INPUT ) \u2192 '() C Function Name: SDL_StopTextInput","title":"Keyboard Support"},{"location":"ref/inputs/#mouse-support","text":"Procedure: ( SDL-CAPTURE-MOUSE enable ) \u2192 boolean Parameters: enable : Sets whether mouse should be captured or ignored. Returns: #t if set succeeded #f otherwise. C Function Name: SDL_CaptureMouse Procedure: ( SDL-CREATE-COLOR-CURSOR image hot-x hot-y ) \u2192 SDL-CURSOR Parameters: image : A SDL-SURFACT object. hot-x : The x-position of the cursor hot spot. hot-y : The y-position of the cursor hot spot. Returns: A SDL-CURSOR object or '() on failure. C Function Name: SDL_CreateColorCursor Notes: Not up to specifications. Procedure: ( SDL-CREATE-SYSTEM-CURSOR id ) \u2192 SDL-CURSOR Parameters: id : symbol SDL-SYSTEM-CURSOR-ARROW SDL-SYSTEM-CURSOR-IBEAM SDL-SYSTEM-CURSOR-WAIT SDL-SYSTEM-CURSOR-CROSSHAIR SDL-SYSTEM-CURSOR-WAIT-ARROW SDL-SYSTEM-CURSOR-SIZE-NWSE SDL-SYSTEM-CURSOR-SIZE-NESW SDL-SYSTEM-CURSOR-SIZE-WE SDL-SYSTEM-CURSOR-SIZE-NS SDL-SYSTEM-CURSOR-SIZE-ALL SDL-SYSTEM-CURSOR-NO SDL-SYSTEM-CURSOR-HAND Returns: A SDL-CURSOR object or '() on failure. C Function Name: SDL_CreateSystemCursor Notes: Not up to specifications. Procedure: ( SDL-FREE-CURSOR cursor ) \u2192 '() Parameters: cursor : A SDL-CURSOR object. C Function Name: SDL_FreeCursor Notes: Not up to specifications. Procedure: ( SDL-GET-CURSOR ) \u2192 SDL-CURSOR Returns: The current cursor as a SDL-CURSOR object. C Function Name: SDL_GetCursor Procedure: ( SDL-FREE-CURSOR toggle ) \u2192 number Parameters: toggle : A device query value. Returns: The value of SDL-ENABLE if cursor is shown, SDL-DISABLE if cursor is hidden, or a negative value indicating error. C Function Name: SDL_ShowCursor Procedure: ( SDL-GET-MOUSE-FOCUS ) \u2192 SDL-WINDOW Returns: The SDL-WINDOW object that has the mouse focus. C Function Name: SDL_GetMouseFocus Procedure: ( SDL-GET-DEFAULT-CURSOR ) \u2192 SDL-CURSOR Returns: A SDL-CURSOR object that is the system's default cursor. C Function Name: SDL_GetDefaultCursor Procedure: ( SDL-WARP-MOUSE-IN-WINDOW window x y ) \u2192 '() Parameters: window : A SDL-WINDOW object. x : The x-coordinate within the window. y : The y-coordinate within the window. C Function Name: SDL_WarpMouseInWindow Procedure: ( SDL-WARP-MOUSE-GLOBAL x y ) \u2192 number Returns: 0 on success or a negative number on failure. Parameters: x : The x-coordinate. y : The y-coordinate. C Function Name: SDL_WarpMouseInWindow Procedure: ( SDL-SET-CURSOR! cursor ) \u2192 '() Parameters: cursor : A SDL-CURSOR object. C Function Name: SDL_SetCursor Procedure: ( SDL-SET-RELATIVE-MOUSE-MODE! enable ) \u2192 number Parameters: enable : A boolean. Value to set mouse relative mode. Returns: 0 on success or a negative number on failure. C Function Name: SDL_SetRelativeMouseMode Procedure: ( SDL-GET-RELATIVE-MOUSE-MODE! ) \u2192 boolean Returns: #t if mouse is in relative mode or #f otherwise. C Function Name: SDL_GetRelativeMouseMode Procedure: ( SDL-CREATE-CURSOR ) \u2192 SDL-CURSOR C Function Name: SDL_CreateCursor Notes: Unimplemented Procedure: ( SDL-GET-RELATIVE-MOUSE-STATE ) \u2192 number C Function Name: SDL_GetRelativeMouseState Notes: Unimplemented Procedure: ( SDL-GET-GLOBAL-MOUSE-STATE ) \u2192 number C Function Name: SDL_GetGlobalMouseState Notes: Unimplemented Procedure: ( SDL-GET-MOUSE-STATE ) \u2192 number C Function Name: SDL_GetMouseState Notes: Unimplemented","title":"Mouse Support"},{"location":"ref/inputs/#joystick-support","text":"Procedure: ( SDL-JOYSTICK-OPEN index ) \u2192 SDL-JOYSTICK Parameters: index : The index of the joystick. Returns: The SDL-JOYSTICK object or '() . C Function Name: SDL_JoystickOpen Notes: Not up to specifications. Procedure: ( SDL-JOYSTICK-CLOSE joystick ) \u2192 '() Parameters: joystick : A SDL-JOYSTICK object. C Function Name: SDL_JoystickClose Notes: Not up to specifications. Procedure: ( SDL-JOYSTICK-NUM ) \u2192 number Returns: The amount of joysticks that can be accessed. C Function Name: SDL_NumJoystick Procedure: ( SDL-JOYSTICK-CURRENT-POWER-LEVEL joystick ) \u2192 symbol Parameters: joystick : A SDL-JOYSTICK object. Returns: levels : sybmol SDL-JOYSTICK-POWER-UNKNOWN SDL-JOYSTICK-POWER-EMPTY SDL-JOYSTICK-POWER-LOW SDL-JOYSTICK-POWER-MEDIUM SDL-JOYSTICK-POWER-FULL SDL-JOYSTICK-POWER-WIRED SDL-JOYSTICK-POWER-MAX C Function Name: SDL_JoystickCurrentPowerLevel Procedure: ( SDL-JOYSTICK-EVENT-STATE state ) \u2192 number Parameters: state : Can be SDL-QUERY , SDL-IGNORE , or SDL-ENABLE . Returns: 1 if enabled, 0 if disabled, or a negative error code. C Function Name: SDL_JoystickEventState Procedure: ( SDL-JOYSTICK-FROM-INSTANCE-ID instance-id ) \u2192 SDL-JOYSTICK Parameters: instance-id : Instance ID from the event system. Returns: The SDL-JOYSTICK object or '() . C Function Name: SDL_JoystickFromInstanceID Procedure: ( SDL-JOYSTICK-IS-ATTACHED? joystick ) \u2192 boolean Parameters: joystick : A SDL-JOYSTICK object. Returns: #t if joystick is attached or #f otherwise. C Function Name: SDL_JoystickGetAttached Procedure: ( SDL-JOYSTICK-GET-AXIS joystick axis ) \u2192 number Parameters: joystick : A SDL-JOYSTICK object. axis : A number. The index of the axis. Returns: The value of the axis or 0 on failure. C Function Name: SDL_JoystickGetAxis Procedure: ( SDL-JOYSTICK-GET-BALL joystick ball ) \u2192 list Parameters: joystick : A SDL-JOYSTICK object. ball : A number. The index of the ball. Returns: A list (dx dy) or '() . C Function Name: SDL_JoystickGetBall Procedure: ( SDL-JOYSTICK-IS-BUTTON-PRESSED? joystick button ) \u2192 boolean Parameters: joystick : A SDL-JOYSTICK object. button : A number. The index of the button. Returns: #t if button was pressed or #f otherwise. C Function Name: SDL_JoystickGetButton Procedure: ( SDL-JOYSTICK-GET-HAT joystick hat ) \u2192 symbol Parameters: joystick : A SDL-JOYSTICK object. hat : A number. The index of the hat. Returns: positions : symbol SDL-HAT-CENTERED SDL-HAT-UP SDL-HAT-RIGHT SDL-HAT-DOWN SDL-HAT-LEFT SDL-HAT-RIGHT-UP SDL-HAT-RIGHT-DOWN SDL-HAT-LEFT-UP SDL-HAT-LEFT-DOWN C Function Name: SDL_JoystickGetHat Procedure: ( SDL-JOYSTICK-INSTANCE-ID joystick ) \u2192 number Parameters: joystick : A SDL-JOYSTICK object. Returns: Instance ID of the SDL-JOYSTICK object. C Function Name: SDL_JoystickInstanceID Procedure: ( SDL-JOYSTICK-INSTANCE-ID joystick ) \u2192 string Parameters: joystick : A SDL-JOYSTICK object. Returns: Name of the SDL-JOYSTICK object. C Function Name: SDL_JoystickName Procedure: ( SDL-JOYSTICK-NAME-FOR-INDEX index ) \u2192 string Parameters: index : A number. Index of the joystick. Returns: Name of the joystick at index. C Function Name: SDL_JoystickNameForIndex Procedure: ( SDL-JOYSTICK-NUM-AXES joystick ) \u2192 number Parameters: joystick : A SDL-JOYSTICK object. Returns: Number of axes the joystick has. C Function Name: SDL_JoystickNumAxes Procedure: ( SDL-JOYSTICK-NUM-BALLS joystick ) \u2192 number Parameters: joystick : A SDL-JOYSTICK object. Returns: Number of balls the joystick has. C Function Name: SDL_JoystickNumBalls Procedure: ( SDL-JOYSTICK-NUM-BALLS joystick ) \u2192 number Parameters: joystick : A SDL-JOYSTICK object. Returns: Number of buttons the joystick has. C Function Name: SDL_JoystickNumButtons Procedure: ( SDL-JOYSTICK-NUM-HATS joystick ) \u2192 number Parameters: joystick : A SDL-JOYSTICK object. Returns: Number of hats the joystick has. C Function Name: SDL_JoystickNumHats Procedure: ( SDL-JOYSTICK-GET-DEVICE-GUID ) \u2192 SDL-JOYSTICK-GUID C Function Name: SDL_JoystickGetDeviceGUID Notes: Unimplemented Procedure: ( SDL-JOYSTICK-GET-GUID ) \u2192 SDL-JOYSTICK-GUID C Function Name: SDL_JoystickGetGUID Notes: Unimplemented Procedure: ( SDL-JOYSTICK-GUID-FROM-STRING ) \u2192 SDL-JOYSTICK-GUID C Function Name: SDL_JoystickGetGUIDFromString Notes: Unimplemented Procedure: ( SDL-JOYSTICK-GET-GUID-STRING ) \u2192 SDL-JOYSTICK-GUID C Function Name: SDL_JoystickGetGUIDString Notes: Unimplemented","title":"Joystick Support"},{"location":"ref/inputs/#game-controller-support","text":"Procedure: ( SDL-GAME-CONTROLLER? index ) \u2192 boolean Parameters: index : A number. Index of the game controller/joystick. Returns: #t if joystick is a game controller or #f otherwise. C Function Name: SDL_IsGameController Procedure: ( SDL-GAME-CONTROLLER-ATTACHED? controller ) \u2192 boolean Parameters: controller : A SDL-GAME-CONTROLLER object. Returns: #t if game controller is attached or #f otherwise. C Function Name: SDL_GameControllerGetAttached Procedure: ( SDL-GAME-CONTROLLER-BUTTON-PRESSED? controller button ) \u2192 boolean Parameters: controller : A SDL-GAME-CONTROLLER object. button : symbol SDL-CONTROLLER-BUTTON-A SDL-CONTROLLER-BUTTON-B SDL-CONTROLLER-BUTTON-X SDL-CONTROLLER-BUTTON-Y SDL-CONTROLLER-BUTTON-BACK SDL-CONTROLLER-BUTTON-GUIDE SDL-CONTROLLER-BUTTON-START SDL-CONTROLLER-BUTTON-LEFT-STICK SDL-CONTROLLER-BUTTON-RIGHT-STICK SDL-CONTROLLER-BUTTON-LEFT-SHOULDER SDL-CONTROLLER-BUTTON-RIGHT-SHOULDER SDL-CONTROLLER-BUTTON-UP SDL-CONTROLLER-BUTTON-DOWN SDL-CONTROLLER-BUTTON-LEFT SDL-CONTROLLER-BUTTON-RIGHT Returns: #t if button is pressed or #f otherwise. C Function Name: SDL_GameControllerGetButton Procedure: ( SDL-GAME-CONTROLLER-AXIS controller axis ) \u2192 number Parameters: controller : A SDL-GAME-CONTROLLER object. axis : symbol SDL-CONTROLLER-AXIS-LEFT-X SDL-CONTROLLER-AXIS-LEFT-Y SDL-CONTROLLER-AXIS-RIGHT-X SDL-CONTROLLER-AXIS-RIGHT-Y SDL-CONTROLLER-AXIS-TRIGGER-LEFT SDL-CONTROLLER-AXIS-TRIGGER-RIGHT Returns: The value of the axis. C Function Name: SDL_GameControllerGetAxis Procedure: ( SDL-GAME-CONTROLLER-OPEN index ) \u2192 SDL-GAME-CONTROLLER Parameters: index : The joystick to open as a game controller. Returns: A SDL-GAME-CONTROLLER object or '() . C Function Name: SDL_GameControllerOpen Procedure: ( SDL-GAME-CONTROLLER-CLOSE controller ) \u2192 '() Parameters: controller : A SDL-GAME-CONTROLLER object. C Function Name: SDL_GameControllerClose Procedure: ( SDL-GAME-CONTROLLER-UPDATE ) \u2192 '() C Function Name: SDL_GameControllerUpdate Procedure: ( SDL-GAME-CONTROLLER-NAME controller ) \u2192 string Parameters: controller : A SDL-GAME-CONTROLLER object. Returns: A string containing the name of the device. C Function Name: SDL_GameControllerName Procedure: ( SDL-GAME-CONTROLLER-FOR-INDEX index ) \u2192 string Parameters: index : A number. The index of the game controller. Returns: A string containing the name of the device. C Function Name: SDL_GameControllerNameForIndex Procedure: ( SDL-GAME-CONTROLLER-MAPPING controller ) \u2192 string Parameters: controller : A SDL-GAME-CONTROLLER object. Returns: A string containing the button mapping of the device. C Function Name: SDL_GameControllerMapping Procedure: ( SDL-BUTTON->STRING button ) \u2192 string Parameters: button : symbol SDL-CONTROLLER-BUTTON-A SDL-CONTROLLER-BUTTON-B SDL-CONTROLLER-BUTTON-X SDL-CONTROLLER-BUTTON-Y SDL-CONTROLLER-BUTTON-BACK SDL-CONTROLLER-BUTTON-GUIDE SDL-CONTROLLER-BUTTON-START SDL-CONTROLLER-BUTTON-LEFT-STICK SDL-CONTROLLER-BUTTON-RIGHT-STICK SDL-CONTROLLER-BUTTON-LEFT-SHOULDER SDL-CONTROLLER-BUTTON-RIGHT-SHOULDER SDL-CONTROLLER-BUTTON-UP SDL-CONTROLLER-BUTTON-DOWN SDL-CONTROLLER-BUTTON-LEFT SDL-CONTROLLER-BUTTON-RIGHT Returns: A string containing name of a button. C Function Name: SDL_GameControllerGetStringForButton Procedure: ( SDL-AXIS->STRING axis ) \u2192 string Parameters: axis : symbol SDL-CONTROLLER-AXIS-LEFT-X SDL-CONTROLLER-AXIS-LEFT-Y SDL-CONTROLLER-AXIS-RIGHT-X SDL-CONTROLLER-AXIS-RIGHT-Y SDL-CONTROLLER-AXIS-TRIGGER-LEFT SDL-CONTROLLER-AXIS-TRIGGER-RIGHT Returns: A string containing the name of the axis. C Function Name: SDL_GameControllerGetStringForAxis Procedure: ( SDL-GAME-CONTROLLER-MAPPING name ) \u2192 symbol Parameters: name : A string. Name of the button. Returns: SDL-CONTROLLER-BUTTON-A SDL-CONTROLLER-BUTTON-B SDL-CONTROLLER-BUTTON-X SDL-CONTROLLER-BUTTON-Y SDL-CONTROLLER-BUTTON-BACK SDL-CONTROLLER-BUTTON-GUIDE SDL-CONTROLLER-BUTTON-START SDL-CONTROLLER-BUTTON-LEFT-STICK SDL-CONTROLLER-BUTTON-RIGHT-STICK SDL-CONTROLLER-BUTTON-LEFT-SHOULDER SDL-CONTROLLER-BUTTON-RIGHT-SHOULDER SDL-CONTROLLER-BUTTON-UP SDL-CONTROLLER-BUTTON-DOWN SDL-CONTROLLER-BUTTON-LEFT SDL-CONTROLLER-BUTTON-RIGHT SDL-CONTROLLER-BUTTON-INVALID C Function Name: SDL_GameControllerGetButtonFromString Procedure: ( STRING->SDL-AXIS name ) \u2192 symbol Parameters: name : A string. Name of the axis. Returns: SDL-CONTROLLER-AXIS-LEFT-X SDL-CONTROLLER-AXIS-LEFT-Y SDL-CONTROLLER-AXIS-RIGHT-X SDL-CONTROLLER-AXIS-RIGHT-Y SDL-CONTROLLER-AXIS-TRIGGER-LEFT SDL-CONTROLLER-AXIS-TRIGGER-RIGHT SDL-CONTROLLER-AXIS-INVALID C Function Name: SDL_GameControllerGetAxisFromString Procedure: ( SDL-CONTROLLER->SDL-JOYSTICK controller ) \u2192 SDL-JOYSTICK Parameters: controller : A SDL-GAME-CONTROLLER object. Returns: The SDL-JOYSTICK object corresponding to the SDL-GAME-CONTROLLER object. C Function Name: SDL_GameControllerGetJoystick Procedure: ( SDL-JOYSTICK-ID->SDL-CONTROLLER id ) \u2192 SDL-GAME-CONTROLLER Parameters: id : Joystick's instance ID. Returns: The SDL-GAME-CONTROLLER object or '() . C Function Name: SDL_GameControllerFromInstanceID Notes: Not up to specifications. Procedure: ( SDL-GAME-CONTROLLER-EVENT-STATE ) \u2192 number C Function Name: SDL_GameControllerEventState Notes: Unimplemented Procedure: ( SDL-GAME-CONTROLLER-GET-BIND-FOR-BUTTON ) \u2192 ??? C Function Name: SDL_GameControllerGetBindForButton Notes: Unimplemented Procedure: ( SDL-GAME-CONTROLLER-GET-BIND-FOR-AXIS ) \u2192 ??? C Function Name: SDL_GameControllerGetBindForAxis Notes: Unimplemented Procedure: ( SDL-GAME-CONTROLLER-MAPPING-FOR-GUID ) \u2192 string C Function Name: SDL_GameControllerMappingForGUID Notes: Unimplemented Procedure: ( SDL-GAME-CONTROLLER-ADD-MAPPING-FROM-RW ) \u2192 number C Function Name: SDL_GameControllerAddMappingsFromRW Notes: Unimplemented Procedure: ( SDL-GAME-CONTROLLER-ADD-MAPPING-FROM-FILE ) \u2192 number C Function Name: SDL_GameControllerAddMappingsFromFile Notes: Unimplemented Procedure: ( SDL-GAME-CONTROLLER-ADD-MAPPING ) \u2192 number C Function Name: SDL_GameControllerAddMapping Notes: Unimplemented","title":"Game Controller Support"},{"location":"ref/inputs/#touch","text":"Procedure: ( SDL-GET-NUM-TOUCH-DEVICES ) \u2192 number Returns: Number of touch devices available. C Function Name: SDL_GetNumTouchDevices Procedure: ( SDL-GET-TOUCH-DEVICE index ) \u2192 number Parameters: index : A number. Index of the touch device. Returns: The ID of the touch device. C Function Name: SDL_GetTouchDevice Procedure: ( SDL-GET-NUM-TOUCH-FINGERS touch-id ) \u2192 number Parameters: touch-id : The ID of the touch device. Returns: The number of active fingers. C Function Name: SDL_GetNumTouchFingers Procedure: ( SDL-GET-TOUCH-FINGER touch-id index ) \u2192 SDL-FINGER Parameters: touch-id : The ID of the touch device. index : The index of a finger. Returns: A SDL-FINGER record or '() . C Function Name: SDL_GetTouchFinger Notes: Not up to specifications.","title":"Touch"},{"location":"ref/power/","text":"Power Management Status Procedure: ( SDL-GET-POWER-INFO ) \u2192 list Returns: A list of 3 elements. (seconds percentage state) C Function Name: SDL_GetPowerInfo Notes: seconds : Seconds of battery life left. Will return -1 if we can't determine a value, or we're not running on a battery. percentage : Percentage of battery life left, between 0 and 100. Will return -1 if we can't determine a value, or we're not running on a battery. state SDL-POWERSTATE-UNKNOWN SDL-POWERSTATE-ON-BATTERY SDL-POWERSTATE-NO-BATTERY SDL-POWERSTATE-CHARGING SDL-POWERSTATE-CHARGED","title":"Power Management"},{"location":"ref/power/#power-management-status","text":"Procedure: ( SDL-GET-POWER-INFO ) \u2192 list Returns: A list of 3 elements. (seconds percentage state) C Function Name: SDL_GetPowerInfo Notes: seconds : Seconds of battery life left. Will return -1 if we can't determine a value, or we're not running on a battery. percentage : Percentage of battery life left, between 0 and 100. Will return -1 if we can't determine a value, or we're not running on a battery. state SDL-POWERSTATE-UNKNOWN SDL-POWERSTATE-ON-BATTERY SDL-POWERSTATE-NO-BATTERY SDL-POWERSTATE-CHARGING SDL-POWERSTATE-CHARGED","title":"Power Management Status"},{"location":"ref/timers/","text":"Timer Support Procedure: ( sdl-delay ms ) \u2192 void Parameters: ms : A number. The number of milliseconds to delay. C Function Name: SDL_Delay Other Docs: SDL Wiki Procedure: ( sdl-get-ticks ) \u2192 number Returns: Number of milliseconds since the SDL library initialized. C Function Name: SDL_GetTicks Other Docs: SDL Wiki Procedure: ( sdl-get-performance-counter ) \u2192 number Returns: The current counter value. C Function Name: SDL_GetPerformanceCounter Other Docs: SDL Wiki Procedure: ( sdl-get-performance-frequency ) \u2192 number Returns: A platform-specific count per second. C Function Name: SDL_GetPerformanceFrequency Other Docs: SDL Wiki Procedure: ( sdl-add-timer! interval procedure ) \u2192 sdl-timer-id Parameters: interval : A number. Delay in milliseconds. procedure : A procedure of 1 argument. Must return a number which is the new delay interval. Returns: A number representing the timer id. If id is 0 an error occured. C Function Name: SDL_AddTimer Other Docs: SDL Wiki Examples: (define my-timer (sdl-add-timer! 500 (lambda (interval) (printf \"~d~n\" interval) interval))) Procedure: ( sdl-remove-timer! timer-id ) \u2192 number Parameters: timer-id : A number created by calling sdl-add-timer! . Returns: SDL-TRUE or SDL-FALSE . C Function Name: SDL_RemoveTimer Other Docs: SDL Wiki","title":"Timers"},{"location":"ref/timers/#timer-support","text":"Procedure: ( sdl-delay ms ) \u2192 void Parameters: ms : A number. The number of milliseconds to delay. C Function Name: SDL_Delay Other Docs: SDL Wiki Procedure: ( sdl-get-ticks ) \u2192 number Returns: Number of milliseconds since the SDL library initialized. C Function Name: SDL_GetTicks Other Docs: SDL Wiki Procedure: ( sdl-get-performance-counter ) \u2192 number Returns: The current counter value. C Function Name: SDL_GetPerformanceCounter Other Docs: SDL Wiki Procedure: ( sdl-get-performance-frequency ) \u2192 number Returns: A platform-specific count per second. C Function Name: SDL_GetPerformanceFrequency Other Docs: SDL Wiki Procedure: ( sdl-add-timer! interval procedure ) \u2192 sdl-timer-id Parameters: interval : A number. Delay in milliseconds. procedure : A procedure of 1 argument. Must return a number which is the new delay interval. Returns: A number representing the timer id. If id is 0 an error occured. C Function Name: SDL_AddTimer Other Docs: SDL Wiki Examples: (define my-timer (sdl-add-timer! 500 (lambda (interval) (printf \"~d~n\" interval) interval))) Procedure: ( sdl-remove-timer! timer-id ) \u2192 number Parameters: timer-id : A number created by calling sdl-add-timer! . Returns: SDL-TRUE or SDL-FALSE . C Function Name: SDL_RemoveTimer Other Docs: SDL Wiki","title":"Timer Support"},{"location":"ref/values/","text":"Hints hints SDL-HINT-FRAMEBUFFER-ACCELERATION SDL-HINT-RENDER-DRIVER SDL-HINT-RENDER-OPENGL-SHADERS SDL-HINT-RENDER-DIRECT3D-THREADSAFE SDL-HINT-RENDER-DIRECT3D11-DEBUG SDL-HINT-RENDER-LOGICAL-SIZE-MODE SDL-HINT-RENDER-SCALE-QUALITY SDL-HINT-RENDER-VSYNC SDL-HINT-VIDEO-ALLOW-SCREENSAVER SDL-HINT-VIDEO-X11-XVIDMODE SDL-HINT-VIDEO-X11-XINERAMA SDL-HINT-VIDEO-X11-XRANDR SDL-HINT-VIDEO-X11-NET-WM-PING SDL-HINT-VIDEO-X11-NET-WM-BYPASS-COMPOSITOR SDL-HINT-WINDOW-FRAME-USABLE-WHILE-CURSOR-HIDDEN SDL-HINT-WINDOWS-INTRESOURCE-ICON SDL-HINT-WINDOWS-INTRESOURCE-ICON-SMALL SDL-HINT-WINDOWS-ENABLE-MESSAGELOOP SDL-HINT-GRAB-KEYBOARD SDL-HINT-MOUSE-NORMAL-SPEED-SCALE SDL-HINT-MOUSE-RELATIVE-SPEED-SCALE SDL-HINT-MOUSE-RELATIVE-MODE-WARP SDL-HINT-MOUSE-FOCUS-CLICKTHROUGH SDL-HINT-TOUCH-MOUSE-EVENTS SDL-HINT-VIDEO-MINIMIZE-ON-FOCUS-LOSS SDL-HINT-IDLE-TIMER-DISABLED SDL-HINT-ORIENTATIONS SDL-HINT-APPLE-TV-CONTROLLER-UI-EVENTS SDL-HINT-APPLE-TV-REMOTE-ALLOW-ROTATION SDL-HINT-IOS-HIDE-HOME-INDICATOR SDL-HINT-ACCELEROMETER-AS-JOYSTICK SDL-HINT-TV-REMOTE-AS-JOYSTICK SDL-HINT-XINPUT-ENABLED SDL-HINT-XINPUT-USE-OLD-JOYSTICK-MAPPING SDL-HINT-GAMECONTROLLERCONFIG SDL-HINT-GAMECONTROLLER-IGNORE-DEVICES SDL-HINT-GAMECONTROLLER-IGNORE-DEVICES-EXCEPT SDL-HINT-JOYSTICK-ALLOW-BACKGROUND-EVENTS SDL-HINT-ALLOW-TOPMOST SDL-HINT-TIMER-RESOLUTION SDL-HINT-QTWAYLAND-CONTENT-ORIENTATION SDL-HINT-QTWAYLAND-WINDOW-FLAGS SDL-HINT-THREAD-STACK-SIZE SDL-HINT-VIDEO-HIGHDPI-DISABLED SDL-HINT-MAC-CTRL-CLICK-EMULATE-RIGHT-CLICK SDL-HINT-VIDEO-WIN-D3DCOMPILER SDL-HINT-VIDEO-WINDOW-SHARE-PIXEL-FORMAT SDL-HINT-WINRT-PRIVACY-POLICY-URL SDL-HINT-WINRT-PRIVACY-POLICY-LABEL SDL-HINT-WINRT-HANDLE-BACK-BUTTON SDL-HINT-VIDEO-MAC-FULLSCREEN-SPACES SDL-HINT-MAC-BACKGROUND-APP SDL-HINT-ANDROID-APK-EXPANSION-MAIN-FILE-VERSION SDL-HINT-ANDROID-APK-EXPANSION-PATCH-FILE-VERSION SDL-HINT-IME-INTERNAL-EDITING SDL-HINT-ANDROID-SEPARATE-MOUSE-AND-TOUCH SDL-HINT-ANDROID-TRAP-BACK-BUTTON SDL-HINT-RETURN-KEY-HIDES-IME SDL-HINT-EMSCRIPTEN-KEYBOARD-ELEMENT SDL-HINT-NO-SIGNAL-HANDLERS SDL-HINT-WINDOWS-NO-CLOSE-ON-ALT-F4 SDL-HINT-BMP-SAVE-LEGACY-FORMAT SDL-HINT-WINDOWS-DISABLE-THREAD-NAMING SDL-HINT-RPI-VIDEO-LAYER SDL-HINT-VIDEO-DOUBLE-BUFFER SDL-HINT-OPENGL-ES-DRIVER SDL-HINT-AUDIO-RESAMPLING-MODE SDL-HINT-AUDIO-CATEGORY Scancodes & Keycodes Scancodes Keycodes SDL-SCANCODE-UNKNOWN SDLK-UNKNOWN SDL-SCANCODE-A SDLK-A SDL-SCANCODE-B SDLK-B SDL-SCANCODE-C SDLK-C SDL-SCANCODE-D SDLK-D SDL-SCANCODE-E SDLK-E SDL-SCANCODE-F SDLK-F SDL-SCANCODE-G SDLK-G SDL-SCANCODE-H SDLK-H SDL-SCANCODE-I SDLK-I SDL-SCANCODE-J SDLK-J SDL-SCANCODE-K SDLK-K SDL-SCANCODE-L SDLK-L SDL-SCANCODE-M SDLK-M SDL-SCANCODE-N SDLK-N SDL-SCANCODE-O SDLK-O SDL-SCANCODE-P SDLK-P SDL-SCANCODE-Q SDLK-Q SDL-SCANCODE-R SDLK-R SDL-SCANCODE-S SDLK-S SDL-SCANCODE-T SDLK-T SDL-SCANCODE-U SDLK-U SDL-SCANCODE-V SDLK-V SDL-SCANCODE-W SDLK-W SDL-SCANCODE-X SDLK-X SDL-SCANCODE-Y SDLK-Y SDL-SCANCODE-Z SDLK-Z SDL-SCANCODE-1 SDLK-1 SDL-SCANCODE-2 SDLK-2 SDL-SCANCODE-3 SDLK-3 SDL-SCANCODE-4 SDLK-4 SDL-SCANCODE-5 SDLK-5 SDL-SCANCODE-6 SDLK-6 SDL-SCANCODE-7 SDLK-7 SDL-SCANCODE-8 SDLK-8 SDL-SCANCODE-9 SDLK-9 SDL-SCANCODE-0 SDLK-0 SDL-SCANCODE-RETURN SDLK-RETURN SDL-SCANCODE-ESCAPE SDLK-ESCAPE SDL-SCANCODE-BACKSPACE SDLK-BACKSPACE SDL-SCANCODE-TAB SDLK-TAB SDL-SCANCODE-SPACE SDLK-SPACE SDL-SCANCODE-MINUS SDLK-MINUS SDL-SCANCODE-EQUALS SDLK-EQUALS SDL-SCANCODE-LEFTBRACKET SDLK-LEFTBRACKET SDL-SCANCODE-RIGHTBRACKET SDLK-RIGHTBRACKET SDL-SCANCODE-BACKSLASH SDLK-BACKSLASH SDL-SCANCODE-NONUSHASH SDL-SCANCODE-SEMICOLON SDLK-SEMICOLON SDL-SCANCODE-APOSTROPHE SDLK-QUOTE SDL-SCANCODE-GRAVE SDLK-BACKQUOTE SDL-SCANCODE-COMMA SDLK-COMMA SDL-SCANCODE-PERIOD SDLK-PERIOD SDL-SCANCODE-SLASH SDLK-SLASH SDL-SCANCODE-CAPSLOCK SDLK-CAPSLOCK SDL-SCANCODE-F1 SDLK-F1 SDL-SCANCODE-F2 SDLK-F2 SDL-SCANCODE-F3 SDLK-F3 SDL-SCANCODE-F4 SDLK-F4 SDL-SCANCODE-F5 SDLK-F5 SDL-SCANCODE-F6 SDLK-F6 SDL-SCANCODE-F7 SDLK-F7 SDL-SCANCODE-F8 SDLK-F8 SDL-SCANCODE-F9 SDLK-F9 SDL-SCANCODE-F10 SDLK-F10 SDL-SCANCODE-F11 SDLK-F11 SDL-SCANCODE-F12 SDLK-F12 SDL-SCANCODE-PRINTSCREEN SDLK-PRINTSCREEN SDL-SCANCODE-SCROLLLOCK SDLK-SCROLLLOCK SDL-SCANCODE-PAUSE SDLK-PAUSE SDL-SCANCODE-INSERT SDLK-INSERT SDL-SCANCODE-HOME SDLK-HOME SDL-SCANCODE-PAGEUP SDLK-PAGEUP SDL-SCANCODE-DELETE SDLK-DELETE SDL-SCANCODE-END SDLK-END SDL-SCANCODE-PAGEDOWN SDLK-PAGEDOWN SDL-SCANCODE-RIGHT SDLK-RIGHT SDL-SCANCODE-LEFT SDLK-LEFT SDL-SCANCODE-DOWN SDLK-DOWN SDL-SCANCODE-UP SDLK-UP SDL-SCANCODE-NUMLOCKCLEAR SDLK-NUMLOCKCLEAR SDL-SCANCODE-KP-DIVIDE SDLK-KP-DIVIDE SDL-SCANCODE-KP-MULTIPLY SDLK-KP-MULTIPLY SDL-SCANCODE-KP-MINUS SDLK-KP-MINUS SDL-SCANCODE-KP-PLUS SDLK-KP-PLUS SDL-SCANCODE-KP-ENTER SDLK-KP-ENTER SDL-SCANCODE-KP-1 SDLK-KP-1 SDL-SCANCODE-KP-2 SDLK-KP-2 SDL-SCANCODE-KP-3 SDLK-KP-3 SDL-SCANCODE-KP-4 SDLK-KP-4 SDL-SCANCODE-KP-5 SDLK-KP-5 SDL-SCANCODE-KP-6 SDLK-KP-6 SDL-SCANCODE-KP-7 SDLK-KP-7 SDL-SCANCODE-KP-8 SDLK-KP-8 SDL-SCANCODE-KP-9 SDLK-KP-9 SDL-SCANCODE-KP-0 SDLK-KP-0 SDL-SCANCODE-KP-PERIOD SDLK-KP-PERIOD SDL-SCANCODE-NONUSBACKSLASH SDL-SCANCODE-APPLICATION SDLK-APPLICATION SDL-SCANCODE-POWER SDLK-POWER SDL-SCANCODE-KP-EQUALS SDLK-KP-EQUALS SDL-SCANCODE-F13 SDLK-F13 SDL-SCANCODE-F14 SDLK-F14 SDL-SCANCODE-F15 SDLK-F15 SDL-SCANCODE-F16 SDLK-F16 SDL-SCANCODE-F17 SDLK-F17 SDL-SCANCODE-F18 SDLK-F18 SDL-SCANCODE-F19 SDLK-F19 SDL-SCANCODE-F20 SDLK-F20 SDL-SCANCODE-F21 SDLK-F21 SDL-SCANCODE-F22 SDLK-F22 SDL-SCANCODE-F23 SDLK-F23 SDL-SCANCODE-F24 SDLK-F24 SDL-SCANCODE-EXECUTE SDLK-EXECUTE SDL-SCANCODE-HELP SDLK-HELP SDL-SCANCODE-MENU SDLK-MENU SDL-SCANCODE-SELECT SDLK-SELECT SDL-SCANCODE-STOP SDLK-STOP SDL-SCANCODE-AGAIN SDLK-AGAIN SDL-SCANCODE-UNDO SDLK-UNDO SDL-SCANCODE-CUT SDLK-CUT SDL-SCANCODE-COPY SDLK-COPY SDL-SCANCODE-PASTE SDLK-PASTE SDL-SCANCODE-FIND SDLK-FIND SDL-SCANCODE-MUTE SDLK-MUTE SDL-SCANCODE-VOLUMEUP SDLK-VOLUMEUP SDL-SCANCODE-VOLUMEDOWN SDLK-VOLUMEDOWN SDL-SCANCODE-KP-COMMA SDLK-KP-COMMA SDL-SCANCODE-KP-EQUALSAS400 SDLK-KP-EQUALSAS400 SDL-SCANCODE-INTERNATIONAL1 SDL-SCANCODE-INTERNATIONAL2 SDL-SCANCODE-INTERNATIONAL3 SDL-SCANCODE-INTERNATIONAL4 SDL-SCANCODE-INTERNATIONAL5 SDL-SCANCODE-INTERNATIONAL6 SDL-SCANCODE-INTERNATIONAL7 SDL-SCANCODE-INTERNATIONAL8 SDL-SCANCODE-INTERNATIONAL9 SDL-SCANCODE-LANG1 SDL-SCANCODE-LANG2 SDL-SCANCODE-LANG3 SDL-SCANCODE-LANG4 SDL-SCANCODE-LANG5 SDL-SCANCODE-LANG6 SDL-SCANCODE-LANG7 SDL-SCANCODE-LANG8 SDL-SCANCODE-LANG9 SDL-SCANCODE-ALTERASE SDLK-ALTERASE SDL-SCANCODE-SYSREQ SDLK-SYSREQ SDL-SCANCODE-CANCEL SDLK-CANCEL SDL-SCANCODE-CLEAR SDLK-CLEAR SDL-SCANCODE-PRIOR SDLK-PRIOR SDL-SCANCODE-RETURN2 SDLK-RETURN2 SDL-SCANCODE-SEPARATOR SDLK-SEPARATOR SDL-SCANCODE-OUT SDLK-OUT SDL-SCANCODE-OPER SDLK-OPER SDL-SCANCODE-CLEARAGAIN SDLK-CLEARAGAIN SDL-SCANCODE-CRSEL SDLK-CRSEL SDL-SCANCODE-EXSEL SDLK-EXSEL SDL-SCANCODE-KP-00 SDLK-KP-00 SDL-SCANCODE-KP-000 SDLK-KP-000 SDL-SCANCODE-THOUSANDSSEPARATOR SDLK-THOUSANDSSEPARATOR SDL-SCANCODE-DECIMALSEPARATOR SDLK-DECIMALSEPARATOR SDL-SCANCODE-CURRENCYUNIT SDLK-CURRENCYUNIT SDL-SCANCODE-CURRENCYSUBUNIT SDLK-CURRENCYSUBUNIT SDL-SCANCODE-KP-LEFTPAREN SDLK-KP-LEFTPAREN SDL-SCANCODE-KP-RIGHTPAREN SDLK-KP-RIGHTPAREN SDL-SCANCODE-KP-LEFTBRACE SDLK-KP-LEFTBRACE SDL-SCANCODE-KP-RIGHTBRACE SDLK-KP-RIGHTBRACE SDL-SCANCODE-KP-TAB SDLK-KP-TAB SDL-SCANCODE-KP-BACKSPACE SDLK-KP-BACKSPACE SDL-SCANCODE-KP-A SDLK-KP-A SDL-SCANCODE-KP-B SDLK-KP-B SDL-SCANCODE-KP-C SDLK-KP-C SDL-SCANCODE-KP-D SDLK-KP-D SDL-SCANCODE-KP-E SDLK-KP-E SDL-SCANCODE-KP-F SDLK-KP-F SDL-SCANCODE-KP-XOR SDLK-KP-XOR SDL-SCANCODE-KP-POWER SDLK-KP-POWER SDL-SCANCODE-KP-PERCENT SDLK-KP-PERCENT SDL-SCANCODE-KP-LESS SDLK-KP-LESS SDL-SCANCODE-KP-GREATER SDLK-KP-GREATER SDL-SCANCODE-KP-AMPERSAND SDLK-KP-AMPERSAND SDL-SCANCODE-KP-DBLAMPERSAND SDLK-KP-DBLAMPERSAND SDL-SCANCODE-KP-VERTICALBAR SDLK-KP-VERTICALBAR SDL-SCANCODE-KP-DBLVERTICALBAR SDLK-KP-DBLVERTICALBAR SDL-SCANCODE-KP-COLON SDLK-KP-COLON SDL-SCANCODE-KP-HASH SDLK-KP-HASH SDL-SCANCODE-KP-SPACE SDLK-KP-SPACE SDL-SCANCODE-KP-AT SDLK-KP-AT SDL-SCANCODE-KP-EXCLAM SDLK-KP-EXCLAM SDL-SCANCODE-KP-MEMSTORE SDLK-KP-MEMSTORE SDL-SCANCODE-KP-MEMRECALL SDLK-KP-MEMRECALL SDL-SCANCODE-KP-MEMCLEAR SDLK-KP-MEMCLEAR SDL-SCANCODE-KP-MEMADD SDLK-KP-MEMADD SDL-SCANCODE-KP-MEMSUBTRACT SDLK-KP-MEMSUBTRACT SDL-SCANCODE-KP-MEMMULTIPLY SDLK-KP-MEMMULTIPLY SDL-SCANCODE-KP-MEMDIVIDE SDLK-KP-MEMDIVIDE SDL-SCANCODE-KP-PLUSMINUS SDLK-KP-PLUSMINUS SDL-SCANCODE-KP-CLEAR SDLK-KP-CLEAR SDL-SCANCODE-KP-CLEARENTRY SDLK-KP-CLEARENTRY SDL-SCANCODE-KP-BINARY SDLK-KP-BINARY SDL-SCANCODE-KP-OCTAL SDLK-KP-OCTAL SDL-SCANCODE-KP-DECIMAL SDLK-KP-DECIMAL SDL-SCANCODE-KP-HEXADECIMAL SDLK-KP-HEXADECIMAL SDL-SCANCODE-LCTRL SDLK-LCTRL SDL-SCANCODE-LSHIFT SDLK-LSHIFT SDL-SCANCODE-LALT SDLK-LALT SDL-SCANCODE-LGUI SDLK-LGUI SDL-SCANCODE-RCTRL SDLK-RCTRL SDL-SCANCODE-RSHIFT SDLK-RSHIFT SDL-SCANCODE-RALT SDLK-RALT SDL-SCANCODE-RGUI SDLK-RGUI SDL-SCANCODE-MODE SDLK-MODE SDL-SCANCODE-AUDIONEXT SDLK-AUDIONEXT SDL-SCANCODE-AUDIOPREV SDLK-AUDIOPREV SDL-SCANCODE-AUDIOSTOP SDLK-AUDIOSTOP SDL-SCANCODE-AUDIOPLAY SDLK-AUDIOPLAY SDL-SCANCODE-AUDIOMUTE SDLK-AUDIOMUTE SDL-SCANCODE-MEDIASELECT SDLK-MEDIASELECT SDL-SCANCODE-WWW SDLK-WWW SDL-SCANCODE-MAIL SDLK-MAIL SDL-SCANCODE-CALCULATOR SDLK-CALCULATOR SDL-SCANCODE-COMPUTER SDLK-COMPUTER SDL-SCANCODE-AC-SEARCH SDLK-AC-SEARCH SDL-SCANCODE-AC-HOME SDLK-AC-HOME SDL-SCANCODE-AC-BACK SDLK-AC-BACK SDL-SCANCODE-AC-FORWARD SDLK-AC-FORWARD SDL-SCANCODE-AC-STOP SDLK-AC-STOP SDL-SCANCODE-AC-REFRESH SDLK-AC-REFRESH SDL-SCANCODE-AC-BOOKMARKS SDLK-AC-BOOKMARKS SDL-SCANCODE-BRIGHTNESSDOWN SDLK-BRIGHTNESSDOWN SDL-SCANCODE-BRIGHTNESSUP SDLK-BRIGHTNESSUP SDL-SCANCODE-DISPLAYSWITCH SDLK-DISPLAYSWITCH SDL-SCANCODE-KBDILLUMTOGGLE SDLK-KBDILLUMTOGGLE SDL-SCANCODE-KBDILLUMDOWN SDLK-KBDILLUMDOWN SDL-SCANCODE-KBDILLUMUP SDLK-KBDILLUMUP SDL-SCANCODE-EJECT SDLK-EJECT SDL-SCANCODE-SLEEP SDLK-SLEEP SDL-SCANCODE-APP1 SDLK-APP1 SDL-SCANCODE-APP2 SDLK-APP2 SDL-SCANCODE-AUDIOREWIND SDLK-AUDIOREWIND SDL-SCANCODE-AUDIOFASTFORWARD SDLK-AUDIOFASTFORWARD SDLK-EXCLAIM SDLK-QUOTEDBL SDLK-HASH SDLK-PERCENT SDLK-DOLLAR SDLK-AMPERSAND SDLK-LEFTPAREN SDLK-RIGHTPAREN SDLK-ASTERISK SDLK-PLUS SDLK-COLON SDLK-LESS SDLK-GREATER SDLK-QUESTION SDLK-AT SDLK-CARET SDLK-UNDERSCORE Key Modifers modifers KMOD-NONE KMOD-LSHIFT KMOD-RSHIFT KMOD-LCTRL KMOD-RCTRL KMOD-LALT KMOD-RALT KMOD-LGUI KMOD-RGUI KMOD-NUM KMOD-CAPS KMOD-MODE KMOD-RESERVED KMOD-CTRL KMOD-SHIFT KMOD-ALT KMOD-GUI Device Queries queries SDL-QUERY SDL-IGNORE SDL-DISABLE SDL-ENABLE Window Flags flags SDL-WINDOW-FULLSCREEN SDL-WINDOW-OPENGL SDL-WINDOW-SHOWN SDL-WINDOW-HIDDEN SDL-WINDOW-BORDERLESS SDL-WINDOW-RESIZABLE SDL-WINDOW-MINIMIZED SDL-WINDOW-MAXIMIZED SDL-WINDOW-INPUT-GRABBED SDL-WINDOW-INPUT-FOCUS SDL-WINDOW-MOUSE-FOCUS SDL-WINDOW-FULLSCREEN-DESKTOP SDL-WINDOW-FOREIGN SDL-WINDOW-ALLOW-HIGHDPI SDL-WINDOW-MOUSE-CAPTURE SDL-WINDOW-ALWAYS-ON-TOP SDL-WINDOW-SKIP-TASKBAR SDL-WINDOW-UTILITY SDL-WINDOW-TOOLTIP SDL-WINDOW-POPUP-MENU SDL-WINDOW-VULKAN Initialize Flags flags SDL-INIT-TIMER SDL-INIT-AUDIO SDL-INIT-VIDEO SDL-INIT-JOYSTICK SDL-INIT-HAPTIC SDL-INIT-GAMECONTROLLER SDL-INIT-EVENTS SDL-INIT-EVERYTHING Blend Modes modes SDL-BLEND-MODE-NONE SDL-BLEND-MODE-BLEND SDL-BLEND-MODE-ADD SDL-BLEND-MODE-MOD OpenGL Attributes attributes SDL-GL-RED-SIZE SDL-GL-GREEN-SIZE SDL-GL-BLUE-SIZE SDL-GL-ALPHA-SIZE SDL-GL-BUFFER-SIZE SDL-GL-DOUBLEBUFFER SDL-GL-DEPTH-SIZE SDL-GL-STENCIL-SIZE SDL-GL-ACCUM-RED-SIZE SDL-GL-ACCUM-GREEN-SIZE SDL-GL-ACCUM-BLUE-SIZE SDL-GL-ACCUM-ALPHA-SIZE SDL-GL-STEREO SDL-GL-MULTISAMPLEBUFFERS SDL-GL-MULTISAMPLESAMPLES SDL-GL-ACCELERATED-VISUAL SDL-GL-RETAINED-BACKING SDL-GL-CONTEXT-MAJOR-VERSION SDL-GL-CONTEXT-MINOR-VERSION SDL-GL-CONTEXT-EGL SDL-GL-CONTEXT-FLAGS SDL-GL-CONTEXT-PROFILE-MASK SDL-GL-SHARE-WITH-CURRENT-CONTEXT SDL-GL-FRAMEBUFFER-SRGB-CAPABLE SDL-GL-CONTEXT-RELEASE-BEHAVIOR SDL-GL-CONTEXT-RESET-NOTIFICATION SDL-GL-CONTEXT-NO-ERROR SDL-GL-ACCUM-ALPHA-SIZE SDL-GL-STEREO SDL-GL-MULTISAMPLEBUFFERS SDL-GL-MULTISAMPLESAMPLES SDL-GL-ACCELERATED-VISUAL OpenGL Context Flags flags SDL-GL-CONTEXT-DEBUG-FLAG SDL-GL-CONTEXT-FORWARD-COMPATIBLE-FLAG SDL-GL-CONTEXT-ROBUST-ACCESS-FLAG SDL-GL-CONTEXT-RESET-ISOLATION-FLAG OpenGL Profile Flags flags SDL-GL-CONTEXT-PROFILE-CORE SDL-GL-CONTEXT-PROFILE-COMPATIBILITY SDL-GL-CONTEXT-PROFILE-ES","title":"Values"},{"location":"ref/values/#hints","text":"hints SDL-HINT-FRAMEBUFFER-ACCELERATION SDL-HINT-RENDER-DRIVER SDL-HINT-RENDER-OPENGL-SHADERS SDL-HINT-RENDER-DIRECT3D-THREADSAFE SDL-HINT-RENDER-DIRECT3D11-DEBUG SDL-HINT-RENDER-LOGICAL-SIZE-MODE SDL-HINT-RENDER-SCALE-QUALITY SDL-HINT-RENDER-VSYNC SDL-HINT-VIDEO-ALLOW-SCREENSAVER SDL-HINT-VIDEO-X11-XVIDMODE SDL-HINT-VIDEO-X11-XINERAMA SDL-HINT-VIDEO-X11-XRANDR SDL-HINT-VIDEO-X11-NET-WM-PING SDL-HINT-VIDEO-X11-NET-WM-BYPASS-COMPOSITOR SDL-HINT-WINDOW-FRAME-USABLE-WHILE-CURSOR-HIDDEN SDL-HINT-WINDOWS-INTRESOURCE-ICON SDL-HINT-WINDOWS-INTRESOURCE-ICON-SMALL SDL-HINT-WINDOWS-ENABLE-MESSAGELOOP SDL-HINT-GRAB-KEYBOARD SDL-HINT-MOUSE-NORMAL-SPEED-SCALE SDL-HINT-MOUSE-RELATIVE-SPEED-SCALE SDL-HINT-MOUSE-RELATIVE-MODE-WARP SDL-HINT-MOUSE-FOCUS-CLICKTHROUGH SDL-HINT-TOUCH-MOUSE-EVENTS SDL-HINT-VIDEO-MINIMIZE-ON-FOCUS-LOSS SDL-HINT-IDLE-TIMER-DISABLED SDL-HINT-ORIENTATIONS SDL-HINT-APPLE-TV-CONTROLLER-UI-EVENTS SDL-HINT-APPLE-TV-REMOTE-ALLOW-ROTATION SDL-HINT-IOS-HIDE-HOME-INDICATOR SDL-HINT-ACCELEROMETER-AS-JOYSTICK SDL-HINT-TV-REMOTE-AS-JOYSTICK SDL-HINT-XINPUT-ENABLED SDL-HINT-XINPUT-USE-OLD-JOYSTICK-MAPPING SDL-HINT-GAMECONTROLLERCONFIG SDL-HINT-GAMECONTROLLER-IGNORE-DEVICES SDL-HINT-GAMECONTROLLER-IGNORE-DEVICES-EXCEPT SDL-HINT-JOYSTICK-ALLOW-BACKGROUND-EVENTS SDL-HINT-ALLOW-TOPMOST SDL-HINT-TIMER-RESOLUTION SDL-HINT-QTWAYLAND-CONTENT-ORIENTATION SDL-HINT-QTWAYLAND-WINDOW-FLAGS SDL-HINT-THREAD-STACK-SIZE SDL-HINT-VIDEO-HIGHDPI-DISABLED SDL-HINT-MAC-CTRL-CLICK-EMULATE-RIGHT-CLICK SDL-HINT-VIDEO-WIN-D3DCOMPILER SDL-HINT-VIDEO-WINDOW-SHARE-PIXEL-FORMAT SDL-HINT-WINRT-PRIVACY-POLICY-URL SDL-HINT-WINRT-PRIVACY-POLICY-LABEL SDL-HINT-WINRT-HANDLE-BACK-BUTTON SDL-HINT-VIDEO-MAC-FULLSCREEN-SPACES SDL-HINT-MAC-BACKGROUND-APP SDL-HINT-ANDROID-APK-EXPANSION-MAIN-FILE-VERSION SDL-HINT-ANDROID-APK-EXPANSION-PATCH-FILE-VERSION SDL-HINT-IME-INTERNAL-EDITING SDL-HINT-ANDROID-SEPARATE-MOUSE-AND-TOUCH SDL-HINT-ANDROID-TRAP-BACK-BUTTON SDL-HINT-RETURN-KEY-HIDES-IME SDL-HINT-EMSCRIPTEN-KEYBOARD-ELEMENT SDL-HINT-NO-SIGNAL-HANDLERS SDL-HINT-WINDOWS-NO-CLOSE-ON-ALT-F4 SDL-HINT-BMP-SAVE-LEGACY-FORMAT SDL-HINT-WINDOWS-DISABLE-THREAD-NAMING SDL-HINT-RPI-VIDEO-LAYER SDL-HINT-VIDEO-DOUBLE-BUFFER SDL-HINT-OPENGL-ES-DRIVER SDL-HINT-AUDIO-RESAMPLING-MODE SDL-HINT-AUDIO-CATEGORY","title":"Hints"},{"location":"ref/values/#scancodes-keycodes","text":"Scancodes Keycodes SDL-SCANCODE-UNKNOWN SDLK-UNKNOWN SDL-SCANCODE-A SDLK-A SDL-SCANCODE-B SDLK-B SDL-SCANCODE-C SDLK-C SDL-SCANCODE-D SDLK-D SDL-SCANCODE-E SDLK-E SDL-SCANCODE-F SDLK-F SDL-SCANCODE-G SDLK-G SDL-SCANCODE-H SDLK-H SDL-SCANCODE-I SDLK-I SDL-SCANCODE-J SDLK-J SDL-SCANCODE-K SDLK-K SDL-SCANCODE-L SDLK-L SDL-SCANCODE-M SDLK-M SDL-SCANCODE-N SDLK-N SDL-SCANCODE-O SDLK-O SDL-SCANCODE-P SDLK-P SDL-SCANCODE-Q SDLK-Q SDL-SCANCODE-R SDLK-R SDL-SCANCODE-S SDLK-S SDL-SCANCODE-T SDLK-T SDL-SCANCODE-U SDLK-U SDL-SCANCODE-V SDLK-V SDL-SCANCODE-W SDLK-W SDL-SCANCODE-X SDLK-X SDL-SCANCODE-Y SDLK-Y SDL-SCANCODE-Z SDLK-Z SDL-SCANCODE-1 SDLK-1 SDL-SCANCODE-2 SDLK-2 SDL-SCANCODE-3 SDLK-3 SDL-SCANCODE-4 SDLK-4 SDL-SCANCODE-5 SDLK-5 SDL-SCANCODE-6 SDLK-6 SDL-SCANCODE-7 SDLK-7 SDL-SCANCODE-8 SDLK-8 SDL-SCANCODE-9 SDLK-9 SDL-SCANCODE-0 SDLK-0 SDL-SCANCODE-RETURN SDLK-RETURN SDL-SCANCODE-ESCAPE SDLK-ESCAPE SDL-SCANCODE-BACKSPACE SDLK-BACKSPACE SDL-SCANCODE-TAB SDLK-TAB SDL-SCANCODE-SPACE SDLK-SPACE SDL-SCANCODE-MINUS SDLK-MINUS SDL-SCANCODE-EQUALS SDLK-EQUALS SDL-SCANCODE-LEFTBRACKET SDLK-LEFTBRACKET SDL-SCANCODE-RIGHTBRACKET SDLK-RIGHTBRACKET SDL-SCANCODE-BACKSLASH SDLK-BACKSLASH SDL-SCANCODE-NONUSHASH SDL-SCANCODE-SEMICOLON SDLK-SEMICOLON SDL-SCANCODE-APOSTROPHE SDLK-QUOTE SDL-SCANCODE-GRAVE SDLK-BACKQUOTE SDL-SCANCODE-COMMA SDLK-COMMA SDL-SCANCODE-PERIOD SDLK-PERIOD SDL-SCANCODE-SLASH SDLK-SLASH SDL-SCANCODE-CAPSLOCK SDLK-CAPSLOCK SDL-SCANCODE-F1 SDLK-F1 SDL-SCANCODE-F2 SDLK-F2 SDL-SCANCODE-F3 SDLK-F3 SDL-SCANCODE-F4 SDLK-F4 SDL-SCANCODE-F5 SDLK-F5 SDL-SCANCODE-F6 SDLK-F6 SDL-SCANCODE-F7 SDLK-F7 SDL-SCANCODE-F8 SDLK-F8 SDL-SCANCODE-F9 SDLK-F9 SDL-SCANCODE-F10 SDLK-F10 SDL-SCANCODE-F11 SDLK-F11 SDL-SCANCODE-F12 SDLK-F12 SDL-SCANCODE-PRINTSCREEN SDLK-PRINTSCREEN SDL-SCANCODE-SCROLLLOCK SDLK-SCROLLLOCK SDL-SCANCODE-PAUSE SDLK-PAUSE SDL-SCANCODE-INSERT SDLK-INSERT SDL-SCANCODE-HOME SDLK-HOME SDL-SCANCODE-PAGEUP SDLK-PAGEUP SDL-SCANCODE-DELETE SDLK-DELETE SDL-SCANCODE-END SDLK-END SDL-SCANCODE-PAGEDOWN SDLK-PAGEDOWN SDL-SCANCODE-RIGHT SDLK-RIGHT SDL-SCANCODE-LEFT SDLK-LEFT SDL-SCANCODE-DOWN SDLK-DOWN SDL-SCANCODE-UP SDLK-UP SDL-SCANCODE-NUMLOCKCLEAR SDLK-NUMLOCKCLEAR SDL-SCANCODE-KP-DIVIDE SDLK-KP-DIVIDE SDL-SCANCODE-KP-MULTIPLY SDLK-KP-MULTIPLY SDL-SCANCODE-KP-MINUS SDLK-KP-MINUS SDL-SCANCODE-KP-PLUS SDLK-KP-PLUS SDL-SCANCODE-KP-ENTER SDLK-KP-ENTER SDL-SCANCODE-KP-1 SDLK-KP-1 SDL-SCANCODE-KP-2 SDLK-KP-2 SDL-SCANCODE-KP-3 SDLK-KP-3 SDL-SCANCODE-KP-4 SDLK-KP-4 SDL-SCANCODE-KP-5 SDLK-KP-5 SDL-SCANCODE-KP-6 SDLK-KP-6 SDL-SCANCODE-KP-7 SDLK-KP-7 SDL-SCANCODE-KP-8 SDLK-KP-8 SDL-SCANCODE-KP-9 SDLK-KP-9 SDL-SCANCODE-KP-0 SDLK-KP-0 SDL-SCANCODE-KP-PERIOD SDLK-KP-PERIOD SDL-SCANCODE-NONUSBACKSLASH SDL-SCANCODE-APPLICATION SDLK-APPLICATION SDL-SCANCODE-POWER SDLK-POWER SDL-SCANCODE-KP-EQUALS SDLK-KP-EQUALS SDL-SCANCODE-F13 SDLK-F13 SDL-SCANCODE-F14 SDLK-F14 SDL-SCANCODE-F15 SDLK-F15 SDL-SCANCODE-F16 SDLK-F16 SDL-SCANCODE-F17 SDLK-F17 SDL-SCANCODE-F18 SDLK-F18 SDL-SCANCODE-F19 SDLK-F19 SDL-SCANCODE-F20 SDLK-F20 SDL-SCANCODE-F21 SDLK-F21 SDL-SCANCODE-F22 SDLK-F22 SDL-SCANCODE-F23 SDLK-F23 SDL-SCANCODE-F24 SDLK-F24 SDL-SCANCODE-EXECUTE SDLK-EXECUTE SDL-SCANCODE-HELP SDLK-HELP SDL-SCANCODE-MENU SDLK-MENU SDL-SCANCODE-SELECT SDLK-SELECT SDL-SCANCODE-STOP SDLK-STOP SDL-SCANCODE-AGAIN SDLK-AGAIN SDL-SCANCODE-UNDO SDLK-UNDO SDL-SCANCODE-CUT SDLK-CUT SDL-SCANCODE-COPY SDLK-COPY SDL-SCANCODE-PASTE SDLK-PASTE SDL-SCANCODE-FIND SDLK-FIND SDL-SCANCODE-MUTE SDLK-MUTE SDL-SCANCODE-VOLUMEUP SDLK-VOLUMEUP SDL-SCANCODE-VOLUMEDOWN SDLK-VOLUMEDOWN SDL-SCANCODE-KP-COMMA SDLK-KP-COMMA SDL-SCANCODE-KP-EQUALSAS400 SDLK-KP-EQUALSAS400 SDL-SCANCODE-INTERNATIONAL1 SDL-SCANCODE-INTERNATIONAL2 SDL-SCANCODE-INTERNATIONAL3 SDL-SCANCODE-INTERNATIONAL4 SDL-SCANCODE-INTERNATIONAL5 SDL-SCANCODE-INTERNATIONAL6 SDL-SCANCODE-INTERNATIONAL7 SDL-SCANCODE-INTERNATIONAL8 SDL-SCANCODE-INTERNATIONAL9 SDL-SCANCODE-LANG1 SDL-SCANCODE-LANG2 SDL-SCANCODE-LANG3 SDL-SCANCODE-LANG4 SDL-SCANCODE-LANG5 SDL-SCANCODE-LANG6 SDL-SCANCODE-LANG7 SDL-SCANCODE-LANG8 SDL-SCANCODE-LANG9 SDL-SCANCODE-ALTERASE SDLK-ALTERASE SDL-SCANCODE-SYSREQ SDLK-SYSREQ SDL-SCANCODE-CANCEL SDLK-CANCEL SDL-SCANCODE-CLEAR SDLK-CLEAR SDL-SCANCODE-PRIOR SDLK-PRIOR SDL-SCANCODE-RETURN2 SDLK-RETURN2 SDL-SCANCODE-SEPARATOR SDLK-SEPARATOR SDL-SCANCODE-OUT SDLK-OUT SDL-SCANCODE-OPER SDLK-OPER SDL-SCANCODE-CLEARAGAIN SDLK-CLEARAGAIN SDL-SCANCODE-CRSEL SDLK-CRSEL SDL-SCANCODE-EXSEL SDLK-EXSEL SDL-SCANCODE-KP-00 SDLK-KP-00 SDL-SCANCODE-KP-000 SDLK-KP-000 SDL-SCANCODE-THOUSANDSSEPARATOR SDLK-THOUSANDSSEPARATOR SDL-SCANCODE-DECIMALSEPARATOR SDLK-DECIMALSEPARATOR SDL-SCANCODE-CURRENCYUNIT SDLK-CURRENCYUNIT SDL-SCANCODE-CURRENCYSUBUNIT SDLK-CURRENCYSUBUNIT SDL-SCANCODE-KP-LEFTPAREN SDLK-KP-LEFTPAREN SDL-SCANCODE-KP-RIGHTPAREN SDLK-KP-RIGHTPAREN SDL-SCANCODE-KP-LEFTBRACE SDLK-KP-LEFTBRACE SDL-SCANCODE-KP-RIGHTBRACE SDLK-KP-RIGHTBRACE SDL-SCANCODE-KP-TAB SDLK-KP-TAB SDL-SCANCODE-KP-BACKSPACE SDLK-KP-BACKSPACE SDL-SCANCODE-KP-A SDLK-KP-A SDL-SCANCODE-KP-B SDLK-KP-B SDL-SCANCODE-KP-C SDLK-KP-C SDL-SCANCODE-KP-D SDLK-KP-D SDL-SCANCODE-KP-E SDLK-KP-E SDL-SCANCODE-KP-F SDLK-KP-F SDL-SCANCODE-KP-XOR SDLK-KP-XOR SDL-SCANCODE-KP-POWER SDLK-KP-POWER SDL-SCANCODE-KP-PERCENT SDLK-KP-PERCENT SDL-SCANCODE-KP-LESS SDLK-KP-LESS SDL-SCANCODE-KP-GREATER SDLK-KP-GREATER SDL-SCANCODE-KP-AMPERSAND SDLK-KP-AMPERSAND SDL-SCANCODE-KP-DBLAMPERSAND SDLK-KP-DBLAMPERSAND SDL-SCANCODE-KP-VERTICALBAR SDLK-KP-VERTICALBAR SDL-SCANCODE-KP-DBLVERTICALBAR SDLK-KP-DBLVERTICALBAR SDL-SCANCODE-KP-COLON SDLK-KP-COLON SDL-SCANCODE-KP-HASH SDLK-KP-HASH SDL-SCANCODE-KP-SPACE SDLK-KP-SPACE SDL-SCANCODE-KP-AT SDLK-KP-AT SDL-SCANCODE-KP-EXCLAM SDLK-KP-EXCLAM SDL-SCANCODE-KP-MEMSTORE SDLK-KP-MEMSTORE SDL-SCANCODE-KP-MEMRECALL SDLK-KP-MEMRECALL SDL-SCANCODE-KP-MEMCLEAR SDLK-KP-MEMCLEAR SDL-SCANCODE-KP-MEMADD SDLK-KP-MEMADD SDL-SCANCODE-KP-MEMSUBTRACT SDLK-KP-MEMSUBTRACT SDL-SCANCODE-KP-MEMMULTIPLY SDLK-KP-MEMMULTIPLY SDL-SCANCODE-KP-MEMDIVIDE SDLK-KP-MEMDIVIDE SDL-SCANCODE-KP-PLUSMINUS SDLK-KP-PLUSMINUS SDL-SCANCODE-KP-CLEAR SDLK-KP-CLEAR SDL-SCANCODE-KP-CLEARENTRY SDLK-KP-CLEARENTRY SDL-SCANCODE-KP-BINARY SDLK-KP-BINARY SDL-SCANCODE-KP-OCTAL SDLK-KP-OCTAL SDL-SCANCODE-KP-DECIMAL SDLK-KP-DECIMAL SDL-SCANCODE-KP-HEXADECIMAL SDLK-KP-HEXADECIMAL SDL-SCANCODE-LCTRL SDLK-LCTRL SDL-SCANCODE-LSHIFT SDLK-LSHIFT SDL-SCANCODE-LALT SDLK-LALT SDL-SCANCODE-LGUI SDLK-LGUI SDL-SCANCODE-RCTRL SDLK-RCTRL SDL-SCANCODE-RSHIFT SDLK-RSHIFT SDL-SCANCODE-RALT SDLK-RALT SDL-SCANCODE-RGUI SDLK-RGUI SDL-SCANCODE-MODE SDLK-MODE SDL-SCANCODE-AUDIONEXT SDLK-AUDIONEXT SDL-SCANCODE-AUDIOPREV SDLK-AUDIOPREV SDL-SCANCODE-AUDIOSTOP SDLK-AUDIOSTOP SDL-SCANCODE-AUDIOPLAY SDLK-AUDIOPLAY SDL-SCANCODE-AUDIOMUTE SDLK-AUDIOMUTE SDL-SCANCODE-MEDIASELECT SDLK-MEDIASELECT SDL-SCANCODE-WWW SDLK-WWW SDL-SCANCODE-MAIL SDLK-MAIL SDL-SCANCODE-CALCULATOR SDLK-CALCULATOR SDL-SCANCODE-COMPUTER SDLK-COMPUTER SDL-SCANCODE-AC-SEARCH SDLK-AC-SEARCH SDL-SCANCODE-AC-HOME SDLK-AC-HOME SDL-SCANCODE-AC-BACK SDLK-AC-BACK SDL-SCANCODE-AC-FORWARD SDLK-AC-FORWARD SDL-SCANCODE-AC-STOP SDLK-AC-STOP SDL-SCANCODE-AC-REFRESH SDLK-AC-REFRESH SDL-SCANCODE-AC-BOOKMARKS SDLK-AC-BOOKMARKS SDL-SCANCODE-BRIGHTNESSDOWN SDLK-BRIGHTNESSDOWN SDL-SCANCODE-BRIGHTNESSUP SDLK-BRIGHTNESSUP SDL-SCANCODE-DISPLAYSWITCH SDLK-DISPLAYSWITCH SDL-SCANCODE-KBDILLUMTOGGLE SDLK-KBDILLUMTOGGLE SDL-SCANCODE-KBDILLUMDOWN SDLK-KBDILLUMDOWN SDL-SCANCODE-KBDILLUMUP SDLK-KBDILLUMUP SDL-SCANCODE-EJECT SDLK-EJECT SDL-SCANCODE-SLEEP SDLK-SLEEP SDL-SCANCODE-APP1 SDLK-APP1 SDL-SCANCODE-APP2 SDLK-APP2 SDL-SCANCODE-AUDIOREWIND SDLK-AUDIOREWIND SDL-SCANCODE-AUDIOFASTFORWARD SDLK-AUDIOFASTFORWARD SDLK-EXCLAIM SDLK-QUOTEDBL SDLK-HASH SDLK-PERCENT SDLK-DOLLAR SDLK-AMPERSAND SDLK-LEFTPAREN SDLK-RIGHTPAREN SDLK-ASTERISK SDLK-PLUS SDLK-COLON SDLK-LESS SDLK-GREATER SDLK-QUESTION SDLK-AT SDLK-CARET SDLK-UNDERSCORE","title":"Scancodes &amp; Keycodes"},{"location":"ref/values/#key-modifers","text":"modifers KMOD-NONE KMOD-LSHIFT KMOD-RSHIFT KMOD-LCTRL KMOD-RCTRL KMOD-LALT KMOD-RALT KMOD-LGUI KMOD-RGUI KMOD-NUM KMOD-CAPS KMOD-MODE KMOD-RESERVED KMOD-CTRL KMOD-SHIFT KMOD-ALT KMOD-GUI","title":"Key Modifers"},{"location":"ref/values/#device-queries","text":"queries SDL-QUERY SDL-IGNORE SDL-DISABLE SDL-ENABLE","title":"Device Queries"},{"location":"ref/values/#window-flags","text":"flags SDL-WINDOW-FULLSCREEN SDL-WINDOW-OPENGL SDL-WINDOW-SHOWN SDL-WINDOW-HIDDEN SDL-WINDOW-BORDERLESS SDL-WINDOW-RESIZABLE SDL-WINDOW-MINIMIZED SDL-WINDOW-MAXIMIZED SDL-WINDOW-INPUT-GRABBED SDL-WINDOW-INPUT-FOCUS SDL-WINDOW-MOUSE-FOCUS SDL-WINDOW-FULLSCREEN-DESKTOP SDL-WINDOW-FOREIGN SDL-WINDOW-ALLOW-HIGHDPI SDL-WINDOW-MOUSE-CAPTURE SDL-WINDOW-ALWAYS-ON-TOP SDL-WINDOW-SKIP-TASKBAR SDL-WINDOW-UTILITY SDL-WINDOW-TOOLTIP SDL-WINDOW-POPUP-MENU SDL-WINDOW-VULKAN","title":"Window Flags"},{"location":"ref/values/#initialize-flags","text":"flags SDL-INIT-TIMER SDL-INIT-AUDIO SDL-INIT-VIDEO SDL-INIT-JOYSTICK SDL-INIT-HAPTIC SDL-INIT-GAMECONTROLLER SDL-INIT-EVENTS SDL-INIT-EVERYTHING","title":"Initialize Flags"},{"location":"ref/values/#blend-modes","text":"modes SDL-BLEND-MODE-NONE SDL-BLEND-MODE-BLEND SDL-BLEND-MODE-ADD SDL-BLEND-MODE-MOD","title":"Blend Modes"},{"location":"ref/values/#opengl-attributes","text":"attributes SDL-GL-RED-SIZE SDL-GL-GREEN-SIZE SDL-GL-BLUE-SIZE SDL-GL-ALPHA-SIZE SDL-GL-BUFFER-SIZE SDL-GL-DOUBLEBUFFER SDL-GL-DEPTH-SIZE SDL-GL-STENCIL-SIZE SDL-GL-ACCUM-RED-SIZE SDL-GL-ACCUM-GREEN-SIZE SDL-GL-ACCUM-BLUE-SIZE SDL-GL-ACCUM-ALPHA-SIZE SDL-GL-STEREO SDL-GL-MULTISAMPLEBUFFERS SDL-GL-MULTISAMPLESAMPLES SDL-GL-ACCELERATED-VISUAL SDL-GL-RETAINED-BACKING SDL-GL-CONTEXT-MAJOR-VERSION SDL-GL-CONTEXT-MINOR-VERSION SDL-GL-CONTEXT-EGL SDL-GL-CONTEXT-FLAGS SDL-GL-CONTEXT-PROFILE-MASK SDL-GL-SHARE-WITH-CURRENT-CONTEXT SDL-GL-FRAMEBUFFER-SRGB-CAPABLE SDL-GL-CONTEXT-RELEASE-BEHAVIOR SDL-GL-CONTEXT-RESET-NOTIFICATION SDL-GL-CONTEXT-NO-ERROR SDL-GL-ACCUM-ALPHA-SIZE SDL-GL-STEREO SDL-GL-MULTISAMPLEBUFFERS SDL-GL-MULTISAMPLESAMPLES SDL-GL-ACCELERATED-VISUAL","title":"OpenGL Attributes"},{"location":"ref/values/#opengl-context-flags","text":"flags SDL-GL-CONTEXT-DEBUG-FLAG SDL-GL-CONTEXT-FORWARD-COMPATIBLE-FLAG SDL-GL-CONTEXT-ROBUST-ACCESS-FLAG SDL-GL-CONTEXT-RESET-ISOLATION-FLAG","title":"OpenGL Context Flags"},{"location":"ref/values/#opengl-profile-flags","text":"flags SDL-GL-CONTEXT-PROFILE-CORE SDL-GL-CONTEXT-PROFILE-COMPATIBILITY SDL-GL-CONTEXT-PROFILE-ES","title":"OpenGL Profile Flags"},{"location":"ref/video/","text":"Display & Window Management Procedure: ( sdl-create-window title x y w h flags... ) \u2192 SDL_Window Parameters: title : A string. Title of the window. x : An integer or SDL-WINDOWPOS-UNDEFINED . x-position of the window. y : An integer or SDL-WINDOWPOS-UNDEFINED . y-position of the window. w : An integer. The width of the viewport of the window. h : An integer. The height of the viewport of the window. flags : Zero or more flags . Returns: A SDL_Window object. C Function Name: SDL_CreateWindow Other Docs: SDL Wiki SDL Wiki Examples: (define *window* (sdl-create-window \"SDL2 on Scheme\" SDL-WINDOWPOS-UNDEFINED SDL-WINDOWPOS-UNDEFINED 800 600 SDL-WINDOW-SHOWN SDL-WINDOW-OPENGL)) Procedure: ( sdl-destroy-window window ) \u2192 void Parameters: window : A SDL_Window object. C Function Name: SDL_DestroyWindow Other Docs: SDL Wiki Procedure: ( sdl-disable-screen-saver ) \u2192 void C Function Name: SDL_DisableScreenSaver Other Docs: SDL Wiki Procedure: ( sdl-enable-screen-saver ) \u2192 void C Function Name: SDL_EnableScreenSaver Other Docs: SDL Wiki Procedure: ( sdl-gl-create-context window ) \u2192 SDL_GLContext Parameters: window : A SDL_Window object. Returns: A SDL_GLContext object. C Function Name: SDL_GL_CreateContext Other Docs: SDL Wiki Procedure: ( sdl-gl-delete-context gl-context ) \u2192 void Parameters: gl-context : A SDL_GLContext object. C Function Name: SDL_GL_DeleteContext Other Docs: SDL Wiki Procedure: ( sdl-gl-extension-supported? extension ) \u2192 boolean Parameters: extension : A string. Name of the OpenGL extension. Returns: #t if extension is supported otherwise #f . C Function Name: SDL_GL_ExtensionSupported Other Docs: SDL Wiki Procedure: ( sdl-gl-get-attribute attribute ) \u2192 number Parameters: attribute : A SDL OpenGL attribute . Returns: The value of the attribute or a negative value. C Function Name: SDL_GL_GetAttribute Other Docs: SDL Wiki SDL Wiki Procedure: ( sdl-gl-get-current-context ) \u2192 SDL_GLContext Returns: The window with an OpenGL context. C Function Name: SDL_GL_GetCurrentWindow Other Docs: SDL Wiki Procedure: ( sdl-gl-get-current-window ) \u2192 SDL_Window Returns: The current OpenGL context. C Function Name: SDL_GL_GetCurrentContext Other Docs: SDL Wiki Procedure: ( sdl-gl-get-drawable-size window ) \u2192 list Parameters: window : A SDL_Window. Returns: The list (x, y) of the window. C Function Name: SDL_GL_GetDrawableSize Other Docs: SDL Wiki Procedure: ( sdl-gl-get-drawable-size window ) \u2192 list Parameters: window : A SDL_Window. Returns: The list (x, y) of the window. C Function Name: SDL_GL_GetDrawableSize Other Docs: SDL Wiki Procedure: ( sdl-gl-get-swap-interval ) \u2192 number Returns: 0 if no v-sync; 1 if v-sync; -1 if adaptive v-sync; C Function Name: SDL_GL_GetSwapInterval Other Docs: SDL Wiki Procedure: ( sdl-gl-make-current window context ) \u2192 number Parameters: window : A SDL_Window. context : A SDL_GLContext. Returns: Result code. 0 for no failure. C Function Name: SDL_GL_MakeCurrent Other Docs: SDL Wiki Procedure: ( sdl-gl-reset-attributes! ) \u2192 void C Function Name: SDL_GL_ResetAttributes Other Docs: SDL Wiki Procedure: ( sdl-gl-set-attribute! attribute value ) \u2192 number Parameters: attribute : A SDL OpenGL attribute . value : A number to set the attribute. Returns: Result code. 0 if no failure. C Function Name: SDL_GL_SetAttribute Other Docs: SDL Wiki SDL Wiki Procedure: ( sdl-gl-set-swap-interval! interval ) \u2192 number Parameters: interval : 0 for no v-sync; 1 for v-sync; -1 for adaptive v-sync; Returns: Result code. 0 for no failure. C Function Name: SDL_GL_SetSwapInterval Other Docs: SDL Wiki Procedure: ( sdl-gl-swap-window window ) \u2192 void Parameters: window : A SDL_Window. C Function Name: SDL_GL_SwapWindow Other Docs: SDL Wiki Procedure: ( sdl-get-current-video-driver ) \u2192 string Returns: Name of current video driver. C Function Name: SDL_GetCurrentVideoDriver Other Docs: SDL Wiki Procedure: ( sdl-get-display-bounds display-index ) \u2192 sdl-rect | number Parameters: display-index : A number. The index to query. Returns: An sdl-rect or an error code. C Function Name: SDL_GetDisplayBounds Other Docs: SDL Wiki Procedure: ( sdl-get-display-dpi display-index ) \u2192 list | number Parameters: display-index : A number. The index to query. Returns: A list (ddpi hdpi vdpi) or an error code. C Function Name: SDL_GetDisplayDPI Other Docs: SDL Wiki Procedure: ( sdl-get-display-name display-index ) \u2192 string Parameters: display-index : A number. The index to query. Returns: The display name. C Function Name: SDL_GetDisplayName Other Docs: SDL Wiki Procedure: ( sdl-get-display-usable-bounds display-index ) \u2192 sdl-rect | number Parameters: display-index : A number. The index to query. Returns: A sdl-rect or and error code. C Function Name: SDL_GetDisplayUsableBounds Other Docs: SDL Wiki Procedure: ( sdl-get-grabbed-window ) \u2192 SDL_Window Returns: The SDL_Window that's grabbed. C Function Name: SDL_GetGrabbedWindow Other Docs: SDL Wiki Procedure: ( sdl-get-num-display-modes display-index ) \u2192 number Parameters: display-index : A number. The index to query. Returns: Number of display modes or a negative number error code. C Function Name: SDL_GetNumDisplayModes Other Docs: SDL Wiki Procedure: ( sdl-get-num-video-displays ) \u2192 number Returns: Number of video modes or a negative number error code. C Function Name: SDL_GetNumVideoDisplays Other Docs: SDL Wiki Procedure: ( sdl-get-num-video-drivers ) \u2192 number Returns: Number of video modes or a negative number error code. C Function Name: SDL_GetNumVideoDrivers Other Docs: SDL Wiki Procedure: ( sdl-get-video-driver index ) \u2192 string Parameters: index : A number. The index to query. Returns: The video driver name. C Function Name: SDL_GetVideoDriver Other Docs: SDL Wiki Procedure: ( sdl-get-window-surface window ) \u2192 SDL_Surface Parameters: window : A SDL_Window . Returns: The SDL_Surface of the window. C Function Name: SDL_GetWindowSurface Other Docs: SDL Wiki Procedure: ( sdl-show-window window ) \u2192 void Parameters: window : A SDL_Window . C Function Name: SDL_ShowWindow Other Docs: SDL Wiki Procedure: ( sdl-update-window-surface window ) \u2192 number Parameters: window : A SDL_Window . Returns: 0 if no failure. C Function Name: SDL_UpdateWindowSurface Other Docs: SDL Wiki 2D Accelerated Rendering Pixel Formats & Conversion Routines Rectangle Functions Surface Creation & Simple Drawing Clipboard Handling Vulkan Support","title":"Video"},{"location":"ref/video/#display-window-management","text":"Procedure: ( sdl-create-window title x y w h flags... ) \u2192 SDL_Window Parameters: title : A string. Title of the window. x : An integer or SDL-WINDOWPOS-UNDEFINED . x-position of the window. y : An integer or SDL-WINDOWPOS-UNDEFINED . y-position of the window. w : An integer. The width of the viewport of the window. h : An integer. The height of the viewport of the window. flags : Zero or more flags . Returns: A SDL_Window object. C Function Name: SDL_CreateWindow Other Docs: SDL Wiki SDL Wiki Examples: (define *window* (sdl-create-window \"SDL2 on Scheme\" SDL-WINDOWPOS-UNDEFINED SDL-WINDOWPOS-UNDEFINED 800 600 SDL-WINDOW-SHOWN SDL-WINDOW-OPENGL)) Procedure: ( sdl-destroy-window window ) \u2192 void Parameters: window : A SDL_Window object. C Function Name: SDL_DestroyWindow Other Docs: SDL Wiki Procedure: ( sdl-disable-screen-saver ) \u2192 void C Function Name: SDL_DisableScreenSaver Other Docs: SDL Wiki Procedure: ( sdl-enable-screen-saver ) \u2192 void C Function Name: SDL_EnableScreenSaver Other Docs: SDL Wiki Procedure: ( sdl-gl-create-context window ) \u2192 SDL_GLContext Parameters: window : A SDL_Window object. Returns: A SDL_GLContext object. C Function Name: SDL_GL_CreateContext Other Docs: SDL Wiki Procedure: ( sdl-gl-delete-context gl-context ) \u2192 void Parameters: gl-context : A SDL_GLContext object. C Function Name: SDL_GL_DeleteContext Other Docs: SDL Wiki Procedure: ( sdl-gl-extension-supported? extension ) \u2192 boolean Parameters: extension : A string. Name of the OpenGL extension. Returns: #t if extension is supported otherwise #f . C Function Name: SDL_GL_ExtensionSupported Other Docs: SDL Wiki Procedure: ( sdl-gl-get-attribute attribute ) \u2192 number Parameters: attribute : A SDL OpenGL attribute . Returns: The value of the attribute or a negative value. C Function Name: SDL_GL_GetAttribute Other Docs: SDL Wiki SDL Wiki Procedure: ( sdl-gl-get-current-context ) \u2192 SDL_GLContext Returns: The window with an OpenGL context. C Function Name: SDL_GL_GetCurrentWindow Other Docs: SDL Wiki Procedure: ( sdl-gl-get-current-window ) \u2192 SDL_Window Returns: The current OpenGL context. C Function Name: SDL_GL_GetCurrentContext Other Docs: SDL Wiki Procedure: ( sdl-gl-get-drawable-size window ) \u2192 list Parameters: window : A SDL_Window. Returns: The list (x, y) of the window. C Function Name: SDL_GL_GetDrawableSize Other Docs: SDL Wiki Procedure: ( sdl-gl-get-drawable-size window ) \u2192 list Parameters: window : A SDL_Window. Returns: The list (x, y) of the window. C Function Name: SDL_GL_GetDrawableSize Other Docs: SDL Wiki Procedure: ( sdl-gl-get-swap-interval ) \u2192 number Returns: 0 if no v-sync; 1 if v-sync; -1 if adaptive v-sync; C Function Name: SDL_GL_GetSwapInterval Other Docs: SDL Wiki Procedure: ( sdl-gl-make-current window context ) \u2192 number Parameters: window : A SDL_Window. context : A SDL_GLContext. Returns: Result code. 0 for no failure. C Function Name: SDL_GL_MakeCurrent Other Docs: SDL Wiki Procedure: ( sdl-gl-reset-attributes! ) \u2192 void C Function Name: SDL_GL_ResetAttributes Other Docs: SDL Wiki Procedure: ( sdl-gl-set-attribute! attribute value ) \u2192 number Parameters: attribute : A SDL OpenGL attribute . value : A number to set the attribute. Returns: Result code. 0 if no failure. C Function Name: SDL_GL_SetAttribute Other Docs: SDL Wiki SDL Wiki Procedure: ( sdl-gl-set-swap-interval! interval ) \u2192 number Parameters: interval : 0 for no v-sync; 1 for v-sync; -1 for adaptive v-sync; Returns: Result code. 0 for no failure. C Function Name: SDL_GL_SetSwapInterval Other Docs: SDL Wiki Procedure: ( sdl-gl-swap-window window ) \u2192 void Parameters: window : A SDL_Window. C Function Name: SDL_GL_SwapWindow Other Docs: SDL Wiki Procedure: ( sdl-get-current-video-driver ) \u2192 string Returns: Name of current video driver. C Function Name: SDL_GetCurrentVideoDriver Other Docs: SDL Wiki Procedure: ( sdl-get-display-bounds display-index ) \u2192 sdl-rect | number Parameters: display-index : A number. The index to query. Returns: An sdl-rect or an error code. C Function Name: SDL_GetDisplayBounds Other Docs: SDL Wiki Procedure: ( sdl-get-display-dpi display-index ) \u2192 list | number Parameters: display-index : A number. The index to query. Returns: A list (ddpi hdpi vdpi) or an error code. C Function Name: SDL_GetDisplayDPI Other Docs: SDL Wiki Procedure: ( sdl-get-display-name display-index ) \u2192 string Parameters: display-index : A number. The index to query. Returns: The display name. C Function Name: SDL_GetDisplayName Other Docs: SDL Wiki Procedure: ( sdl-get-display-usable-bounds display-index ) \u2192 sdl-rect | number Parameters: display-index : A number. The index to query. Returns: A sdl-rect or and error code. C Function Name: SDL_GetDisplayUsableBounds Other Docs: SDL Wiki Procedure: ( sdl-get-grabbed-window ) \u2192 SDL_Window Returns: The SDL_Window that's grabbed. C Function Name: SDL_GetGrabbedWindow Other Docs: SDL Wiki Procedure: ( sdl-get-num-display-modes display-index ) \u2192 number Parameters: display-index : A number. The index to query. Returns: Number of display modes or a negative number error code. C Function Name: SDL_GetNumDisplayModes Other Docs: SDL Wiki Procedure: ( sdl-get-num-video-displays ) \u2192 number Returns: Number of video modes or a negative number error code. C Function Name: SDL_GetNumVideoDisplays Other Docs: SDL Wiki Procedure: ( sdl-get-num-video-drivers ) \u2192 number Returns: Number of video modes or a negative number error code. C Function Name: SDL_GetNumVideoDrivers Other Docs: SDL Wiki Procedure: ( sdl-get-video-driver index ) \u2192 string Parameters: index : A number. The index to query. Returns: The video driver name. C Function Name: SDL_GetVideoDriver Other Docs: SDL Wiki Procedure: ( sdl-get-window-surface window ) \u2192 SDL_Surface Parameters: window : A SDL_Window . Returns: The SDL_Surface of the window. C Function Name: SDL_GetWindowSurface Other Docs: SDL Wiki Procedure: ( sdl-show-window window ) \u2192 void Parameters: window : A SDL_Window . C Function Name: SDL_ShowWindow Other Docs: SDL Wiki Procedure: ( sdl-update-window-surface window ) \u2192 number Parameters: window : A SDL_Window . Returns: 0 if no failure. C Function Name: SDL_UpdateWindowSurface Other Docs: SDL Wiki","title":"Display &amp; Window Management"},{"location":"ref/video/#2d-accelerated-rendering","text":"","title":"2D Accelerated Rendering"},{"location":"ref/video/#pixel-formats-conversion-routines","text":"","title":"Pixel Formats &amp; Conversion Routines"},{"location":"ref/video/#rectangle-functions","text":"","title":"Rectangle Functions"},{"location":"ref/video/#surface-creation-simple-drawing","text":"","title":"Surface Creation &amp; Simple Drawing"},{"location":"ref/video/#clipboard-handling","text":"","title":"Clipboard Handling"},{"location":"ref/video/#vulkan-support","text":"","title":"Vulkan Support"},{"location":"tuts/advanced-renderer/","text":"TODO","title":"Renderer Techniques"},{"location":"tuts/advanced-renderer/#todo","text":"","title":"TODO"},{"location":"tuts/events/","text":"TODO","title":"Handling Events"},{"location":"tuts/events/#todo","text":"","title":"TODO"},{"location":"tuts/renderer/","text":"TODO","title":"Renderer Basics"},{"location":"tuts/renderer/#todo","text":"","title":"TODO"},{"location":"tuts/tetris/","text":"TODO","title":"Complete Example: Tetris"},{"location":"tuts/tetris/#todo","text":"","title":"TODO"}]}