# Basics

---
Procedure:
>(**SDL-INIT** *flags*) → boolean

Parameters:
>| *flags*                 |
 | :---------------------- |
 | SDL-INIT-TIMER          |
 | SDL-INIT-AUDIO          |
 | SDL-INIT-VIDEO          |
 | SDL-INIT-JOYSTICK       |
 | SDL-INIT-HAPTIC         |
 | SDL-INIT-GAMECONTROLLER |
 | SDL-INIT-EVENTS         |
 | SDL-INIT-EVERYTHING     |

Returns:
>`#f` if there was a detectable error or `#t` otherwise.

C Function Name:
>`SDL_Init`

Examples:
```scheme
(sdl-init
  SDL-INIT-EVERYTHING)
```
```scheme
(sdl-init
  (bitwise-ior SDL-INIT-VIDEO
               SDL-INIT-AUDIO))
```

Notes:
>Flags can be combined using the `BITWISE-IOR` procedure.

---
Procedure:
>(**SDL-QUIT**) → void

C Function Name:
>`SDL_Quit`

---
Procedure:
>(**SDL-CLEAR-HINTS!**) → void

C Function Name:
>`SDL_ClearHints`

---
Procedure:
>(**SDL-GET-HINT-BOOLEAN** *name* *default*) → boolean

Parameters:
>***name*** : A string. Name of the hint.

>***default*** : Return value if hint not found.

Returns:
>The setting of the hint or, ***default*** if the hint isn't applicable to the system.

C Function Name:
>`SDL_GetHintBoolean`

---
Procedure:
>(**SDL-SET-HINT!** *name* *value*) → boolean

Parameters:
>***name*** : A string. Name of the [hint](#data).

>***value*** : A string. Value to set hint.

Returns:
>`#t` if hint was set or `#f` otherwise.

C Function Name:
>`SDL_SetHint`

---
Procedure:
>(**SDL-SET-HINT-W/-PRIORITY!** *name* *value* *priority*) → boolean

Parameters:
>***name*** : A string. Name of the [hint](#data).

>***value*** : A string. Value to set hint.

>| *priority*        |
 | :---------------- |
 | SDL-HINT-DEFAULT  |
 | SDL-HINT-NORMAL   |
 | SDL-HINT-OVERRIDE |

Returns:
>`#t` if hint was set or `#f` otherwise.

C Function Name:
>`SDL_SetHintWithPriority`

---
Procedure:
>(**SDL-CLEAR-ERROR!**) → void

C Function Name:
>`SDL_ClearError`

---
Procedure:
>(**SDL-GET-ERROR**) → string

Returns:
>A message describing an error that has occured.

C Function Name:
>`SDL_GetError`

---
Procedure:
>(**SDL-GET-VERSION**) → list

Returns:
>A list of 3 numbers. (major minor patch)

C Function Name:
>`SDL_GetVersion`

---
Procedure:
>(**SDL-GET-REVISION**) → string

Returns:
>A string identifying the version of SDL being used.

C Function Name:
>`SDL_GetRevision`

---
Procedure:
>(**SDL-GET-REVISION-NUM**) → number

Returns:
>A number identifying the version of SDL being used.

C Function Name:
>`SDL_GetRevisionNumber`



# Video












# Audio





























# Events

---

***Application Events***

---
Procedure:
>(**SDL-POLL-EVENT**) → '()

C Function Name:
>`SDL_PollEvent`

Notes:
>Puts a new event into the library.

---
Procedure:
>(**SDL-EVENT-NONE?**) → boolean

Returns:
>`#t` if there are no events otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-TIMESTAMP**) → number

Returns:
>Get the timestamp of an event. All events have a timestamp.

---
Procedure:
>(**SDL-EVENT-QUIT?**) → boolean

Returns:
>`#t` if event is of type `SDL_QUIT` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-CLIPBOARD?**) → boolean

Returns:
>`#t` if event is of type `SDL_CLIPBOARDUPDATE` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-TERMINATING?**) → boolean

Returns:
>`#t` if event is of type `SDL_APP_TERMINATING` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-LOW-MEMORY?**) → boolean

Returns:
>`#t` if event is of type `SDL_APP_LOWMEMORY` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-WILL-ENTER-BACKGROUND?**) → boolean

Returns:
>`#t` if event is of type `SDL_APP_WILLENTERBACKGROUND` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-DID-ENTER-BACKGROUND?**) → boolean

Returns:
>`#t` if event is of type `SDL_APP_DIDENTERBACKGROUND` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-WILL-ENTER-FOREGROUND?**) → boolean

Returns:
>`#t` if event is of type `SDL_APP_WILLENTERFOREGROUND` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-DID-ENTER-FOREGROUND?**) → boolean

Returns:
>`#t` if event is of type `SDL_APP_DIDENTERFOREGROUND` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-RENDER-TARGET-RESET?**) → boolean

Returns:
>`#t` if event is of type `SDL_RENDER_TARGETS_RESET` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-RENDER-DEVICE-RESET?**) → boolean

Returns:
>`#t` if event is of type `SDL_RENDER_DEVICE_RESET` otherwise `#f`.

---

***Windowing Events***

---
Procedure:
>(**SDL-EVENT-WINDOW?**) → boolean

Returns:
>`#t` if event is of type `SDL_WINDOWEVENT` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-SYSWM?**) → boolean

Returns:
>`#t` if event is of type `SDL_SYSWMEVENT` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-WIN-SHOWN?**) → boolean

Returns:
>`#t` if window is shown otherwise `#f`.

Notes:
>Window Event Type: `SDL_WINDOWEVENT_SHOWN`

---
Procedure:
>(**SDL-EVENT-WIN-HIDDEN?**) → boolean

Returns:
> `#t` if window is hidden otherwise `#f`.

Notes:
>Window Event Type: `SDL_WINDOWEVENT_HIDDEN`

---
Procedure:
>(**SDL-EVENT-WIN-EXPOSED?**) → boolean

Returns:
> `#t` if window is exposed otherwise `#f`.

Notes:
>Window Event Type: `SDL_WINDOWEVENT_EXPOSED`

---
Procedure:
>(**SDL-EVENT-WIN-MOVED?**) → boolean

Returns:
> `#t` if window is moved otherwise `#f`.

Notes:
>Window Event Type: `SDL_WINDOWEVENT_MOVED`

---
Procedure:
>(**SDL-EVENT-WIN-RESIZED?**) → boolean

Returns:
> `#t` if window is resized otherwise `#f`.

Notes:
>Window Event Type: `SDL_WINDOWEVENT_RESIZED`

---
Procedure:
>(**SDL-EVENT-WIN-SIZE-CHANGED?**) → boolean

Returns:
> `#t` if window's size changed otherwise `#f`.

Notes:
>Window Event Type: `SDL_WINDOWEVENT_SIZE_CHANGED`

---
Procedure:
>(**SDL-EVENT-WIN-MINIMIZED?**) → boolean

Returns:
> `#t` if window is minimized otherwise `#f`.

Notes:
>Window Event Type: `SDL_WINDOWEVENT_MINIMIZED`

---
Procedure:
>(**SDL-EVENT-WIN-MAXIMIZED?**) → boolean

Returns:
> `#t` if window is maximized otherwise `#f`.

Notes:
>Window Event Type: `SDL_WINDOWEVENT_MAXIMIZED`

---
Procedure:
>(**SDL-EVENT-WIN-RESTORED?**) → boolean

Returns:
> `#t` if window is restored otherwise `#f`.

Notes:
>Window Event Type: `SDL_WINDOWEVENT_RESTORED`

---
Procedure:
>(**SDL-EVENT-WIN-ENTER?**) → boolean

Returns:
> `#t` if mouse entered window otherwise `#f`.

Notes:
>Window Event Type: `SDL_WINDOWEVENT_ENTER`

---
Procedure:
>(**SDL-EVENT-WIN-LEAVE?**) → boolean

Returns:
> `#t` if mouse left window otherwise `#f`.

Notes:
>Window Event Type: `SDL_WINDOWEVENT_LEAVE`

---
Procedure:
>(**SDL-EVENT-WIN-FOCUS-GAINED?**) → boolean

Returns:
> `#t` if keyboard has gained window's focus otherwise `#f`.

Notes:
>Window Event Type: `SDL_WINDOWEVENT_FOCUS_GAINED`

---
Procedure:
>(**SDL-EVENT-WIN-FOCUS-LOST?**) → boolean

Returns:
> `#t` if keyboard has lost window's focus otherwise `#f`.

Notes:
>Window Event Type: `SDL_WINDOWEVENT_FOCUS_LOST`

---
Procedure:
>(**SDL-EVENT-WIN-CLOSE?**) → boolean

Returns:
> `#t` if window is closed otherwise `#f`.

Notes:
>Window Event Type: `SDL_WINDOWEVENT_CLOSE`

---
Procedure:
>(**SDL-EVENT-WIN-TAKE-FOCUS?**) → boolean

Returns:
> `#t` if window is offered focus otherwise `#f`.

Notes:
>Window Event Type: `SDL_WINDOWEVENT_TAKE_FOCUS`

---
Procedure:
>(**SDL-EVENT-WIN-HIT-TEST?**) → boolean

Returns:
> `#t` if window has a special hit test otherwise `#f`.

Notes:
>Window Event Type: `SDL_WINDOWEVENT_HIT_TEST`

---
Procedure:
>(**SDL-EVENT-WIN-ID**) → number

Returns:
> The window's id.

---
Procedure:
>(**SDL-EVENT-WIN-X**) → number

Returns:
> The window event's x value.

---
Procedure:
>(**SDL-EVENT-WIN-Y**) → number

Returns:
> The window event's y value.

---
Procedure:
>(**SDL-EVENT-WIN-W**) → number

Returns:
> The window event's width value.

---
Procedure:
>(**SDL-EVENT-WIN-H**) → number

Returns:
> The window event's height value.

---

***Keyboard Events***

---
Procedure:
>(**SDL-EVENT-KEYUP?**) → boolean

Returns:
>`#t` if event is of type `SDL_KEYUP` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-KEYDOWN?**) → boolean

Returns:
>`#t` if event is of type `SDL_KEYDOWN` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-KEYMAP-CHANGED?**) → boolean

Returns:
>`#t` if event is of type `SDL_KEYMAPCHANGED` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-KEY-REPEAT?**) → boolean

Returns:
>`#t` if key press was repeated otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-KEY-UP?** *key*) → boolean

Parameters:
> ***key*** : [A SDL key code.](#data)

Returns:
>`#t` if key was released otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-KEY-DOWN?** *key*) → boolean

Parameters:
> ***key*** : [A SDL key code.](#data)

Returns:
>`#t` if key was pressed otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-MOD-UP?** *key*) → boolean

Parameters:
> ***key*** : [A SDL modifier code.](#data)

Returns:
>`#t` if key was released otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-MOD-DOWN?** *key*) → boolean

Parameters:
> ***key*** : [A SDL modifier code.](#data)

Returns:
>`#t` if key was pressed otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-CODE-UP?** *key*) → boolean

Parameters:
> ***key*** : [A SDL scancode.](#data)

Returns:
>`#t` if key was released otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-CODE-DOWN?** *key*) → boolean

Parameters:
> ***key*** : [A SDL scancode.](#data)

Returns:
>`#t` if key was pressed otherwise `#f`.

---

***Text Events***

---
Procedure:
>(**SDL-EVENT-TEXT-EDITING?**) → boolean

Returns:
>`#t` if event is of type `SDL_TEXTEDITING` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-TEXT-INPUT?**) → boolean

Returns:
>`#t` if event is of type `SDL_TEXTINPUT` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-TEXT-EDITING-TEXT**) → string

Returns:
>The text being edited.

---
Procedure:
>(**SDL-EVENT-TEXT-INPUT-TEXT**) → string

Returns:
>The text being input.

---

***Mouse Events***

---
Procedure:
>(**SDL-EVENT-MOUSE-MOTION?**) → boolean

Returns:
>`#t` if event is of type `SDL_MOUSEMOTION` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-MOUSE-BUTTON-DOWN?**) → boolean

Returns:
>`#t` if event is of type `SDL_MOUSEBUTTONDOWN` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-MOUSE-BUTTON-UP?**) → boolean

Returns:
>`#t` if event is of type `SDL_MOUSEBUTTONUP` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-MOUSE-BUTTON-WHEEL?**) → boolean

Returns:
>`#t` if event is of type `SDL_MOUSEWHEEL` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-MOUSE-MOTION-WHICH**) → number

Returns:
>The id of the mouse for the motion event.

---
Procedure:
>(**SDL-EVENT-MOUSE-MOTION-X**) → number

Returns:
>The x value of the mouse motion event.

---
Procedure:
>(**SDL-EVENT-MOUSE-MOTION-Y**) → number

Returns:
>The y value of the mouse motion event.

---
Procedure:
>(**SDL-EVENT-MOUSE-MOTION-X-REL**) → number

Returns:
>The relative x value of the mouse motion event.

---
Procedure:
>(**SDL-EVENT-MOUSE-MOTION-Y-REL**) → number

Returns:
>The relative y value of the mouse motion event.

---
Procedure:
>(**SDL-EVENT-MOUSE-MOTION-B-LEFT?**) → boolean

Returns:
>`#t` if the left mouse button is down otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-MOUSE-MOTION-B-MIDDLE?**) → boolean

Returns:
>`#t` if the middle mouse button is down otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-MOUSE-MOTION-B-RIGHT?**) → boolean

Returns:
>`#t` if the right mouse button is down otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-MOUSE-MOTION-B-X1?**) → boolean

Returns:
>`#t` if the x1 mouse button is down otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-MOUSE-MOTION-B-X2?**) → boolean

Returns:
>`#t` if the x2 mouse button is down otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-MOUSE-BUTTON-WHICH**) → number

Returns:
>The id of the mouse for the button event.

---
Procedure:
>(**SDL-EVENT-MOUSE-BUTTON-STATE**) → symbol

Returns:
>`'SDL-RELEASED` or `'SDL-PRESSED`.

---
Procedure:
>(**SDL-EVENT-MOUSE-BUTTON-BUTTON**) → symbol

Returns:
>|                   |
 | :---------------- |
 | SDL-BUTTON-LEFT   |
 | SDL-BUTTON-MIDDLE |
 | SDL-BUTTON-RIGHT  |
 | SDL-BUTTON-X1     |
 | SDL-BUTTON-X2     |

---
Procedure:
>(**SDL-EVENT-MOUSE-BUTTON-CLICKS**) → number

Returns:
>The number of time there the mouse button has been clicked.

---
Procedure:
>(**SDL-EVENT-MOUSE-BUTTON-X**) → number

Returns:
>The x value of the mouse.

---
Procedure:
>(**SDL-EVENT-MOUSE-BUTTON-Y**) → number

Returns:
>The y value of the mouse.

---
Procedure:
>(**SDL-EVENT-MOUSE-WHEEL-WHICH**) → number

Returns:
>The id of the mouse for the wheel event.

---
Procedure:
>(**SDL-EVENT-MOUSE-WHEEL-WHICH**) → symbol

Returns:
>`'SDL-MOUSE-WHEEL-NORMAL`, `'SDL-MOUSE-WHEEL-FLIPPED`.

---
Procedure:
>(**SDL-EVENT-WHEEL-BUTTON-X**) → number

Returns:
>The x value of the mouse.

---
Procedure:
>(**SDL-EVENT-WHEEL-BUTTON-Y**) → number

Returns:
>The y value of the mouse.

---

***Joystick Events***

---
Procedure:
>(**SDL-EVENT-JOY-DEV-ADDED?**) → boolean

Returns:
>`#t` if event is of type `SDL_JOYDEVICEADDED` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-JOY-DEV-REMOVED?**) → boolean

Returns:
>`#t` if event is of type `SDL_JOYDEVICEREMOVED` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-JOY-DEVICE**) → number

Returns:
>The id of the joystick device.

---
Procedure:
>(**SDL-EVENT-JOY-BUTTON-UP?**) → boolean

Returns:
>`#t` if event is of type `SDL_JOYBUTTONUP` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-JOY-BUTTON-DOWN?**) → boolean

Returns:
>`#t` if event is of type `SDL_JOYBUTTONDOWN` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-JOY-BUTTON?**) → boolean

Returns:
>`#t` if event is of type `SDL_JOYBUTTONUP` or `SDL_JOYBUTTONDOWN` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-JOY-BUTTON-PRESSED?**) → boolean

Returns:
>`#t` if button was pressed down otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-JOY-BUTTON-DEVICE**) → number

Returns:
>The id of the joystick device.

---
Procedure:
>(**SDL-EVENT-JOY-BUTTON**) → number

Returns:
>The id of the button.

---
Procedure:
>(**SDL-EVENT-JOY-HAT?**) → boolean

Returns:
>`#t` if event is of type `SDL_JOYHATMOTION` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-JOY-HAT**) → number

Returns:
>The id of the hat.

---
Procedure:
>(**SDL-EVENT-JOY-HAT-POS**) → symbol

Returns:
>|                    |
 | :----------------- |
 | SDL-HAT-CENTERED   |
 | SDL-HAT-UP         |
 | SDL-HAT-RIGHT      |
 | SDL-HAT-DOWN       |
 | SDL-HAT-LEFT       |
 | SDL-HAT-RIGHT-UP   |
 | SDL-HAT-RIGHT-DOWN |
 | SDL-HAT-LEFT-UP    |
 | SDL-HAT-LEFT-DOWN  |

---
Procedure:
>(**SDL-EVENT-JOY-HAT-DEVICE**) → number

Returns:
>The id of the joystick device.

---
Procedure:
>(**SDL-EVENT-JOY-BALL?**) → boolean

Returns:
>`#t` if event is of type `SDL_JOYBALLMOTION` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-JOY-BALL**) → number

Returns:
>The id of the ball.

---
Procedure:
>(**SDL-EVENT-JOY-BALL-X-REL**) → number

Returns:
>The motion in the relative x-direction.

---
Procedure:
>(**SDL-EVENT-JOY-BALL-Y-REL**) → number

Returns:
>The motion in the relative y-direction.

---
Procedure:
>(**SDL-EVENT-JOY-BALL-DEVICE**) → number

Returns:
>The id of the joystick device.

---
Procedure:
>(**SDL-EVENT-JOY-AXIS?**) → boolean

Returns:
>`#t` if event is of type `SDL_JOYAXISMOTION` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-JOY-AXIS**) → number

Returns:
>The id of the axis.

---
Procedure:
>(**SDL-EVENT-JOY-AXIS-MOTION**) → number

Returns:
>The current position of the axis.

---
Procedure:
>(**SDL-EVENT-JOY-AXIS-DEVICE**) → number

Returns:
>The id of the joystick device.

---

***Controller Events***

---
Procedure:
>(**SDL-EVENT-CON-DEV-ADDED?**) → boolean

Returns:
>`#t` if event is of type `SDL_CONTROLLERDEVICEADDED` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-CON-DEV-REMOVED?**) → boolean

Returns:
>`#t` if event is of type `SDL_CONTROLLERDEVICEREMOVED` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-CON-DEV-REMAPPED?**) → boolean

Returns:
>`#t` if event is of type `SDL_CONTROLLERDEVICEREMAPPED` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-CON-DEVICE**) → number

Returns:
>The id of the game controller.

---
Procedure:
>(**SDL-EVENT-CON-AXIS?**) → boolean

Returns:
>`#t` if event is of type `SDL_CONTROLLERAXISMOTION` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-CON-AXIS-DEVICE**) → number

Returns:
>The id of the game controller.

---
Procedure:
>(**SDL-EVENT-CON-AXIS**) → symbol

Returns:
>||
 | :-------------------------------- |
 | SDL-CONTROLLER-AXIS-LEFT-X        |
 | SDL-CONTROLLER-AXIS-LEFT-Y        |
 | SDL-CONTROLLER-AXIS-RIGHT-X       |
 | SDL-CONTROLLER-AXIS-RIGHT-Y       |
 | SDL-CONTROLLER-AXIS-TRIGGER-LEFT  |
 | SDL-CONTROLLER-AXIS-TRIGGER-RIGHT |

---
Procedure:
>(**SDL-EVENT-CON-MOTION**) → number

Returns:
>The current position of the axis.

---
Procedure:
>(**SDL-EVENT-CON-BUTTON-UP?**) → boolean

Returns:
>`#t` if event is of type `SDL_CONTROLLERBUTTONUP` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-CON-BUTTON-DOWN?**) → boolean

Returns:
>`#t` if event is of type `SDL_CONTROLLERBUTTONDOWN` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-CON-BUTTON?**) → boolean

Returns:
>`#t` if event is of type `SDL_CONTROLLERBUTTONUP` or `SDL_CONTROLLERBUTTONDOWN` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-CON-BUTTON-PRESSED?**) → boolean

Returns:
>`#t` if the button is pressed down otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-CON-BUTTON**) → symbol

Returns:
>||
 | :----------------------------------- |
 | SDL-CONTROLLER-BUTTON-A              |
 | SDL-CONTROLLER-BUTTON-B              |
 | SDL-CONTROLLER-BUTTON-X              |
 | SDL-CONTROLLER-BUTTON-Y              |
 | SDL-CONTROLLER-BUTTON-BACK           |
 | SDL-CONTROLLER-BUTTON-GUIDE          |
 | SDL-CONTROLLER-BUTTON-START          |
 | SDL-CONTROLLER-BUTTON-LEFT-STICK     |
 | SDL-CONTROLLER-BUTTON-RIGHT-STICK    |
 | SDL-CONTROLLER-BUTTON-LEFT-SHOULDER  |
 | SDL-CONTROLLER-BUTTON-RIGHT-SHOULDER |
 | SDL-CONTROLLER-BUTTON-UP             |
 | SDL-CONTROLLER-BUTTON-DOWN           |
 | SDL-CONTROLLER-BUTTON-LEFT           |
 | SDL-CONTROLLER-BUTTON-RIGHT          |

---
Procedure:
>(**SDL-EVENT-CON-BUTTON-DEVICE**) → number

Returns:
>The id of the game controller.

---

***Audio Events***

---
Procedure:
>(**SDL-EVENT-AUDIO-DEVICE-ADDED?**) → boolean

Returns:
>`#t` if event is of type `SDL_AUDIODEVICEADDED` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-AUDIO-DEVICE-REMOVED?**) → boolean

Returns:
>`#t` if event is of type `SDL_AUDIODEVICEREMOVED` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-AUDIO-DEVICE-WHICH**) → number

Returns:
>The id of the audio device.

---
Procedure:
>(**SDL-EVENT-AUDIO-DEVICE-ISCAPTURE?**) → boolean

Returns:
>`#t` if the device is a capture device otherwise `#f`.

---

***Touch Events***

---
Procedure:
>(**SDL-EVENT-FINGER-DOWN?**) → boolean

Returns:
>`#t` if event is of type `SDL_FINGERDOWN` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-FINGER-UP?**) → boolean

Returns:
>`#t` if event is of type `SDL_FINGERUP` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-FINGER-MOTION?**) → boolean

Returns:
>`#t` if event is of type `SDL_FINGERMOTION` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-DOLLAR-GESTURE?**) → boolean

Returns:
>`#t` if event is of type `SDL_DOLLARGESTURE` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-DOLLAR-RECORD?**) → boolean

Returns:
>`#t` if event is of type `SDL_DOLLARRECORD` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-MULTI-GESTURE?**) → boolean

Returns:
>`#t` if event is of type `SDL_MULTIGESTURE` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-TOUCH-ID**) → number

Returns:
>The id of the touch device.

---
Procedure:
>(**SDL-EVENT-TOUCH-X**) → number

Returns:
>The x-axis location of the touch event, normalized (0...1)

---
Procedure:
>(**SDL-EVENT-TOUCH-Y**) → number

Returns:
>The y-axis location of the touch event, normalized (0...1)

---
Procedure:
>(**SDL-EVENT-TOUCH-DX**) → number

Returns:
>The distance moved in the x-axis, normalized (0...1)

---
Procedure:
>(**SDL-EVENT-TOUCH-DY**) → number

Returns:
>The distance moved in the y-axis, normalized (0...1)

---
Procedure:
>(**SDL-EVENT-TOUCH-PRESSURE**) → number

Returns:
>The quantity of pressure applied, normalized (0...1)

---
Procedure:
>(**SDL-EVENT-FINGER-ID**) → number

Returns:
>The id of the finger.

---
Procedure:
>(**SDL-EVENT-GESTURE-ID**) → number

Returns:
>The id of the gesture.

---
Procedure:
>(**SDL-EVENT-GESTURE-NUM-FINGERS**) → number

Returns:
>The number of fingers used to draw the stroke.

---
Procedure:
>(**SDL-EVENT-GESTURE-ERROR**) → number

Returns:
>The difference between the gesture template and the actual performed gesture.

---
Procedure:
>(**SDL-EVENT-MULTI-GESTURE-DTHETA**) → number

Returns:
>The amount that the fingers rotated during this motion.

---
Procedure:
>(**SDL-EVENT-MULTI-GESTURE-DDIST**) → number

Returns:
>The amount that the fingers pinched during this motion.

---

***Drag & Drop Events***

---
Procedure:
>(**SDL-EVENT-DROP-FILE?**) → boolean

Returns:
>`#t` if event is of type `SDL_DROPFILE` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-DROP-TEXT?**) → boolean

Returns:
>`#t` if event is of type `SDL_DROPTEXT` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-DROP-BEGIN?**) → boolean

Returns:
>`#t` if event is of type `SDL_DROPBEGIN` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-DROP-COMPLETE?**) → boolean

Returns:
>`#t` if event is of type `SDL_DROPCOMPLETE` otherwise `#f`.

---
Procedure:
>(**SDL-EVENT-DROP-FILE**) → string

Returns:
>The file name.



# Inputs
































# Force Feedback

































# Power Management

---
Procedure:
>(**SDL-GET-POWER-INFO**) → list

Returns:
>A list of 3 elements. (seconds percentage state)

C Function Name:
>`SDL_GetPowerInfo`

Notes:
> ***seconds*** : Seconds of battery life left. Will return -1 if we can't determine a value, or we're not running on a battery.

> ***percentage*** : Percentage of battery life left, between 0 and 100. Will return -1 if we can't determine a value, or we're not running on a battery.

>| *state*                   |
 | :------------------------ |
 | SDL-POWERSTATE-UNKNOWN    |
 | SDL-POWERSTATE-ON-BATTERY |
 | SDL-POWERSTATE-NO-BATTERY |
 | SDL-POWERSTATE-CHARGING   |
 | SDL-POWERSTATE-CHARGED    |



# Timers

---
Procedure:
>(**SDL-DELAY** *ms*) → void

Parameters:
>***ms*** : A number. The number of milliseconds to delay.

C Function Name:
>`SDL_Delay`

---
Procedure:
>(**SDL-GET-TICKS**) → number

Returns:
>Number of milliseconds since the SDL library initialized.

C Function Name:
>`SDL_GetTicks`

---
Procedure:
>(**SDL-GET-PERFORMANCE-COUNTER**) → number

Returns:
>The current counter value.

C Function Name:
>`SDL_GetPerformanceCounter`

---
Procedure:
>(**SDL-GET-PERFORMANCE-FREQUENCY**) → number

Returns:
>A platform-specific count per second.

C Function Name:
>`SDL_GetPerformanceFrequency`



# Data

| *hints*                                           |
| :------------------------------------------------ |
| SDL-HINT-FRAMEBUFFER-ACCELERATION                 |
| SDL-HINT-RENDER-DRIVER                            |
| SDL-HINT-RENDER-OPENGL-SHADERS                    |
| SDL-HINT-RENDER-DIRECT3D-THREADSAFE               |
| SDL-HINT-RENDER-DIRECT3D11-DEBUG                  |
| SDL-HINT-RENDER-LOGICAL-SIZE-MODE                 |
| SDL-HINT-RENDER-SCALE-QUALITY                     |
| SDL-HINT-RENDER-VSYNC                             |
| SDL-HINT-VIDEO-ALLOW-SCREENSAVER                  |
| SDL-HINT-VIDEO-X11-XVIDMODE                       |
| SDL-HINT-VIDEO-X11-XINERAMA                       |
| SDL-HINT-VIDEO-X11-XRANDR                         |
| SDL-HINT-VIDEO-X11-NET-WM-PING                    |
| SDL-HINT-VIDEO-X11-NET-WM-BYPASS-COMPOSITOR       |
| SDL-HINT-WINDOW-FRAME-USABLE-WHILE-CURSOR-HIDDEN  |
| SDL-HINT-WINDOWS-INTRESOURCE-ICON                 |
| SDL-HINT-WINDOWS-INTRESOURCE-ICON-SMALL           |
| SDL-HINT-WINDOWS-ENABLE-MESSAGELOOP               |
| SDL-HINT-GRAB-KEYBOARD                            |
| SDL-HINT-MOUSE-NORMAL-SPEED-SCALE                 |
| SDL-HINT-MOUSE-RELATIVE-SPEED-SCALE               |
| SDL-HINT-MOUSE-RELATIVE-MODE-WARP                 |
| SDL-HINT-MOUSE-FOCUS-CLICKTHROUGH                 |
| SDL-HINT-TOUCH-MOUSE-EVENTS                       |
| SDL-HINT-VIDEO-MINIMIZE-ON-FOCUS-LOSS             |
| SDL-HINT-IDLE-TIMER-DISABLED                      |
| SDL-HINT-ORIENTATIONS                             |
| SDL-HINT-APPLE-TV-CONTROLLER-UI-EVENTS            |
| SDL-HINT-APPLE-TV-REMOTE-ALLOW-ROTATION           |
| SDL-HINT-IOS-HIDE-HOME-INDICATOR                  |
| SDL-HINT-ACCELEROMETER-AS-JOYSTICK                |
| SDL-HINT-TV-REMOTE-AS-JOYSTICK                    |
| SDL-HINT-XINPUT-ENABLED                           |
| SDL-HINT-XINPUT-USE-OLD-JOYSTICK-MAPPING          |
| SDL-HINT-GAMECONTROLLERCONFIG                     |
| SDL-HINT-GAMECONTROLLER-IGNORE-DEVICES            |
| SDL-HINT-GAMECONTROLLER-IGNORE-DEVICES-EXCEPT     |
| SDL-HINT-JOYSTICK-ALLOW-BACKGROUND-EVENTS         |
| SDL-HINT-ALLOW-TOPMOST                            |
| SDL-HINT-TIMER-RESOLUTION                         |
| SDL-HINT-QTWAYLAND-CONTENT-ORIENTATION            |
| SDL-HINT-QTWAYLAND-WINDOW-FLAGS                   |
| SDL-HINT-THREAD-STACK-SIZE                        |
| SDL-HINT-VIDEO-HIGHDPI-DISABLED                   |
| SDL-HINT-MAC-CTRL-CLICK-EMULATE-RIGHT-CLICK       |
| SDL-HINT-VIDEO-WIN-D3DCOMPILER                    |
| SDL-HINT-VIDEO-WINDOW-SHARE-PIXEL-FORMAT          |
| SDL-HINT-WINRT-PRIVACY-POLICY-URL                 |
| SDL-HINT-WINRT-PRIVACY-POLICY-LABEL               |
| SDL-HINT-WINRT-HANDLE-BACK-BUTTON                 |
| SDL-HINT-VIDEO-MAC-FULLSCREEN-SPACES              |
| SDL-HINT-MAC-BACKGROUND-APP                       |
| SDL-HINT-ANDROID-APK-EXPANSION-MAIN-FILE-VERSION  |
| SDL-HINT-ANDROID-APK-EXPANSION-PATCH-FILE-VERSION |
| SDL-HINT-IME-INTERNAL-EDITING                     |
| SDL-HINT-ANDROID-SEPARATE-MOUSE-AND-TOUCH         |
| SDL-HINT-ANDROID-TRAP-BACK-BUTTON                 |
| SDL-HINT-RETURN-KEY-HIDES-IME                     |
| SDL-HINT-EMSCRIPTEN-KEYBOARD-ELEMENT              |
| SDL-HINT-NO-SIGNAL-HANDLERS                       |
| SDL-HINT-WINDOWS-NO-CLOSE-ON-ALT-F4               |
| SDL-HINT-BMP-SAVE-LEGACY-FORMAT                   |
| SDL-HINT-WINDOWS-DISABLE-THREAD-NAMING            |
| SDL-HINT-RPI-VIDEO-LAYER                          |
| SDL-HINT-VIDEO-DOUBLE-BUFFER                      |
| SDL-HINT-OPENGL-ES-DRIVER                         |
| SDL-HINT-AUDIO-RESAMPLING-MODE                    |
| SDL-HINT-AUDIO-CATEGORY                           |

<br>

| Scancodes                      | Keycodes |
|:-------------------------------|:---------|
|SDL-SCANCODE-UNKNOWN            |SDLK-UNKNOWN|
|SDL-SCANCODE-A                  |SDLK-A|
|SDL-SCANCODE-B                  |SDLK-B|
|SDL-SCANCODE-C                  |SDLK-C|
|SDL-SCANCODE-D                  |SDLK-D|
|SDL-SCANCODE-E                  |SDLK-E|
|SDL-SCANCODE-F                  |SDLK-F|
|SDL-SCANCODE-G                  |SDLK-G|
|SDL-SCANCODE-H                  |SDLK-H|
|SDL-SCANCODE-I                  |SDLK-I|
|SDL-SCANCODE-J                  |SDLK-J|
|SDL-SCANCODE-K                  |SDLK-K|
|SDL-SCANCODE-L                  |SDLK-L|
|SDL-SCANCODE-M                  |SDLK-M|
|SDL-SCANCODE-N                  |SDLK-N|
|SDL-SCANCODE-O                  |SDLK-O|
|SDL-SCANCODE-P                  |SDLK-P|
|SDL-SCANCODE-Q                  |SDLK-Q|
|SDL-SCANCODE-R                  |SDLK-R|
|SDL-SCANCODE-S                  |SDLK-S|
|SDL-SCANCODE-T                  |SDLK-T|
|SDL-SCANCODE-U                  |SDLK-U|
|SDL-SCANCODE-V                  |SDLK-V|
|SDL-SCANCODE-W                  |SDLK-W|
|SDL-SCANCODE-X                  |SDLK-X|
|SDL-SCANCODE-Y                  |SDLK-Y|
|SDL-SCANCODE-Z                  |SDLK-Z|
|SDL-SCANCODE-1                  |SDLK-1|
|SDL-SCANCODE-2                  |SDLK-2|
|SDL-SCANCODE-3                  |SDLK-3|
|SDL-SCANCODE-4                  |SDLK-4|
|SDL-SCANCODE-5                  |SDLK-5|
|SDL-SCANCODE-6                  |SDLK-6|
|SDL-SCANCODE-7                  |SDLK-7|
|SDL-SCANCODE-8                  |SDLK-8|
|SDL-SCANCODE-9                  |SDLK-9|
|SDL-SCANCODE-0                  |SDLK-0|
|SDL-SCANCODE-RETURN             |SDLK-RETURN|
|SDL-SCANCODE-ESCAPE             |SDLK-ESCAPE|
|SDL-SCANCODE-BACKSPACE          |SDLK-BACKSPACE|
|SDL-SCANCODE-TAB                |SDLK-TAB|
|SDL-SCANCODE-SPACE              |SDLK-SPACE|
|SDL-SCANCODE-MINUS              |SDLK-MINUS|
|SDL-SCANCODE-EQUALS             |SDLK-EQUALS|
|SDL-SCANCODE-LEFTBRACKET        |SDLK-LEFTBRACKET|
|SDL-SCANCODE-RIGHTBRACKET       |SDLK-RIGHTBRACKET|
|SDL-SCANCODE-BACKSLASH          |SDLK-BACKSLASH|
|SDL-SCANCODE-NONUSHASH          ||
|SDL-SCANCODE-SEMICOLON          |SDLK-SEMICOLON|
|SDL-SCANCODE-APOSTROPHE         |SDLK-QUOTE|
|SDL-SCANCODE-GRAVE              |SDLK-BACKQUOTE|
|SDL-SCANCODE-COMMA              |SDLK-COMMA|
|SDL-SCANCODE-PERIOD             |SDLK-PERIOD|
|SDL-SCANCODE-SLASH              |SDLK-SLASH|
|SDL-SCANCODE-CAPSLOCK           |SDLK-CAPSLOCK|
|SDL-SCANCODE-F1                 |SDLK-F1|
|SDL-SCANCODE-F2                 |SDLK-F2|
|SDL-SCANCODE-F3                 |SDLK-F3|
|SDL-SCANCODE-F4                 |SDLK-F4|
|SDL-SCANCODE-F5                 |SDLK-F5|
|SDL-SCANCODE-F6                 |SDLK-F6|
|SDL-SCANCODE-F7                 |SDLK-F7|
|SDL-SCANCODE-F8                 |SDLK-F8|
|SDL-SCANCODE-F9                 |SDLK-F9|
|SDL-SCANCODE-F10                |SDLK-F10|
|SDL-SCANCODE-F11                |SDLK-F11|
|SDL-SCANCODE-F12                |SDLK-F12|
|SDL-SCANCODE-PRINTSCREEN        |SDLK-PRINTSCREEN|
|SDL-SCANCODE-SCROLLLOCK         |SDLK-SCROLLLOCK|
|SDL-SCANCODE-PAUSE              |SDLK-PAUSE|
|SDL-SCANCODE-INSERT             |SDLK-INSERT|
|SDL-SCANCODE-HOME               |SDLK-HOME|
|SDL-SCANCODE-PAGEUP             |SDLK-PAGEUP|
|SDL-SCANCODE-DELETE             |SDLK-DELETE|
|SDL-SCANCODE-END                |SDLK-END|
|SDL-SCANCODE-PAGEDOWN           |SDLK-PAGEDOWN|
|SDL-SCANCODE-RIGHT              |SDLK-RIGHT|
|SDL-SCANCODE-LEFT               |SDLK-LEFT|
|SDL-SCANCODE-DOWN               |SDLK-DOWN|
|SDL-SCANCODE-UP                 |SDLK-UP|
|SDL-SCANCODE-NUMLOCKCLEAR       |SDLK-NUMLOCKCLEAR|
|SDL-SCANCODE-KP-DIVIDE          |SDLK-KP-DIVIDE|
|SDL-SCANCODE-KP-MULTIPLY        |SDLK-KP-MULTIPLY|
|SDL-SCANCODE-KP-MINUS           |SDLK-KP-MINUS|
|SDL-SCANCODE-KP-PLUS            |SDLK-KP-PLUS|
|SDL-SCANCODE-KP-ENTER           |SDLK-KP-ENTER|
|SDL-SCANCODE-KP-1               |SDLK-KP-1|
|SDL-SCANCODE-KP-2               |SDLK-KP-2|
|SDL-SCANCODE-KP-3               |SDLK-KP-3|
|SDL-SCANCODE-KP-4               |SDLK-KP-4|
|SDL-SCANCODE-KP-5               |SDLK-KP-5|
|SDL-SCANCODE-KP-6               |SDLK-KP-6|
|SDL-SCANCODE-KP-7               |SDLK-KP-7|
|SDL-SCANCODE-KP-8               |SDLK-KP-8|
|SDL-SCANCODE-KP-9               |SDLK-KP-9|
|SDL-SCANCODE-KP-0               |SDLK-KP-0|
|SDL-SCANCODE-KP-PERIOD          |SDLK-KP-PERIOD|
|SDL-SCANCODE-NONUSBACKSLASH     ||
|SDL-SCANCODE-APPLICATION        |SDLK-APPLICATION|
|SDL-SCANCODE-POWER              |SDLK-POWER|
|SDL-SCANCODE-KP-EQUALS          |SDLK-KP-EQUALS|
|SDL-SCANCODE-F13                |SDLK-F13|
|SDL-SCANCODE-F14                |SDLK-F14|
|SDL-SCANCODE-F15                |SDLK-F15|
|SDL-SCANCODE-F16                |SDLK-F16|
|SDL-SCANCODE-F17                |SDLK-F17|
|SDL-SCANCODE-F18                |SDLK-F18|
|SDL-SCANCODE-F19                |SDLK-F19|
|SDL-SCANCODE-F20                |SDLK-F20|
|SDL-SCANCODE-F21                |SDLK-F21|
|SDL-SCANCODE-F22                |SDLK-F22|
|SDL-SCANCODE-F23                |SDLK-F23|
|SDL-SCANCODE-F24                |SDLK-F24|
|SDL-SCANCODE-EXECUTE            |SDLK-EXECUTE|
|SDL-SCANCODE-HELP               |SDLK-HELP|
|SDL-SCANCODE-MENU               |SDLK-MENU|
|SDL-SCANCODE-SELECT             |SDLK-SELECT|
|SDL-SCANCODE-STOP               |SDLK-STOP|
|SDL-SCANCODE-AGAIN              |SDLK-AGAIN|
|SDL-SCANCODE-UNDO               |SDLK-UNDO|
|SDL-SCANCODE-CUT                |SDLK-CUT|
|SDL-SCANCODE-COPY               |SDLK-COPY|
|SDL-SCANCODE-PASTE              |SDLK-PASTE|
|SDL-SCANCODE-FIND               |SDLK-FIND|
|SDL-SCANCODE-MUTE               |SDLK-MUTE|
|SDL-SCANCODE-VOLUMEUP           |SDLK-VOLUMEUP|
|SDL-SCANCODE-VOLUMEDOWN         |SDLK-VOLUMEDOWN|
|SDL-SCANCODE-KP-COMMA           |SDLK-KP-COMMA|
|SDL-SCANCODE-KP-EQUALSAS400     |SDLK-KP-EQUALSAS400|
|SDL-SCANCODE-INTERNATIONAL1     ||
|SDL-SCANCODE-INTERNATIONAL2     ||
|SDL-SCANCODE-INTERNATIONAL3     ||
|SDL-SCANCODE-INTERNATIONAL4     ||
|SDL-SCANCODE-INTERNATIONAL5     ||
|SDL-SCANCODE-INTERNATIONAL6     ||
|SDL-SCANCODE-INTERNATIONAL7     ||
|SDL-SCANCODE-INTERNATIONAL8     ||
|SDL-SCANCODE-INTERNATIONAL9     ||
|SDL-SCANCODE-LANG1              ||
|SDL-SCANCODE-LANG2              ||
|SDL-SCANCODE-LANG3              ||
|SDL-SCANCODE-LANG4              ||
|SDL-SCANCODE-LANG5              ||
|SDL-SCANCODE-LANG6              ||
|SDL-SCANCODE-LANG7              ||
|SDL-SCANCODE-LANG8              ||
|SDL-SCANCODE-LANG9              ||
|SDL-SCANCODE-ALTERASE           |SDLK-ALTERASE|
|SDL-SCANCODE-SYSREQ             |SDLK-SYSREQ|
|SDL-SCANCODE-CANCEL             |SDLK-CANCEL|
|SDL-SCANCODE-CLEAR              |SDLK-CLEAR|
|SDL-SCANCODE-PRIOR              |SDLK-PRIOR|
|SDL-SCANCODE-RETURN2            |SDLK-RETURN2|
|SDL-SCANCODE-SEPARATOR          |SDLK-SEPARATOR|
|SDL-SCANCODE-OUT                |SDLK-OUT|
|SDL-SCANCODE-OPER               |SDLK-OPER|
|SDL-SCANCODE-CLEARAGAIN         |SDLK-CLEARAGAIN|
|SDL-SCANCODE-CRSEL              |SDLK-CRSEL|
|SDL-SCANCODE-EXSEL              |SDLK-EXSEL|
|SDL-SCANCODE-KP-00              |SDLK-KP-00|
|SDL-SCANCODE-KP-000             |SDLK-KP-000|
|SDL-SCANCODE-THOUSANDSSEPARATOR |SDLK-THOUSANDSSEPARATOR|
|SDL-SCANCODE-DECIMALSEPARATOR   |SDLK-DECIMALSEPARATOR|
|SDL-SCANCODE-CURRENCYUNIT       |SDLK-CURRENCYUNIT|
|SDL-SCANCODE-CURRENCYSUBUNIT    |SDLK-CURRENCYSUBUNIT|
|SDL-SCANCODE-KP-LEFTPAREN       |SDLK-KP-LEFTPAREN|
|SDL-SCANCODE-KP-RIGHTPAREN      |SDLK-KP-RIGHTPAREN|
|SDL-SCANCODE-KP-LEFTBRACE       |SDLK-KP-LEFTBRACE|
|SDL-SCANCODE-KP-RIGHTBRACE      |SDLK-KP-RIGHTBRACE|
|SDL-SCANCODE-KP-TAB             |SDLK-KP-TAB|
|SDL-SCANCODE-KP-BACKSPACE       |SDLK-KP-BACKSPACE|
|SDL-SCANCODE-KP-A               |SDLK-KP-A|
|SDL-SCANCODE-KP-B               |SDLK-KP-B|
|SDL-SCANCODE-KP-C               |SDLK-KP-C|
|SDL-SCANCODE-KP-D               |SDLK-KP-D|
|SDL-SCANCODE-KP-E               |SDLK-KP-E|
|SDL-SCANCODE-KP-F               |SDLK-KP-F|
|SDL-SCANCODE-KP-XOR             |SDLK-KP-XOR|
|SDL-SCANCODE-KP-POWER           |SDLK-KP-POWER|
|SDL-SCANCODE-KP-PERCENT         |SDLK-KP-PERCENT|
|SDL-SCANCODE-KP-LESS            |SDLK-KP-LESS|
|SDL-SCANCODE-KP-GREATER         |SDLK-KP-GREATER|
|SDL-SCANCODE-KP-AMPERSAND       |SDLK-KP-AMPERSAND|
|SDL-SCANCODE-KP-DBLAMPERSAND    |SDLK-KP-DBLAMPERSAND|
|SDL-SCANCODE-KP-VERTICALBAR     |SDLK-KP-VERTICALBAR|
|SDL-SCANCODE-KP-DBLVERTICALBAR  |SDLK-KP-DBLVERTICALBAR|
|SDL-SCANCODE-KP-COLON           |SDLK-KP-COLON|
|SDL-SCANCODE-KP-HASH            |SDLK-KP-HASH|
|SDL-SCANCODE-KP-SPACE           |SDLK-KP-SPACE|
|SDL-SCANCODE-KP-AT              |SDLK-KP-AT|
|SDL-SCANCODE-KP-EXCLAM          |SDLK-KP-EXCLAM|
|SDL-SCANCODE-KP-MEMSTORE        |SDLK-KP-MEMSTORE|
|SDL-SCANCODE-KP-MEMRECALL       |SDLK-KP-MEMRECALL|
|SDL-SCANCODE-KP-MEMCLEAR        |SDLK-KP-MEMCLEAR|
|SDL-SCANCODE-KP-MEMADD          |SDLK-KP-MEMADD|
|SDL-SCANCODE-KP-MEMSUBTRACT     |SDLK-KP-MEMSUBTRACT|
|SDL-SCANCODE-KP-MEMMULTIPLY     |SDLK-KP-MEMMULTIPLY|
|SDL-SCANCODE-KP-MEMDIVIDE       |SDLK-KP-MEMDIVIDE|
|SDL-SCANCODE-KP-PLUSMINUS       |SDLK-KP-PLUSMINUS|
|SDL-SCANCODE-KP-CLEAR           |SDLK-KP-CLEAR|
|SDL-SCANCODE-KP-CLEARENTRY      |SDLK-KP-CLEARENTRY|
|SDL-SCANCODE-KP-BINARY          |SDLK-KP-BINARY|
|SDL-SCANCODE-KP-OCTAL           |SDLK-KP-OCTAL|
|SDL-SCANCODE-KP-DECIMAL         |SDLK-KP-DECIMAL|
|SDL-SCANCODE-KP-HEXADECIMAL     |SDLK-KP-HEXADECIMAL|
|SDL-SCANCODE-LCTRL              |SDLK-LCTRL|
|SDL-SCANCODE-LSHIFT             |SDLK-LSHIFT|
|SDL-SCANCODE-LALT               |SDLK-LALT|
|SDL-SCANCODE-LGUI               |SDLK-LGUI|
|SDL-SCANCODE-RCTRL              |SDLK-RCTRL|
|SDL-SCANCODE-RSHIFT             |SDLK-RSHIFT|
|SDL-SCANCODE-RALT               |SDLK-RALT|
|SDL-SCANCODE-RGUI               |SDLK-RGUI|
|SDL-SCANCODE-MODE               |SDLK-MODE|
|SDL-SCANCODE-AUDIONEXT          |SDLK-AUDIONEXT|
|SDL-SCANCODE-AUDIOPREV          |SDLK-AUDIOPREV|
|SDL-SCANCODE-AUDIOSTOP          |SDLK-AUDIOSTOP|
|SDL-SCANCODE-AUDIOPLAY          |SDLK-AUDIOPLAY|
|SDL-SCANCODE-AUDIOMUTE          |SDLK-AUDIOMUTE|
|SDL-SCANCODE-MEDIASELECT        |SDLK-MEDIASELECT|
|SDL-SCANCODE-WWW                |SDLK-WWW|
|SDL-SCANCODE-MAIL               |SDLK-MAIL|
|SDL-SCANCODE-CALCULATOR         |SDLK-CALCULATOR|
|SDL-SCANCODE-COMPUTER           |SDLK-COMPUTER|
|SDL-SCANCODE-AC-SEARCH          |SDLK-AC-SEARCH|
|SDL-SCANCODE-AC-HOME            |SDLK-AC-HOME|
|SDL-SCANCODE-AC-BACK            |SDLK-AC-BACK|
|SDL-SCANCODE-AC-FORWARD         |SDLK-AC-FORWARD|
|SDL-SCANCODE-AC-STOP            |SDLK-AC-STOP|
|SDL-SCANCODE-AC-REFRESH         |SDLK-AC-REFRESH|
|SDL-SCANCODE-AC-BOOKMARKS       |SDLK-AC-BOOKMARKS|
|SDL-SCANCODE-BRIGHTNESSDOWN     |SDLK-BRIGHTNESSDOWN|
|SDL-SCANCODE-BRIGHTNESSUP       |SDLK-BRIGHTNESSUP|
|SDL-SCANCODE-DISPLAYSWITCH      |SDLK-DISPLAYSWITCH|
|SDL-SCANCODE-KBDILLUMTOGGLE     |SDLK-KBDILLUMTOGGLE|
|SDL-SCANCODE-KBDILLUMDOWN       |SDLK-KBDILLUMDOWN|
|SDL-SCANCODE-KBDILLUMUP         |SDLK-KBDILLUMUP|
|SDL-SCANCODE-EJECT              |SDLK-EJECT|
|SDL-SCANCODE-SLEEP              |SDLK-SLEEP|
|SDL-SCANCODE-APP1               |SDLK-APP1|
|SDL-SCANCODE-APP2               |SDLK-APP2|
|SDL-SCANCODE-AUDIOREWIND        |SDLK-AUDIOREWIND|
|SDL-SCANCODE-AUDIOFASTFORWARD   |SDLK-AUDIOFASTFORWARD|
|                                |SDLK-EXCLAIM|
|                                |SDLK-QUOTEDBL|
|        		         |SDLK-HASH|
|				 |SDLK-PERCENT|
|				 |SDLK-DOLLAR|
|				 |SDLK-AMPERSAND|
|				 |SDLK-LEFTPAREN|
|				 |SDLK-RIGHTPAREN|
|				 |SDLK-ASTERISK|
|				 |SDLK-PLUS|
|				 |SDLK-COLON|
|				 |SDLK-LESS|
|				 |SDLK-GREATER|
|				 |SDLK-QUESTION|
|				 |SDLK-AT|
|				 |SDLK-CARET|
|				 |SDLK-UNDERSCORE|

<br>

|*Key Modifer*|
|:------------|
|KMOD-NONE|
|KMOD-LSHIFT|
|KMOD-RSHIFT|
|KMOD-LCTRL|
|KMOD-RCTRL|
|KMOD-LALT|
|KMOD-RALT|
|KMOD-LGUI|
|KMOD-RGUI|
|KMOD-NUM|
|KMOD-CAPS|
|KMOD-MODE|
|KMOD-RESERVED|
|KMOD-CTRL|
|KMOD-SHIFT|
|KMOD-ALT|
|KMOD-GUI|

<br>

|*Device Query*|
|:-------------|
|SDL-QUERY     |
|SDL-IGNORE    |
|SDL-DISABLE   |
|SDL-ENABLE    |

<br>

# Extra

# Unsupported
